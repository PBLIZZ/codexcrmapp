import { Database } from './database.types';
import { ContactsRepository } from './repositories';
export * from './database.types';
export { ContactsRepository, };
export { getSupabaseClient } from './utils/db-helpers';
/**
 * Create a database client with all repositories
 * @param supabaseUrl Supabase URL
 * @param supabaseKey Supabase API key
 * @returns Object with all repositories
 */
export declare function createDatabaseClient(supabaseUrl: string, supabaseKey: string): {
    contacts: {
        getAllContacts(): Promise<{
            address_city: string | null;
            address_country: string | null;
            address_postal_code: string | null;
            address_street: string | null;
            client_since: string | null;
            communication_preferences: import("./database.types").Json | null;
            company_name: string | null;
            created_at: string;
            email: string;
            enriched_data: import("./database.types").Json | null;
            enrichment_status: string | null;
            full_name: string;
            id: string;
            job_title: string | null;
            last_assessment_date: string | null;
            last_contacted_at: string | null;
            notes: string | null;
            phone: string | null;
            phone_country_code: string | null;
            profile_image_url: string | null;
            referral_source: string | null;
            relationship_status: string | null;
            social_handles: string[] | null;
            source: string | null;
            tags: string[] | null;
            updated_at: string;
            user_id: string;
            website: string | null;
            wellness_goals: string[] | null;
            wellness_journey_stage: string | null;
            wellness_status: string | null;
        }[]>;
        getContactById(id: string): Promise<{
            address_city: string | null;
            address_country: string | null;
            address_postal_code: string | null;
            address_street: string | null;
            client_since: string | null;
            communication_preferences: import("./database.types").Json | null;
            company_name: string | null;
            created_at: string;
            email: string;
            enriched_data: import("./database.types").Json | null;
            enrichment_status: string | null;
            full_name: string;
            id: string;
            job_title: string | null;
            last_assessment_date: string | null;
            last_contacted_at: string | null;
            notes: string | null;
            phone: string | null;
            phone_country_code: string | null;
            profile_image_url: string | null;
            referral_source: string | null;
            relationship_status: string | null;
            social_handles: string[] | null;
            source: string | null;
            tags: string[] | null;
            updated_at: string;
            user_id: string;
            website: string | null;
            wellness_goals: string[] | null;
            wellness_journey_stage: string | null;
            wellness_status: string | null;
        } | null>;
        getContactWithProfile(id: string): Promise<({
            address_city: string | null;
            address_country: string | null;
            address_postal_code: string | null;
            address_street: string | null;
            client_since: string | null;
            communication_preferences: import("./database.types").Json | null;
            company_name: string | null;
            created_at: string;
            email: string;
            enriched_data: import("./database.types").Json | null;
            enrichment_status: string | null;
            full_name: string;
            id: string;
            job_title: string | null;
            last_assessment_date: string | null;
            last_contacted_at: string | null;
            notes: string | null;
            phone: string | null;
            phone_country_code: string | null;
            profile_image_url: string | null;
            referral_source: string | null;
            relationship_status: string | null;
            social_handles: string[] | null;
            source: string | null;
            tags: string[] | null;
            updated_at: string;
            user_id: string;
            website: string | null;
            wellness_goals: string[] | null;
            wellness_journey_stage: string | null;
            wellness_status: string | null;
        } & {
            profile?: {
                contact_id: string;
                created_at: string | null;
                custom_fields: import("./database.types").Json | null;
                detailed_bio: string | null;
                family_members: import("./database.types").Json[] | null;
                health_metrics: import("./database.types").Json | null;
                id: string;
                important_dates: import("./database.types").Json | null;
                personality_traits: string[] | null;
                preferences: import("./database.types").Json | null;
                updated_at: string | null;
                user_id: string;
                wellness_history: string | null;
            } | null;
        }) | null>;
        createContact(contact: {
            address_city?: string | null;
            address_country?: string | null;
            address_postal_code?: string | null;
            address_street?: string | null;
            client_since?: string | null;
            communication_preferences?: import("./database.types").Json | null;
            company_name?: string | null;
            created_at?: string;
            email: string;
            enriched_data?: import("./database.types").Json | null;
            enrichment_status?: string | null;
            full_name: string;
            id?: string;
            job_title?: string | null;
            last_assessment_date?: string | null;
            last_contacted_at?: string | null;
            notes?: string | null;
            phone?: string | null;
            phone_country_code?: string | null;
            profile_image_url?: string | null;
            referral_source?: string | null;
            relationship_status?: string | null;
            social_handles?: string[] | null;
            source?: string | null;
            tags?: string[] | null;
            updated_at?: string;
            user_id: string;
            website?: string | null;
            wellness_goals?: string[] | null;
            wellness_journey_stage?: string | null;
            wellness_status?: string | null;
        }): Promise<{
            address_city: string | null;
            address_country: string | null;
            address_postal_code: string | null;
            address_street: string | null;
            client_since: string | null;
            communication_preferences: import("./database.types").Json | null;
            company_name: string | null;
            created_at: string;
            email: string;
            enriched_data: import("./database.types").Json | null;
            enrichment_status: string | null;
            full_name: string;
            id: string;
            job_title: string | null;
            last_assessment_date: string | null;
            last_contacted_at: string | null;
            notes: string | null;
            phone: string | null;
            phone_country_code: string | null;
            profile_image_url: string | null;
            referral_source: string | null;
            relationship_status: string | null;
            social_handles: string[] | null;
            source: string | null;
            tags: string[] | null;
            updated_at: string;
            user_id: string;
            website: string | null;
            wellness_goals: string[] | null;
            wellness_journey_stage: string | null;
            wellness_status: string | null;
        }>;
        createContactWithProfile(contact: {
            address_city?: string | null;
            address_country?: string | null;
            address_postal_code?: string | null;
            address_street?: string | null;
            client_since?: string | null;
            communication_preferences?: import("./database.types").Json | null;
            company_name?: string | null;
            created_at?: string;
            email: string;
            enriched_data?: import("./database.types").Json | null;
            enrichment_status?: string | null;
            full_name: string;
            id?: string;
            job_title?: string | null;
            last_assessment_date?: string | null;
            last_contacted_at?: string | null;
            notes?: string | null;
            phone?: string | null;
            phone_country_code?: string | null;
            profile_image_url?: string | null;
            referral_source?: string | null;
            relationship_status?: string | null;
            social_handles?: string[] | null;
            source?: string | null;
            tags?: string[] | null;
            updated_at?: string;
            user_id: string;
            website?: string | null;
            wellness_goals?: string[] | null;
            wellness_journey_stage?: string | null;
            wellness_status?: string | null;
        }, profile: Omit<{
            contact_id: string;
            created_at?: string | null;
            custom_fields?: import("./database.types").Json | null;
            detailed_bio?: string | null;
            family_members?: import("./database.types").Json[] | null;
            health_metrics?: import("./database.types").Json | null;
            id?: string;
            important_dates?: import("./database.types").Json | null;
            personality_traits?: string[] | null;
            preferences?: import("./database.types").Json | null;
            updated_at?: string | null;
            user_id: string;
            wellness_history?: string | null;
        }, "contact_id" | "user_id">): Promise<{
            address_city: string | null;
            address_country: string | null;
            address_postal_code: string | null;
            address_street: string | null;
            client_since: string | null;
            communication_preferences: import("./database.types").Json | null;
            company_name: string | null;
            created_at: string;
            email: string;
            enriched_data: import("./database.types").Json | null;
            enrichment_status: string | null;
            full_name: string;
            id: string;
            job_title: string | null;
            last_assessment_date: string | null;
            last_contacted_at: string | null;
            notes: string | null;
            phone: string | null;
            phone_country_code: string | null;
            profile_image_url: string | null;
            referral_source: string | null;
            relationship_status: string | null;
            social_handles: string[] | null;
            source: string | null;
            tags: string[] | null;
            updated_at: string;
            user_id: string;
            website: string | null;
            wellness_goals: string[] | null;
            wellness_journey_stage: string | null;
            wellness_status: string | null;
        } & {
            profile?: {
                contact_id: string;
                created_at: string | null;
                custom_fields: import("./database.types").Json | null;
                detailed_bio: string | null;
                family_members: import("./database.types").Json[] | null;
                health_metrics: import("./database.types").Json | null;
                id: string;
                important_dates: import("./database.types").Json | null;
                personality_traits: string[] | null;
                preferences: import("./database.types").Json | null;
                updated_at: string | null;
                user_id: string;
                wellness_history: string | null;
            } | null;
        }>;
        updateContact(id: string, updates: {
            address_city?: string | null;
            address_country?: string | null;
            address_postal_code?: string | null;
            address_street?: string | null;
            client_since?: string | null;
            communication_preferences?: import("./database.types").Json | null;
            company_name?: string | null;
            created_at?: string;
            email?: string;
            enriched_data?: import("./database.types").Json | null;
            enrichment_status?: string | null;
            full_name?: string;
            id?: string;
            job_title?: string | null;
            last_assessment_date?: string | null;
            last_contacted_at?: string | null;
            notes?: string | null;
            phone?: string | null;
            phone_country_code?: string | null;
            profile_image_url?: string | null;
            referral_source?: string | null;
            relationship_status?: string | null;
            social_handles?: string[] | null;
            source?: string | null;
            tags?: string[] | null;
            updated_at?: string;
            user_id?: string;
            website?: string | null;
            wellness_goals?: string[] | null;
            wellness_journey_stage?: string | null;
            wellness_status?: string | null;
        }): Promise<{
            address_city: string | null;
            address_country: string | null;
            address_postal_code: string | null;
            address_street: string | null;
            client_since: string | null;
            communication_preferences: import("./database.types").Json | null;
            company_name: string | null;
            created_at: string;
            email: string;
            enriched_data: import("./database.types").Json | null;
            enrichment_status: string | null;
            full_name: string;
            id: string;
            job_title: string | null;
            last_assessment_date: string | null;
            last_contacted_at: string | null;
            notes: string | null;
            phone: string | null;
            phone_country_code: string | null;
            profile_image_url: string | null;
            referral_source: string | null;
            relationship_status: string | null;
            social_handles: string[] | null;
            source: string | null;
            tags: string[] | null;
            updated_at: string;
            user_id: string;
            website: string | null;
            wellness_goals: string[] | null;
            wellness_journey_stage: string | null;
            wellness_status: string | null;
        }>;
        deleteContact(id: string): Promise<boolean>;
        searchContacts(query: string): Promise<{
            address_city: string | null;
            address_country: string | null;
            address_postal_code: string | null;
            address_street: string | null;
            client_since: string | null;
            communication_preferences: import("./database.types").Json | null;
            company_name: string | null;
            created_at: string;
            email: string;
            enriched_data: import("./database.types").Json | null;
            enrichment_status: string | null;
            full_name: string;
            id: string;
            job_title: string | null;
            last_assessment_date: string | null;
            last_contacted_at: string | null;
            notes: string | null;
            phone: string | null;
            phone_country_code: string | null;
            profile_image_url: string | null;
            referral_source: string | null;
            relationship_status: string | null;
            social_handles: string[] | null;
            source: string | null;
            tags: string[] | null;
            updated_at: string;
            user_id: string;
            website: string | null;
            wellness_goals: string[] | null;
            wellness_journey_stage: string | null;
            wellness_status: string | null;
        }[]>;
        getContactsWithWellnessGoals(): Promise<{
            address_city: string | null;
            address_country: string | null;
            address_postal_code: string | null;
            address_street: string | null;
            client_since: string | null;
            communication_preferences: import("./database.types").Json | null;
            company_name: string | null;
            created_at: string;
            email: string;
            enriched_data: import("./database.types").Json | null;
            enrichment_status: string | null;
            full_name: string;
            id: string;
            job_title: string | null;
            last_assessment_date: string | null;
            last_contacted_at: string | null;
            notes: string | null;
            phone: string | null;
            phone_country_code: string | null;
            profile_image_url: string | null;
            referral_source: string | null;
            relationship_status: string | null;
            social_handles: string[] | null;
            source: string | null;
            tags: string[] | null;
            updated_at: string;
            user_id: string;
            website: string | null;
            wellness_goals: string[] | null;
            wellness_journey_stage: string | null;
            wellness_status: string | null;
        }[]>;
        getContactsByJourneyStage(stage: string): Promise<{
            address_city: string | null;
            address_country: string | null;
            address_postal_code: string | null;
            address_street: string | null;
            client_since: string | null;
            communication_preferences: import("./database.types").Json | null;
            company_name: string | null;
            created_at: string;
            email: string;
            enriched_data: import("./database.types").Json | null;
            enrichment_status: string | null;
            full_name: string;
            id: string;
            job_title: string | null;
            last_assessment_date: string | null;
            last_contacted_at: string | null;
            notes: string | null;
            phone: string | null;
            phone_country_code: string | null;
            profile_image_url: string | null;
            referral_source: string | null;
            relationship_status: string | null;
            social_handles: string[] | null;
            source: string | null;
            tags: string[] | null;
            updated_at: string;
            user_id: string;
            website: string | null;
            wellness_goals: string[] | null;
            wellness_journey_stage: string | null;
            wellness_status: string | null;
        }[]>;
    };
    supabase: import("@supabase/supabase-js").SupabaseClient<Database, "public", {
        Tables: {
            contact_profiles: {
                Row: {
                    contact_id: string;
                    created_at: string | null;
                    custom_fields: import("./database.types").Json | null;
                    detailed_bio: string | null;
                    family_members: import("./database.types").Json[] | null;
                    health_metrics: import("./database.types").Json | null;
                    id: string;
                    important_dates: import("./database.types").Json | null;
                    personality_traits: string[] | null;
                    preferences: import("./database.types").Json | null;
                    updated_at: string | null;
                    user_id: string;
                    wellness_history: string | null;
                };
                Insert: {
                    contact_id: string;
                    created_at?: string | null;
                    custom_fields?: import("./database.types").Json | null;
                    detailed_bio?: string | null;
                    family_members?: import("./database.types").Json[] | null;
                    health_metrics?: import("./database.types").Json | null;
                    id?: string;
                    important_dates?: import("./database.types").Json | null;
                    personality_traits?: string[] | null;
                    preferences?: import("./database.types").Json | null;
                    updated_at?: string | null;
                    user_id: string;
                    wellness_history?: string | null;
                };
                Update: {
                    contact_id?: string;
                    created_at?: string | null;
                    custom_fields?: import("./database.types").Json | null;
                    detailed_bio?: string | null;
                    family_members?: import("./database.types").Json[] | null;
                    health_metrics?: import("./database.types").Json | null;
                    id?: string;
                    important_dates?: import("./database.types").Json | null;
                    personality_traits?: string[] | null;
                    preferences?: import("./database.types").Json | null;
                    updated_at?: string | null;
                    user_id?: string;
                    wellness_history?: string | null;
                };
                Relationships: [{
                    foreignKeyName: "contact_profiles_contact_id_fkey";
                    columns: ["contact_id"];
                    isOneToOne: false;
                    referencedRelation: "contacts";
                    referencedColumns: ["id"];
                }];
            };
            contacts: {
                Row: {
                    address_city: string | null;
                    address_country: string | null;
                    address_postal_code: string | null;
                    address_street: string | null;
                    client_since: string | null;
                    communication_preferences: import("./database.types").Json | null;
                    company_name: string | null;
                    created_at: string;
                    email: string;
                    enriched_data: import("./database.types").Json | null;
                    enrichment_status: string | null;
                    full_name: string;
                    id: string;
                    job_title: string | null;
                    last_assessment_date: string | null;
                    last_contacted_at: string | null;
                    notes: string | null;
                    phone: string | null;
                    phone_country_code: string | null;
                    profile_image_url: string | null;
                    referral_source: string | null;
                    relationship_status: string | null;
                    social_handles: string[] | null;
                    source: string | null;
                    tags: string[] | null;
                    updated_at: string;
                    user_id: string;
                    website: string | null;
                    wellness_goals: string[] | null;
                    wellness_journey_stage: string | null;
                    wellness_status: string | null;
                };
                Insert: {
                    address_city?: string | null;
                    address_country?: string | null;
                    address_postal_code?: string | null;
                    address_street?: string | null;
                    client_since?: string | null;
                    communication_preferences?: import("./database.types").Json | null;
                    company_name?: string | null;
                    created_at?: string;
                    email: string;
                    enriched_data?: import("./database.types").Json | null;
                    enrichment_status?: string | null;
                    full_name: string;
                    id?: string;
                    job_title?: string | null;
                    last_assessment_date?: string | null;
                    last_contacted_at?: string | null;
                    notes?: string | null;
                    phone?: string | null;
                    phone_country_code?: string | null;
                    profile_image_url?: string | null;
                    referral_source?: string | null;
                    relationship_status?: string | null;
                    social_handles?: string[] | null;
                    source?: string | null;
                    tags?: string[] | null;
                    updated_at?: string;
                    user_id: string;
                    website?: string | null;
                    wellness_goals?: string[] | null;
                    wellness_journey_stage?: string | null;
                    wellness_status?: string | null;
                };
                Update: {
                    address_city?: string | null;
                    address_country?: string | null;
                    address_postal_code?: string | null;
                    address_street?: string | null;
                    client_since?: string | null;
                    communication_preferences?: import("./database.types").Json | null;
                    company_name?: string | null;
                    created_at?: string;
                    email?: string;
                    enriched_data?: import("./database.types").Json | null;
                    enrichment_status?: string | null;
                    full_name?: string;
                    id?: string;
                    job_title?: string | null;
                    last_assessment_date?: string | null;
                    last_contacted_at?: string | null;
                    notes?: string | null;
                    phone?: string | null;
                    phone_country_code?: string | null;
                    profile_image_url?: string | null;
                    referral_source?: string | null;
                    relationship_status?: string | null;
                    social_handles?: string[] | null;
                    source?: string | null;
                    tags?: string[] | null;
                    updated_at?: string;
                    user_id?: string;
                    website?: string | null;
                    wellness_goals?: string[] | null;
                    wellness_journey_stage?: string | null;
                    wellness_status?: string | null;
                };
                Relationships: [];
            };
            group_members: {
                Row: {
                    contact_id: string;
                    created_at: string;
                    group_id: string;
                    id: string;
                };
                Insert: {
                    contact_id: string;
                    created_at?: string;
                    group_id: string;
                    id?: string;
                };
                Update: {
                    contact_id?: string;
                    created_at?: string;
                    group_id?: string;
                    id?: string;
                };
                Relationships: [{
                    foreignKeyName: "group_members_contact_id_fkey";
                    columns: ["contact_id"];
                    isOneToOne: false;
                    referencedRelation: "contacts";
                    referencedColumns: ["id"];
                }, {
                    foreignKeyName: "group_members_group_id_fkey";
                    columns: ["group_id"];
                    isOneToOne: false;
                    referencedRelation: "groups";
                    referencedColumns: ["id"];
                }];
            };
            groups: {
                Row: {
                    color: string | null;
                    created_at: string;
                    description: string | null;
                    emoji: string | null;
                    id: string;
                    name: string;
                    updated_at: string;
                    user_id: string;
                };
                Insert: {
                    color?: string | null;
                    created_at?: string;
                    description?: string | null;
                    emoji?: string | null;
                    id?: string;
                    name: string;
                    updated_at?: string;
                    user_id: string;
                };
                Update: {
                    color?: string | null;
                    created_at?: string;
                    description?: string | null;
                    emoji?: string | null;
                    id?: string;
                    name?: string;
                    updated_at?: string;
                    user_id?: string;
                };
                Relationships: [];
            };
            tags: {
                Row: {
                    color: string | null;
                    created_at: string;
                    id: string;
                    name: string;
                    updated_at: string;
                    user_id: string;
                };
                Insert: {
                    color?: string | null;
                    created_at?: string;
                    id?: string;
                    name: string;
                    updated_at?: string;
                    user_id: string;
                };
                Update: {
                    color?: string | null;
                    created_at?: string;
                    id?: string;
                    name?: string;
                    updated_at?: string;
                    user_id?: string;
                };
                Relationships: [];
            };
        };
        Views: { [_ in never]: never; };
        Functions: {
            can_manage_group: {
                Args: {
                    group_id: string;
                };
                Returns: boolean;
            };
            get_contacts_by_journey_stage: {
                Args: Record<PropertyKey, never>;
                Returns: {
                    wellness_journey_stage: string;
                    count: number;
                }[];
            };
            get_current_user_id: {
                Args: Record<PropertyKey, never>;
                Returns: string;
            };
        };
        Enums: { [_ in never]: never; };
        CompositeTypes: { [_ in never]: never; };
    }>;
};
//# sourceMappingURL=index.d.ts.map