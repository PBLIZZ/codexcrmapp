{"version":3,"sources":["../src/components/ui/avatar.tsx","../src/lib/utils.ts","../src/components/ui/themed-card.tsx","../src/components/core/ThemeProvider.tsx","../src/lib/theme.ts","../src/components/ui/metric-card.tsx","../src/components/ui/contact-card.tsx","../src/components/ui/timeline.tsx","../src/components/ui/task-card.tsx","../src/components/ui/loading-spinner.tsx","../src/components/core/Button.tsx","../src/components/core/ThemeDemo.tsx","../src/components/core/MetricCardDemo.tsx","../src/components/core/ContactCardDemo.tsx","../src/components/core/TimelineDemo.tsx","../src/components/core/TaskCardDemo.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"../../lib/utils\"\n\nfunction Avatar({\n  className,\n  ...props\n}: React.ComponentProps<typeof AvatarPrimitive.Root>) {\n  return (\n    <AvatarPrimitive.Root\n      data-slot=\"avatar\"\n      className={cn(\n        \"relative flex size-8 shrink-0 overflow-hidden rounded-full\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction AvatarImage({\n  className,\n  ...props\n}: React.ComponentProps<typeof AvatarPrimitive.Image>) {\n  return (\n    <AvatarPrimitive.Image\n      data-slot=\"avatar-image\"\n      className={cn(\"aspect-square size-full\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction AvatarFallback({\n  className,\n  ...props\n}: React.ComponentProps<typeof AvatarPrimitive.Fallback>) {\n  return (\n    <AvatarPrimitive.Fallback\n      data-slot=\"avatar-fallback\"\n      className={cn(\n        \"bg-muted flex size-full items-center justify-center rounded-full\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","import { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n","'use client';\n\nimport { forwardRef } from 'react';\nimport { cn } from '../../lib/utils';\nimport { useTheme } from '../core/ThemeProvider';\n\nexport interface ThemedCardProps extends React.HTMLAttributes<HTMLDivElement> {\n  variant?: 'default' | 'primary' | 'accent' | 'outline';\n  size?: 'sm' | 'md' | 'lg';\n  withHover?: boolean;\n  withShadow?: boolean;\n}\n\nconst ThemedCard = forwardRef<HTMLDivElement, ThemedCardProps>(\n  (\n    {\n      className,\n      variant = 'default',\n      size = 'md',\n      withHover = false,\n      withShadow = false,\n      ...props\n    },\n    ref\n  ) => {\n    const { isDarkMode } = useTheme();\n\n    // Size classes\n    const sizeClasses = {\n      sm: 'p-3',\n      md: 'p-4',\n      lg: 'p-6',\n    };\n\n    // Variant classes based on theme\n    const variantClasses = {\n      default: 'bg-card text-card-foreground',\n      primary: 'bg-primary text-primary-foreground',\n      accent: 'bg-accent text-accent-foreground',\n      outline: 'border border-border bg-transparent',\n    };\n\n    // Shadow classes\n    const shadowClass = withShadow\n      ? isDarkMode\n        ? 'shadow-md shadow-black/20'\n        : 'shadow-md shadow-black/10'\n      : '';\n\n    // Hover effect classes\n    const hoverClass = withHover\n      ? variant === 'default'\n        ? 'hover:bg-muted/50 transition-colors'\n        : variant === 'primary'\n        ? 'hover:bg-primary/90 transition-colors'\n        : variant === 'accent'\n        ? 'hover:bg-accent/90 transition-colors'\n        : 'hover:bg-muted/10 transition-colors'\n      : '';\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          'rounded-lg',\n          variantClasses[variant],\n          sizeClasses[size],\n          shadowClass,\n          hoverClass,\n          className\n        )}\n        {...props}\n      />\n    );\n  }\n);\n\nThemedCard.displayName = 'ThemedCard';\n\nexport interface ThemedCardHeaderProps\n  extends React.HTMLAttributes<HTMLDivElement> {}\n\nconst ThemedCardHeader = forwardRef<HTMLDivElement, ThemedCardHeaderProps>(\n  ({ className, ...props }, ref) => (\n    <div\n      ref={ref}\n      className={cn('flex flex-col space-y-1.5', className)}\n      {...props}\n    />\n  )\n);\n\nThemedCardHeader.displayName = 'ThemedCardHeader';\n\nexport interface ThemedCardTitleProps\n  extends React.HTMLAttributes<HTMLHeadingElement> {\n  level?: 1 | 2 | 3 | 4 | 5 | 6;\n}\n\nconst ThemedCardTitle = forwardRef<HTMLHeadingElement, ThemedCardTitleProps>(\n  ({ className, level = 3, ...props }, ref) => {\n    const titleClasses = cn(\n      'font-semibold leading-none tracking-tight',\n      level === 1 && 'text-2xl',\n      level === 2 && 'text-xl',\n      level === 3 && 'text-lg',\n      level === 4 && 'text-base',\n      level === 5 && 'text-sm',\n      level === 6 && 'text-xs',\n      className\n    );\n\n    switch (level) {\n      case 1:\n        return <h1 ref={ref} className={titleClasses} {...props} />;\n      case 2:\n        return <h2 ref={ref} className={titleClasses} {...props} />;\n      case 3:\n        return <h3 ref={ref} className={titleClasses} {...props} />;\n      case 4:\n        return <h4 ref={ref} className={titleClasses} {...props} />;\n      case 5:\n        return <h5 ref={ref} className={titleClasses} {...props} />;\n      case 6:\n        return <h6 ref={ref} className={titleClasses} {...props} />;\n      default:\n        return <h3 ref={ref} className={titleClasses} {...props} />;\n    }\n  }\n);\n\nThemedCardTitle.displayName = 'ThemedCardTitle';\n\nexport interface ThemedCardDescriptionProps\n  extends React.HTMLAttributes<HTMLParagraphElement> {}\n\nconst ThemedCardDescription = forwardRef<\n  HTMLParagraphElement,\n  ThemedCardDescriptionProps\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn('text-sm text-muted-foreground', className)}\n    {...props}\n  />\n));\n\nThemedCardDescription.displayName = 'ThemedCardDescription';\n\nexport interface ThemedCardContentProps\n  extends React.HTMLAttributes<HTMLDivElement> {}\n\nconst ThemedCardContent = forwardRef<HTMLDivElement, ThemedCardContentProps>(\n  ({ className, ...props }, ref) => (\n    <div ref={ref} className={cn('pt-0', className)} {...props} />\n  )\n);\n\nThemedCardContent.displayName = 'ThemedCardContent';\n\nexport interface ThemedCardFooterProps\n  extends React.HTMLAttributes<HTMLDivElement> {}\n\nconst ThemedCardFooter = forwardRef<HTMLDivElement, ThemedCardFooterProps>(\n  ({ className, ...props }, ref) => (\n    <div\n      ref={ref}\n      className={cn('flex items-center pt-4', className)}\n      {...props}\n    />\n  )\n);\n\nThemedCardFooter.displayName = 'ThemedCardFooter';\n\nexport {\n  ThemedCard,\n  ThemedCardHeader,\n  ThemedCardTitle,\n  ThemedCardDescription,\n  ThemedCardContent,\n  ThemedCardFooter,\n};\n","'use client';\n\nimport { createContext, useContext, useEffect, useState, type ReactNode } from 'react';\nimport { initializeTheme, toggleDarkMode, isDarkMode } from '../../lib/theme';\n\ntype ThemeProviderProps = {\n  children: ReactNode;\n  defaultTheme?: 'light' | 'dark' | 'system';\n};\n\ntype ThemeContextType = {\n  theme: 'light' | 'dark' | 'system';\n  setTheme: (theme: 'light' | 'dark' | 'system') => void;\n  isDarkMode: boolean;\n};\n\nconst initialState: ThemeContextType = {\n  theme: 'system',\n  setTheme: () => null,\n  isDarkMode: false,\n};\n\nconst ThemeContext = createContext<ThemeContextType>(initialState);\n\nexport function ThemeProvider({\n  children,\n  defaultTheme = 'system',\n}: ThemeProviderProps) {\n  const [theme, setTheme] = useState<'light' | 'dark' | 'system'>(defaultTheme);\n  const [darkMode, setDarkMode] = useState<boolean>(false);\n\n  useEffect(() => {\n    // Initialize theme on mount\n    initializeTheme();\n    setDarkMode(isDarkMode());\n\n    // Get saved theme from localStorage\n    const savedTheme = localStorage.getItem('theme') as 'light' | 'dark' | null;\n    if (savedTheme) {\n      setTheme(savedTheme);\n    } else {\n      setTheme('system');\n    }\n\n    // Listen for system preference changes\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    const handleChange = () => {\n      if (theme === 'system') {\n        toggleDarkMode(mediaQuery.matches);\n        setDarkMode(mediaQuery.matches);\n      }\n    };\n\n    mediaQuery.addEventListener('change', handleChange);\n    return () => mediaQuery.removeEventListener('change', handleChange);\n  }, [theme]);\n\n  const value = {\n    theme,\n    setTheme: (newTheme: 'light' | 'dark' | 'system') => {\n      setTheme(newTheme);\n      \n      if (newTheme === 'system') {\n        const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n        toggleDarkMode(prefersDark);\n        setDarkMode(prefersDark);\n        localStorage.removeItem('theme');\n      } else {\n        toggleDarkMode(newTheme === 'dark');\n        setDarkMode(newTheme === 'dark');\n        localStorage.setItem('theme', newTheme);\n      }\n    },\n    isDarkMode: darkMode,\n  };\n\n  return (\n    <ThemeContext.Provider value={value}>\n      {children}\n    </ThemeContext.Provider>\n  );\n}\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n\nexport function ThemeToggle() {\n  const { theme, setTheme } = useTheme();\n  \n  return (\n    <button\n      onClick={() => setTheme(theme === 'dark' ? 'light' : 'dark')}\n      className=\"p-2 rounded-md bg-background hover:bg-accent/10 transition-colors\"\n      aria-label=\"Toggle theme\"\n    >\n      {theme === 'dark' ? (\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"20\"\n          height=\"20\"\n          viewBox=\"0 0 24 24\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          className=\"text-accent\"\n        >\n          <circle cx=\"12\" cy=\"12\" r=\"5\" />\n          <line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"3\" />\n          <line x1=\"12\" y1=\"21\" x2=\"12\" y2=\"23\" />\n          <line x1=\"4.22\" y1=\"4.22\" x2=\"5.64\" y2=\"5.64\" />\n          <line x1=\"18.36\" y1=\"18.36\" x2=\"19.78\" y2=\"19.78\" />\n          <line x1=\"1\" y1=\"12\" x2=\"3\" y2=\"12\" />\n          <line x1=\"21\" y1=\"12\" x2=\"23\" y2=\"12\" />\n          <line x1=\"4.22\" y1=\"19.78\" x2=\"5.64\" y2=\"18.36\" />\n          <line x1=\"18.36\" y1=\"5.64\" x2=\"19.78\" y2=\"4.22\" />\n        </svg>\n      ) : (\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"20\"\n          height=\"20\"\n          viewBox=\"0 0 24 24\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          className=\"text-primary\"\n        >\n          <path d=\"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z\" />\n        </svg>\n      )}\n    </button>\n  );\n}","/**\n * Type for nested color values in themeConfig\n */\ntype ColorValue = string | { [key: string]: ColorValue };\n\n/**\n * Theme configuration for the wellness design system\n */\nexport const themeConfig = {\n  colors: {\n    primary: {\n      50: 'var(--primary-50)',\n      100: 'var(--primary-100)',\n      200: 'var(--primary-200)',\n      300: 'var(--primary-300)',\n      400: 'var(--primary-400)',\n      500: 'var(--primary-500)',\n      600: 'var(--primary-600)',\n      700: 'var(--primary-700)',\n      800: 'var(--primary-800)',\n      900: 'var(--primary-900)',\n      950: 'var(--primary-950)',\n      DEFAULT: 'var(--primary)',\n      foreground: 'var(--primary-foreground)',\n    },\n    accent: {\n      50: 'var(--accent-50)',\n      100: 'var(--accent-100)',\n      200: 'var(--accent-200)',\n      300: 'var(--accent-300)',\n      400: 'var(--accent-400)',\n      500: 'var(--accent-500)',\n      600: 'var(--accent-600)',\n      700: 'var(--accent-700)',\n      800: 'var(--accent-800)',\n      900: 'var(--accent-900)',\n      950: 'var(--accent-950)',\n      DEFAULT: 'var(--accent)',\n      foreground: 'var(--accent-foreground)',\n    },\n    wellness: {\n      teal: {\n        50: '#e6f7f7',\n        100: '#ccefef',\n        200: '#99dfdf',\n        300: '#66cfcf',\n        400: '#33bfbf',\n        500: '#00afaf',\n        600: '#008c8c',\n        700: '#006969',\n        800: '#004646',\n        900: '#002323',\n        950: '#001111',\n      },\n      orange: {\n        50: '#fff7e6',\n        100: '#ffefcc',\n        200: '#ffdf99',\n        300: '#ffcf66',\n        400: '#ffbf33',\n        500: '#ffaf00',\n        600: '#cc8c00',\n        700: '#996900',\n        800: '#664600',\n        900: '#332300',\n        950: '#1a1100',\n      },\n    },\n  },\n  borderRadius: {\n    sm: 'var(--radius-sm)',\n    md: 'var(--radius-md)',\n    lg: 'var(--radius-lg)',\n    xl: 'var(--radius-xl)',\n  },\n  spacing: {\n    content: {\n      xs: '0.5rem',\n      sm: '1rem',\n      md: '1.5rem',\n      lg: '2rem',\n      xl: '3rem',\n    },\n  },\n  typography: {\n    fontFamily: {\n      sans: 'var(--font-sans)',\n      mono: 'var(--font-mono)',\n    },\n  },\n  shadows: {\n    sm: '0 1px 2px 0 rgb(0 0 0 / 0.05)',\n    DEFAULT: '0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1)',\n    md: '0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1)',\n    lg: '0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)',\n    xl: '0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1)',\n  },\n};\n\n/**\n * Get a color value from the theme\n * @param path - Path to the color in the theme config (e.g., 'primary.500')\n * @returns CSS variable or direct color value\n */\nexport function getThemeColor(path: string): string {\n  const parts = path.split('.');\n  let current: ColorValue = themeConfig.colors;\n\n  for (const part of parts) {\n    if (current[part] === undefined) {\n      return '';\n    }\n    current = current[part];\n  }\n\n  return current;\n}\n\n/**\n * Check if the current theme is dark mode\n * @returns Boolean indicating if dark mode is active\n */\nexport function isDarkMode(): boolean {\n  if (typeof window === 'undefined') return false;\n  return document.documentElement.classList.contains('dark');\n}\n\n/**\n * Toggle between light and dark mode\n * @param isDark - Force a specific mode (optional)\n */\nexport function toggleDarkMode(isDark?: boolean): void {\n  if (typeof window === 'undefined') return;\n\n  const root = document.documentElement;\n  const newDarkMode =\n    isDark !== undefined ? isDark : !root.classList.contains('dark');\n\n  if (newDarkMode) {\n    root.classList.add('dark');\n    localStorage.setItem('theme', 'dark');\n  } else {\n    root.classList.remove('dark');\n    localStorage.setItem('theme', 'light');\n  }\n}\n\n/**\n * Initialize theme based on user preference or system setting\n */\nexport function initializeTheme(): void {\n  if (typeof window === 'undefined') return;\n\n  const savedTheme = localStorage.getItem('theme');\n  const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n\n  if (savedTheme === 'dark' || (!savedTheme && prefersDark)) {\n    document.documentElement.classList.add('dark');\n  } else {\n    document.documentElement.classList.remove('dark');\n  }\n}\n","'use client';\n\nimport { forwardRef } from 'react';\nimport { cn } from '../../lib/utils';\nimport { useTheme } from '../core/ThemeProvider';\n\n// Icons for trend indicators\nconst TrendUpIcon = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    className=\"text-green-500\"\n  >\n    <path d=\"m18 15-6-6-6 6\" />\n  </svg>\n);\n\nconst TrendDownIcon = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    className=\"text-red-500\"\n  >\n    <path d=\"m6 9 6 6 6-6\" />\n  </svg>\n);\n\nconst TrendNeutralIcon = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    className=\"text-gray-500\"\n  >\n    <path d=\"M5 12h14\" />\n  </svg>\n);\n\n// Loading skeleton component\nconst MetricCardSkeleton = ({ className }: { className?: string }) => (\n  <div className={cn('animate-pulse space-y-3', className)}>\n    <div className=\"h-4 w-1/3 rounded bg-muted\"></div>\n    <div className=\"h-8 w-2/3 rounded bg-muted\"></div>\n    <div className=\"h-4 w-1/4 rounded bg-muted\"></div>\n  </div>\n);\n\nexport interface MetricCardProps extends React.HTMLAttributes<HTMLDivElement> {\n  title: string;\n  value: string | number;\n  trend?: 'up' | 'down' | 'neutral';\n  trendValue?: string;\n  trendLabel?: string;\n  icon?: React.ReactNode;\n  chart?: React.ReactNode;\n  loading?: boolean;\n  size?: 'sm' | 'md' | 'lg';\n  variant?: 'default' | 'primary' | 'accent' | 'outline';\n  withHover?: boolean;\n  withShadow?: boolean;\n  footer?: React.ReactNode;\n}\n\nexport const MetricCard = forwardRef<HTMLDivElement, MetricCardProps>(\n  (\n    {\n      className,\n      title,\n      value,\n      trend = 'neutral',\n      trendValue,\n      trendLabel,\n      icon,\n      chart,\n      loading = false,\n      size = 'md',\n      variant = 'default',\n      withHover = false,\n      withShadow = false,\n      footer,\n      ...props\n    },\n    ref\n  ) => {\n    const { isDarkMode } = useTheme();\n\n    // Size classes\n    const sizeClasses = {\n      sm: 'p-3 space-y-1',\n      md: 'p-4 space-y-2',\n      lg: 'p-6 space-y-3',\n    };\n\n    // Variant classes based on theme\n    const variantClasses = {\n      default: 'bg-card text-card-foreground',\n      primary: 'bg-primary text-primary-foreground',\n      accent: 'bg-accent text-accent-foreground',\n      outline: 'border border-border bg-transparent',\n    };\n\n    // Shadow classes\n    const shadowClass = withShadow ? (isDarkMode ? 'shadow-md shadow-black/20' : 'shadow-md shadow-black/10') : '';\n\n    // Hover effect classes\n    const hoverClass = withHover\n      ? variant === 'default'\n        ? 'hover:bg-muted/50 transition-colors'\n        : variant === 'primary'\n        ? 'hover:bg-primary/90 transition-colors'\n        : variant === 'accent'\n        ? 'hover:bg-accent/90 transition-colors'\n        : 'hover:bg-muted/10 transition-colors'\n      : '';\n\n    // Value size classes\n    const valueSize = {\n      sm: 'text-xl',\n      md: 'text-2xl',\n      lg: 'text-3xl',\n    };\n\n    // Trend icon\n    const trendIcon = trend === 'up' ? <TrendUpIcon /> : trend === 'down' ? <TrendDownIcon /> : <TrendNeutralIcon />;\n\n    // Trend color\n    const trendColor = trend === 'up' ? 'text-green-500' : trend === 'down' ? 'text-red-500' : 'text-gray-500';\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          'rounded-lg',\n          variantClasses[variant],\n          sizeClasses[size],\n          shadowClass,\n          hoverClass,\n          className\n        )}\n        {...props}\n      >\n        {loading ? (\n          <MetricCardSkeleton />\n        ) : (\n          <>\n            <div className=\"flex items-center justify-between\">\n              <h3 className=\"text-sm font-medium text-muted-foreground\">{title}</h3>\n              {icon && <div className=\"h-5 w-5\">{icon}</div>}\n            </div>\n\n            <div className=\"flex items-end justify-between\">\n              <div className={cn('font-bold', valueSize[size])}>{value}</div>\n              {trend && (\n                <div className=\"flex items-center space-x-1\">\n                  {trendIcon}\n                  {trendValue && <span className={cn('text-sm font-medium', trendColor)}>{trendValue}</span>}\n                </div>\n              )}\n            </div>\n\n            {trendLabel && <p className=\"text-xs text-muted-foreground\">{trendLabel}</p>}\n\n            {chart && <div className=\"mt-2\">{chart}</div>}\n\n            {footer && <div className=\"mt-2 pt-2 border-t border-border/50\">{footer}</div>}\n          </>\n        )}\n      </div>\n    );\n  }\n);\n\nMetricCard.displayName = 'MetricCard';\n\n// Simple line chart component for metrics\nexport interface SimpleLineChartProps {\n  data: number[];\n  height?: number;\n  color?: string;\n  className?: string;\n}\n\nexport const SimpleLineChart = ({\n  data,\n  height = 40,\n  color = 'var(--primary)',\n  className,\n}: SimpleLineChartProps) => {\n  // Find min and max values for scaling\n  const min = Math.min(...data);\n  const max = Math.max(...data);\n  const range = max - min || 1; // Avoid division by zero\n\n  // Calculate points for the SVG path\n  const points = data\n    .map((value, index) => {\n      const x = (index / (data.length - 1)) * 100;\n      const y = 100 - ((value - min) / range) * 100;\n      return `${x},${y}`;\n    })\n    .join(' ');\n\n  return (\n    <div className={cn('w-full', className)} style={{ height }}>\n      <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"none\">\n        <polyline\n          points={points}\n          fill=\"none\"\n          stroke={color}\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n      </svg>\n    </div>\n  );\n};\n\n// Progress indicator for metrics\nexport interface ProgressIndicatorProps {\n  value: number;\n  max?: number;\n  color?: string;\n  backgroundColor?: string;\n  size?: 'sm' | 'md' | 'lg';\n  showValue?: boolean;\n  className?: string;\n}\n\nexport const ProgressIndicator = ({\n  value,\n  max = 100,\n  color = 'var(--primary)',\n  backgroundColor = 'var(--muted)',\n  size = 'md',\n  showValue = false,\n  className,\n}: ProgressIndicatorProps) => {\n  const percentage = Math.min(100, Math.max(0, (value / max) * 100));\n  \n  const sizeClasses = {\n    sm: 'h-1',\n    md: 'h-2',\n    lg: 'h-3',\n  };\n\n  return (\n    <div className={cn('w-full space-y-1', className)}>\n      <div className={cn('w-full rounded-full overflow-hidden', sizeClasses[size])} style={{ backgroundColor }}>\n        <div\n          className=\"h-full rounded-full transition-all duration-300 ease-in-out\"\n          style={{ width: `${percentage}%`, backgroundColor: color }}\n        />\n      </div>\n      {showValue && (\n        <div className=\"flex justify-between text-xs text-muted-foreground\">\n          <span>{value}</span>\n          <span>{max}</span>\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Circular progress indicator\nexport interface CircularProgressProps {\n  value: number;\n  max?: number;\n  size?: number;\n  strokeWidth?: number;\n  color?: string;\n  backgroundColor?: string;\n  showValue?: boolean;\n  className?: string;\n}\n\nexport const CircularProgress = ({\n  value,\n  max = 100,\n  size = 40,\n  strokeWidth = 4,\n  color = 'var(--primary)',\n  backgroundColor = 'var(--muted)',\n  showValue = false,\n  className,\n}: CircularProgressProps) => {\n  const percentage = Math.min(100, Math.max(0, (value / max) * 100));\n  const radius = (size - strokeWidth) / 2;\n  const circumference = radius * 2 * Math.PI;\n  const dash = (percentage * circumference) / 100;\n\n  return (\n    <div className={cn('relative inline-flex items-center justify-center', className)}>\n      <svg width={size} height={size} viewBox={`0 0 ${size} ${size}`}>\n        <circle\n          cx={size / 2}\n          cy={size / 2}\n          r={radius}\n          fill=\"none\"\n          stroke={backgroundColor}\n          strokeWidth={strokeWidth}\n        />\n        <circle\n          cx={size / 2}\n          cy={size / 2}\n          r={radius}\n          fill=\"none\"\n          stroke={color}\n          strokeWidth={strokeWidth}\n          strokeDasharray={circumference}\n          strokeDashoffset={circumference - dash}\n          transform={`rotate(-90 ${size / 2} ${size / 2})`}\n          strokeLinecap=\"round\"\n          style={{ transition: 'stroke-dashoffset 0.5s ease-in-out' }}\n        />\n      </svg>\n      {showValue && (\n        <div className=\"absolute inset-0 flex items-center justify-center\">\n          <span className=\"text-xs font-medium\">{Math.round(percentage)}%</span>\n        </div>\n      )}\n    </div>\n  );\n};","'use client';\n\nimport { forwardRef } from 'react';\nimport { cn } from '../../lib/utils';\nimport { useTheme } from '../core/ThemeProvider';\n\n// Status indicator component\nexport interface StatusIndicatorProps {\n  status: 'online' | 'offline' | 'away' | 'busy' | 'custom';\n  customColor?: string;\n  className?: string;\n}\n\nexport const StatusIndicator = ({\n  status,\n  customColor,\n  className,\n}: StatusIndicatorProps) => {\n  const statusColors = {\n    online: 'bg-green-500',\n    offline: 'bg-gray-400',\n    away: 'bg-yellow-500',\n    busy: 'bg-red-500',\n    custom: '',\n  };\n\n  return (\n    <div\n      className={cn(\n        'h-3 w-3 rounded-full',\n        status !== 'custom' && statusColors[status],\n        className\n      )}\n      style={status === 'custom' && customColor ? { backgroundColor: customColor } : {}}\n    />\n  );\n};\n\n// Avatar component with optional status indicator\nexport interface ContactAvatarProps extends React.HTMLAttributes<HTMLDivElement> {\n  src?: string;\n  alt?: string;\n  initials?: string;\n  size?: 'sm' | 'md' | 'lg' | 'xl';\n  status?: 'online' | 'offline' | 'away' | 'busy' | 'custom';\n  statusColor?: string;\n  bordered?: boolean;\n  borderColor?: string;\n}\n\nexport const ContactAvatar = forwardRef<HTMLDivElement, ContactAvatarProps>(\n  (\n    {\n      className,\n      src,\n      alt = 'Avatar',\n      initials,\n      size = 'md',\n      status,\n      statusColor,\n      bordered = false,\n      borderColor,\n      ...props\n    },\n    ref\n  ) => {\n    const { isDarkMode } = useTheme();\n\n    // Size classes\n    const sizeClasses = {\n      sm: 'h-8 w-8 text-xs',\n      md: 'h-12 w-12 text-sm',\n      lg: 'h-16 w-16 text-base',\n      xl: 'h-24 w-24 text-lg',\n    };\n\n    // Border classes\n    const borderClass = bordered\n      ? borderColor\n        ? `border-2 border-solid`\n        : `border-2 border-solid ${isDarkMode ? 'border-gray-700' : 'border-gray-200'}`\n      : '';\n\n    return (\n      <div\n        ref={ref}\n        className={cn('relative rounded-full overflow-hidden', sizeClasses[size], borderClass, className)}\n        style={borderColor ? { borderColor } : {}}\n        {...props}\n      >\n        {src ? (\n          <img\n            src={src}\n            alt={alt}\n            className=\"h-full w-full object-cover\"\n          />\n        ) : (\n          <div className=\"h-full w-full flex items-center justify-center bg-primary/10 text-primary font-medium\">\n            {initials || alt.charAt(0).toUpperCase()}\n          </div>\n        )}\n\n        {status && (\n          <div className=\"absolute bottom-0 right-0 translate-y-[20%] translate-x-[20%]\">\n            <StatusIndicator status={status} customColor={statusColor} />\n          </div>\n        )}\n      </div>\n    );\n  }\n);\n\nContactAvatar.displayName = 'ContactAvatar';\n\n// Contact info item component\nexport interface ContactInfoItemProps extends React.HTMLAttributes<HTMLDivElement> {\n  icon?: React.ReactNode;\n  label?: string;\n  value: string;\n  href?: string;\n  copyable?: boolean;\n}\n\nexport const ContactInfoItem = forwardRef<HTMLDivElement, ContactInfoItemProps>(\n  ({ className, icon, label, value, href, copyable = false, ...props }, ref) => {\n    const handleCopy = () => {\n      if (copyable) {\n        navigator.clipboard.writeText(value);\n        // You could add a toast notification here\n      }\n    };\n\n    const content = (\n      <div\n        ref={ref}\n        className={cn('flex items-start space-x-2', className)}\n        {...props}\n      >\n        {icon && <div className=\"mt-0.5 text-muted-foreground\">{icon}</div>}\n        <div className=\"flex-1 min-w-0\">\n          {label && <div className=\"text-xs text-muted-foreground\">{label}</div>}\n          <div className=\"text-sm truncate\">{value}</div>\n        </div>\n        {copyable && (\n          <button\n            onClick={handleCopy}\n            className=\"p-1 text-muted-foreground hover:text-foreground\"\n            aria-label=\"Copy to clipboard\"\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"14\"\n              height=\"14\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeWidth=\"2\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            >\n              <rect width=\"14\" height=\"14\" x=\"8\" y=\"8\" rx=\"2\" ry=\"2\" />\n              <path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\" />\n            </svg>\n          </button>\n        )}\n      </div>\n    );\n\n    if (href) {\n      return (\n        <a\n          href={href}\n          className=\"hover:underline\"\n          target={href.startsWith('http') ? '_blank' : undefined}\n          rel={href.startsWith('http') ? 'noopener noreferrer' : undefined}\n        >\n          {content}\n        </a>\n      );\n    }\n\n    return content;\n  }\n);\n\nContactInfoItem.displayName = 'ContactInfoItem';\n\n// Action button component\nexport interface ContactActionButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  icon: React.ReactNode;\n  label: string;\n  variant?: 'primary' | 'secondary' | 'outline';\n}\n\nexport const ContactActionButton = forwardRef<HTMLButtonElement, ContactActionButtonProps>(\n  ({ className, icon, label, variant = 'outline', ...props }, ref) => {\n    const variantClasses = {\n      primary: 'bg-primary text-primary-foreground hover:bg-primary/90',\n      secondary: 'bg-secondary text-secondary-foreground hover:bg-secondary/90',\n      outline: 'border border-border bg-transparent hover:bg-muted/50',\n    };\n\n    return (\n      <button\n        ref={ref}\n        className={cn(\n          'flex flex-col items-center justify-center p-2 rounded-md transition-colors',\n          variantClasses[variant],\n          className\n        )}\n        {...props}\n      >\n        <div className=\"mb-1\">{icon}</div>\n        <span className=\"text-xs\">{label}</span>\n      </button>\n    );\n  }\n);\n\nContactActionButton.displayName = 'ContactActionButton';\n\n// Main contact card component\nexport interface ContactCardProps extends React.HTMLAttributes<HTMLDivElement> {\n  avatar?: {\n    src?: string;\n    alt?: string;\n    initials?: string;\n    status?: 'online' | 'offline' | 'away' | 'busy' | 'custom';\n    statusColor?: string;\n  };\n  name: string;\n  title?: string;\n  company?: string;\n  contactInfo?: {\n    email?: string;\n    phone?: string;\n    mobile?: string;\n    address?: string;\n    website?: string;\n    [key: string]: string | undefined;\n  };\n  actions?: React.ReactNode;\n  tags?: string[];\n  layout?: 'horizontal' | 'vertical';\n  size?: 'sm' | 'md' | 'lg';\n  variant?: 'default' | 'primary' | 'accent' | 'outline';\n  withHover?: boolean;\n  withShadow?: boolean;\n  footer?: React.ReactNode;\n}\n\nexport const ContactCard = forwardRef<HTMLDivElement, ContactCardProps>(\n  (\n    {\n      className,\n      avatar,\n      name,\n      title,\n      company,\n      contactInfo,\n      actions,\n      tags,\n      layout = 'vertical',\n      size = 'md',\n      variant = 'default',\n      withHover = false,\n      withShadow = false,\n      footer,\n      ...props\n    },\n    ref\n  ) => {\n    const { isDarkMode } = useTheme();\n\n    // Size classes\n    const sizeClasses = {\n      sm: 'p-3 space-y-2',\n      md: 'p-4 space-y-3',\n      lg: 'p-6 space-y-4',\n    };\n\n    // Avatar size based on card size\n    const avatarSize = {\n      sm: 'sm',\n      md: 'md',\n      lg: 'lg',\n    } as const;\n\n    // Variant classes based on theme\n    const variantClasses = {\n      default: 'bg-card text-card-foreground',\n      primary: 'bg-primary text-primary-foreground',\n      accent: 'bg-accent text-accent-foreground',\n      outline: 'border border-border bg-transparent',\n    };\n\n    // Shadow classes\n    const shadowClass = withShadow ? (isDarkMode ? 'shadow-md shadow-black/20' : 'shadow-md shadow-black/10') : '';\n\n    // Hover effect classes\n    const hoverClass = withHover\n      ? variant === 'default'\n        ? 'hover:bg-muted/50 transition-colors'\n        : variant === 'primary'\n        ? 'hover:bg-primary/90 transition-colors'\n        : variant === 'accent'\n        ? 'hover:bg-accent/90 transition-colors'\n        : 'hover:bg-muted/10 transition-colors'\n      : '';\n\n    // Email icon\n    const emailIcon = (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"16\"\n        height=\"16\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      >\n        <rect width=\"20\" height=\"16\" x=\"2\" y=\"4\" rx=\"2\" />\n        <path d=\"m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7\" />\n      </svg>\n    );\n\n    // Phone icon\n    const phoneIcon = (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"16\"\n        height=\"16\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      >\n        <path d=\"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z\" />\n      </svg>\n    );\n\n    // Mobile icon\n    const mobileIcon = (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"16\"\n        height=\"16\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      >\n        <rect width=\"14\" height=\"20\" x=\"5\" y=\"2\" rx=\"2\" ry=\"2\" />\n        <path d=\"M12 18h.01\" />\n      </svg>\n    );\n\n    // Address icon\n    const addressIcon = (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"16\"\n        height=\"16\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      >\n        <path d=\"M20 10c0 6-8 12-8 12s-8-6-8-12a8 8 0 0 1 16 0Z\" />\n        <circle cx=\"12\" cy=\"10\" r=\"3\" />\n      </svg>\n    );\n\n    // Website icon\n    const websiteIcon = (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"16\"\n        height=\"16\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      >\n        <circle cx=\"12\" cy=\"12\" r=\"10\" />\n        <path d=\"M12 2a14.5 14.5 0 0 0 0 20 14.5 14.5 0 0 0 0-20\" />\n        <path d=\"M2 12h20\" />\n      </svg>\n    );\n\n    // Company icon\n    const companyIcon = (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"16\"\n        height=\"16\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      >\n        <path d=\"M3 9h18v10a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V9Z\" />\n        <path d=\"M3 9V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v4\" />\n        <path d=\"M9 22V12\" />\n        <path d=\"M15 22V12\" />\n      </svg>\n    );\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          'rounded-lg',\n          variantClasses[variant],\n          shadowClass,\n          hoverClass,\n          layout === 'vertical' ? sizeClasses[size] : 'p-0',\n          className\n        )}\n        {...props}\n      >\n        {layout === 'horizontal' ? (\n          <div className=\"flex\">\n            <div className={cn('flex-shrink-0 p-4', sizeClasses[size])}>\n              {avatar && (\n                <ContactAvatar\n                  src={avatar.src}\n                  alt={avatar.alt || name}\n                  initials={avatar.initials || name.charAt(0)}\n                  status={avatar.status}\n                  statusColor={avatar.statusColor}\n                  size={avatarSize[size]}\n                />\n              )}\n            </div>\n            <div className=\"flex-1 p-4 min-w-0\">\n              <div className=\"space-y-1 mb-2\">\n                <h3 className=\"font-medium truncate\">{name}</h3>\n                {title && <p className=\"text-sm text-muted-foreground truncate\">{title}</p>}\n                {company && (\n                  <div className=\"flex items-center text-sm text-muted-foreground\">\n                    {companyIcon}\n                    <span className=\"ml-1 truncate\">{company}</span>\n                  </div>\n                )}\n              </div>\n\n              {contactInfo && (\n                <div className=\"space-y-1 mb-3\">\n                  {contactInfo.email && (\n                    <ContactInfoItem\n                      icon={emailIcon}\n                      value={contactInfo.email}\n                      href={`mailto:${contactInfo.email}`}\n                      copyable\n                    />\n                  )}\n                  {contactInfo.phone && (\n                    <ContactInfoItem\n                      icon={phoneIcon}\n                      value={contactInfo.phone}\n                      href={`tel:${contactInfo.phone}`}\n                    />\n                  )}\n                  {contactInfo.mobile && (\n                    <ContactInfoItem\n                      icon={mobileIcon}\n                      value={contactInfo.mobile}\n                      href={`tel:${contactInfo.mobile}`}\n                    />\n                  )}\n                </div>\n              )}\n\n              {tags && tags.length > 0 && (\n                <div className=\"flex flex-wrap gap-1 mt-2\">\n                  {tags.map((tag, index) => (\n                    <span\n                      key={index}\n                      className=\"inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium bg-primary/10 text-primary\"\n                    >\n                      {tag}\n                    </span>\n                  ))}\n                </div>\n              )}\n            </div>\n\n            {actions && (\n              <div className=\"flex items-center p-4 border-l border-border\">\n                {actions}\n              </div>\n            )}\n          </div>\n        ) : (\n          <>\n            <div className=\"flex items-center space-x-3\">\n              {avatar && (\n                <ContactAvatar\n                  src={avatar.src}\n                  alt={avatar.alt || name}\n                  initials={avatar.initials || name.charAt(0)}\n                  status={avatar.status}\n                  statusColor={avatar.statusColor}\n                  size={avatarSize[size]}\n                />\n              )}\n              <div className=\"min-w-0\">\n                <h3 className=\"font-medium truncate\">{name}</h3>\n                {title && <p className=\"text-sm text-muted-foreground truncate\">{title}</p>}\n                {company && (\n                  <div className=\"flex items-center text-sm text-muted-foreground\">\n                    <span className=\"truncate\">{company}</span>\n                  </div>\n                )}\n              </div>\n            </div>\n\n            {contactInfo && (\n              <div className=\"space-y-1\">\n                {contactInfo.email && (\n                  <ContactInfoItem\n                    icon={emailIcon}\n                    value={contactInfo.email}\n                    href={`mailto:${contactInfo.email}`}\n                    copyable\n                  />\n                )}\n                {contactInfo.phone && (\n                  <ContactInfoItem\n                    icon={phoneIcon}\n                    value={contactInfo.phone}\n                    href={`tel:${contactInfo.phone}`}\n                  />\n                )}\n                {contactInfo.mobile && (\n                  <ContactInfoItem\n                    icon={mobileIcon}\n                    value={contactInfo.mobile}\n                    href={`tel:${contactInfo.mobile}`}\n                  />\n                )}\n                {contactInfo.address && (\n                  <ContactInfoItem\n                    icon={addressIcon}\n                    value={contactInfo.address}\n                    copyable\n                  />\n                )}\n                {contactInfo.website && (\n                  <ContactInfoItem\n                    icon={websiteIcon}\n                    value={contactInfo.website}\n                    href={contactInfo.website.startsWith('http') ? contactInfo.website : `https://${contactInfo.website}`}\n                  />\n                )}\n                {Object.entries(contactInfo)\n                  .filter(([key]) => !['email', 'phone', 'mobile', 'address', 'website'].includes(key))\n                  .map(([key, value]) => (\n                    <ContactInfoItem\n                      key={key}\n                      label={key.charAt(0).toUpperCase() + key.slice(1)}\n                      value={value || ''}\n                    />\n                  ))}\n              </div>\n            )}\n\n            {tags && tags.length > 0 && (\n              <div className=\"flex flex-wrap gap-1\">\n                {tags.map((tag, index) => (\n                  <span\n                    key={index}\n                    className=\"inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium bg-primary/10 text-primary\"\n                  >\n                    {tag}\n                  </span>\n                ))}\n              </div>\n            )}\n\n            {actions && <div className=\"flex flex-wrap gap-2\">{actions}</div>}\n\n            {footer && <div className=\"pt-2 border-t border-border/50\">{footer}</div>}\n          </>\n        )}\n      </div>\n    );\n  }\n);\n\nContactCard.displayName = 'ContactCard';\n\n// Default action buttons\nexport const ContactCallButton = (props: Omit<ContactActionButtonProps, 'icon' | 'label'>) => (\n  <ContactActionButton\n    icon={\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"16\"\n        height=\"16\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      >\n        <path d=\"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z\" />\n      </svg>\n    }\n    label=\"Call\"\n    {...props}\n  />\n);\n\nexport const ContactEmailButton = (props: Omit<ContactActionButtonProps, 'icon' | 'label'>) => (\n  <ContactActionButton\n    icon={\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"16\"\n        height=\"16\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      >\n        <rect width=\"20\" height=\"16\" x=\"2\" y=\"4\" rx=\"2\" />\n        <path d=\"m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7\" />\n      </svg>\n    }\n    label=\"Email\"\n    {...props}\n  />\n);\n\nexport const ContactMessageButton = (props: Omit<ContactActionButtonProps, 'icon' | 'label'>) => (\n  <ContactActionButton\n    icon={\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"16\"\n        height=\"16\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      >\n        <path d=\"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z\" />\n      </svg>\n    }\n    label=\"Message\"\n    {...props}\n  />\n);","'use client';\n\nimport { forwardRef } from 'react';\nimport { cn } from '../../lib/utils';\nimport { useTheme } from '../core/ThemeProvider';\n\n// Timeline container component\nexport interface TimelineProps extends React.HTMLAttributes<HTMLDivElement> {\n  orientation?: 'vertical' | 'horizontal';\n  compact?: boolean;\n  reverse?: boolean;\n  children?: React.ReactNode;\n}\n\nexport const Timeline = forwardRef<HTMLDivElement, TimelineProps>(\n  (\n    {\n      className,\n      orientation = 'vertical',\n      compact = false,\n      reverse = false,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const orientationClasses = {\n      vertical: 'flex flex-col',\n      horizontal: 'flex flex-row',\n    };\n\n    const spacingClasses = compact ? 'space-y-2' : 'space-y-6';\n    const horizontalSpacingClasses = compact ? 'space-x-4' : 'space-x-12';\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          orientationClasses[orientation],\n          orientation === 'vertical'\n            ? spacingClasses\n            : horizontalSpacingClasses,\n          reverse && orientation === 'vertical' && 'flex-col-reverse',\n          reverse && orientation === 'horizontal' && 'flex-row-reverse',\n          className\n        )}\n        {...props}\n      >\n        {children}\n      </div>\n    );\n  }\n);\n\nTimeline.displayName = 'Timeline';\n\n// Timeline item component\nexport interface TimelineItemProps\n  extends React.HTMLAttributes<HTMLDivElement> {\n  icon?: React.ReactNode;\n  iconBackground?: string;\n  connector?: boolean;\n  connectorColor?: string;\n  connectorStyle?: 'solid' | 'dashed' | 'dotted';\n  active?: boolean;\n  orientation?: 'vertical' | 'horizontal';\n  position?: 'left' | 'right' | 'alternate';\n  children?: React.ReactNode;\n}\n\nexport const TimelineItem = forwardRef<HTMLDivElement, TimelineItemProps>(\n  (\n    {\n      className,\n      icon,\n      iconBackground,\n      connector = true,\n      connectorColor,\n      connectorStyle = 'solid',\n      active = false,\n      orientation = 'vertical',\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isDarkMode } = useTheme();\n\n    // Default connector color based on theme\n    const defaultConnectorColor = isDarkMode\n      ? 'rgba(255, 255, 255, 0.2)'\n      : 'rgba(0, 0, 0, 0.2)';\n    const activeConnectorColor = 'var(--primary)';\n\n    // Connector style classes\n    const connectorStyleClasses = {\n      solid: 'border-solid',\n      dashed: 'border-dashed',\n      dotted: 'border-dotted',\n    };\n\n    // Vertical timeline item\n    if (orientation === 'vertical') {\n      return (\n        <div ref={ref} className={cn('relative flex', className)} {...props}>\n          {/* Icon and connector column */}\n          <div className=\"flex flex-col items-center mr-4\">\n            {/* Icon */}\n            <div\n              className={cn(\n                'z-10 flex items-center justify-center w-8 h-8 rounded-full',\n                active\n                  ? 'bg-primary text-primary-foreground'\n                  : 'bg-muted text-muted-foreground'\n              )}\n              style={iconBackground ? { backgroundColor: iconBackground } : {}}\n            >\n              {icon || (\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"16\"\n                  height=\"16\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                >\n                  <circle cx=\"12\" cy=\"12\" r=\"10\" />\n                  <path d=\"m12 8 4 4-4 4\" />\n                  <path d=\"m8 12h8\" />\n                </svg>\n              )}\n            </div>\n\n            {/* Connector */}\n            {connector && (\n              <div\n                className={cn(\n                  'w-0 h-full border-l-2 mt-1',\n                  connectorStyleClasses[connectorStyle]\n                )}\n                style={{\n                  borderColor: active\n                    ? connectorColor || activeConnectorColor\n                    : connectorColor || defaultConnectorColor,\n                }}\n              />\n            )}\n          </div>\n\n          {/* Content */}\n          <div className=\"flex-1 pb-6\">{children}</div>\n        </div>\n      );\n    }\n\n    // Horizontal timeline item\n    return (\n      <div\n        ref={ref}\n        className={cn('relative flex flex-col', className)}\n        {...props}\n      >\n        <div className=\"flex items-center mb-2\">\n          {/* Icon */}\n          <div\n            className={cn(\n              'z-10 flex items-center justify-center w-8 h-8 rounded-full',\n              active\n                ? 'bg-primary text-primary-foreground'\n                : 'bg-muted text-muted-foreground'\n            )}\n            style={iconBackground ? { backgroundColor: iconBackground } : {}}\n          >\n            {icon || (\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"16\"\n                height=\"16\"\n                viewBox=\"0 0 24 24\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                strokeWidth=\"2\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              >\n                <circle cx=\"12\" cy=\"12\" r=\"10\" />\n                <path d=\"m12 8 4 4-4 4\" />\n                <path d=\"m8 12h8\" />\n              </svg>\n            )}\n          </div>\n\n          {/* Connector */}\n          {connector && (\n            <div\n              className={cn(\n                'h-0 flex-1 border-t-2 ml-1',\n                connectorStyleClasses[connectorStyle]\n              )}\n              style={{\n                borderColor: active\n                  ? connectorColor || activeConnectorColor\n                  : connectorColor || defaultConnectorColor,\n              }}\n            />\n          )}\n        </div>\n\n        {/* Content */}\n        <div className=\"ml-8\">{children}</div>\n      </div>\n    );\n  }\n);\n\nTimelineItem.displayName = 'TimelineItem';\n\n// Timeline content component\nexport interface TimelineContentProps\n  extends React.HTMLAttributes<HTMLDivElement> {\n  title?: string;\n  subtitle?: string;\n  date?: string;\n  children?: React.ReactNode;\n}\n\nexport const TimelineContent = forwardRef<HTMLDivElement, TimelineContentProps>(\n  ({ className, title, subtitle, date, children, ...props }, ref) => {\n    return (\n      <div ref={ref} className={cn('space-y-1', className)} {...props}>\n        <div className=\"flex items-start justify-between\">\n          {title && <h4 className=\"font-medium\">{title}</h4>}\n          {date && (\n            <span className=\"text-sm text-muted-foreground\">{date}</span>\n          )}\n        </div>\n        {subtitle && (\n          <p className=\"text-sm text-muted-foreground\">{subtitle}</p>\n        )}\n        {children && <div className=\"mt-2\">{children}</div>}\n      </div>\n    );\n  }\n);\n\nTimelineContent.displayName = 'TimelineContent';\n\n// Timeline separator component\nexport interface TimelineSeparatorProps\n  extends React.HTMLAttributes<HTMLDivElement> {\n  label?: string;\n}\n\nexport const TimelineSeparator = forwardRef<\n  HTMLDivElement,\n  TimelineSeparatorProps\n>(({ className, label, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      className={cn('relative flex items-center py-4', className)}\n      {...props}\n    >\n      <div className=\"flex-grow border-t border-border\"></div>\n      {label && (\n        <span className=\"flex-shrink mx-4 text-sm font-medium text-muted-foreground\">\n          {label}\n        </span>\n      )}\n      <div className=\"flex-grow border-t border-border\"></div>\n    </div>\n  );\n});\n\nTimelineSeparator.displayName = 'TimelineSeparator';\n\n// Timeline dot component (alternative to icon)\nexport interface TimelineDotProps extends React.HTMLAttributes<HTMLDivElement> {\n  size?: 'sm' | 'md' | 'lg';\n  color?: string;\n  variant?: 'filled' | 'outlined';\n  active?: boolean;\n}\n\nexport const TimelineDot = forwardRef<HTMLDivElement, TimelineDotProps>(\n  (\n    {\n      className,\n      size = 'md',\n      color,\n      variant = 'filled',\n      active = false,\n      ...props\n    },\n    ref\n  ) => {\n    const sizeClasses = {\n      sm: 'w-2 h-2',\n      md: 'w-3 h-3',\n      lg: 'w-4 h-4',\n    };\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          'rounded-full',\n          sizeClasses[size],\n          variant === 'outlined' ? 'border-2' : '',\n          active ? 'bg-primary border-primary' : 'bg-muted border-muted',\n          className\n        )}\n        style={\n          color\n            ? {\n                backgroundColor: variant === 'filled' ? color : 'transparent',\n                borderColor: color,\n              }\n            : {}\n        }\n        {...props}\n      />\n    );\n  }\n);\n\nTimelineDot.displayName = 'TimelineDot';\n","'use client';\n\nimport { forwardRef } from 'react';\nimport { cn } from '../../lib/utils';\nimport { useTheme } from '../core/ThemeProvider';\n\n// Priority badge component\nexport interface PriorityBadgeProps extends React.HTMLAttributes<HTMLDivElement> {\n  priority: 'low' | 'medium' | 'high' | 'urgent' | 'custom';\n  customColor?: string;\n  size?: 'sm' | 'md' | 'lg';\n}\n\nexport const PriorityBadge = forwardRef<HTMLDivElement, PriorityBadgeProps>(\n  ({ className, priority, customColor, size = 'md', ...props }, ref) => {\n    const priorityColors = {\n      low: 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300',\n      medium: 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-300',\n      high: 'bg-orange-100 text-orange-800 dark:bg-orange-900 dark:text-orange-300',\n      urgent: 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-300',\n      custom: '',\n    };\n\n    const priorityLabels = {\n      low: 'Low',\n      medium: 'Medium',\n      high: 'High',\n      urgent: 'Urgent',\n      custom: 'Custom',\n    };\n\n    const sizeClasses = {\n      sm: 'text-xs px-1.5 py-0.5',\n      md: 'text-xs px-2 py-1',\n      lg: 'text-sm px-2.5 py-1.5',\n    };\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          'inline-flex items-center rounded-full font-medium',\n          priorityColors[priority],\n          sizeClasses[size],\n          className\n        )}\n        style={priority === 'custom' && customColor ? { backgroundColor: customColor } : {}}\n        {...props}\n      >\n        {priorityLabels[priority]}\n      </div>\n    );\n  }\n);\n\nPriorityBadge.displayName = 'PriorityBadge';\n\n// Status badge component\nexport interface StatusBadgeProps extends React.HTMLAttributes<HTMLDivElement> {\n  status: 'todo' | 'in-progress' | 'review' | 'done' | 'blocked' | 'custom';\n  customColor?: string;\n  size?: 'sm' | 'md' | 'lg';\n}\n\nexport const StatusBadge = forwardRef<HTMLDivElement, StatusBadgeProps>(\n  ({ className, status, customColor, size = 'md', ...props }, ref) => {\n    const statusColors = {\n      todo: 'bg-gray-100 text-gray-800 dark:bg-gray-800 dark:text-gray-300',\n      'in-progress': 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-300',\n      review: 'bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-300',\n      done: 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300',\n      blocked: 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-300',\n      custom: '',\n    };\n\n    const statusLabels = {\n      todo: 'To Do',\n      'in-progress': 'In Progress',\n      review: 'Review',\n      done: 'Done',\n      blocked: 'Blocked',\n      custom: 'Custom',\n    };\n\n    const sizeClasses = {\n      sm: 'text-xs px-1.5 py-0.5',\n      md: 'text-xs px-2 py-1',\n      lg: 'text-sm px-2.5 py-1.5',\n    };\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          'inline-flex items-center rounded-full font-medium',\n          statusColors[status],\n          sizeClasses[size],\n          className\n        )}\n        style={status === 'custom' && customColor ? { backgroundColor: customColor } : {}}\n        {...props}\n      >\n        {statusLabels[status]}\n      </div>\n    );\n  }\n);\n\nStatusBadge.displayName = 'StatusBadge';\n\n// Task progress component\nexport interface TaskProgressProps extends React.HTMLAttributes<HTMLDivElement> {\n  value: number;\n  max?: number;\n  showLabel?: boolean;\n  size?: 'sm' | 'md' | 'lg';\n}\n\nexport const TaskProgress = forwardRef<HTMLDivElement, TaskProgressProps>(\n  ({ className, value, max = 100, showLabel = false, size = 'md', ...props }, ref) => {\n    const percentage = Math.min(100, Math.max(0, (value / max) * 100));\n    \n    const sizeClasses = {\n      sm: 'h-1',\n      md: 'h-2',\n      lg: 'h-3',\n    };\n\n    return (\n      <div\n        ref={ref}\n        className={cn('space-y-1', className)}\n        {...props}\n      >\n        <div className={cn('w-full bg-muted rounded-full overflow-hidden', sizeClasses[size])}>\n          <div\n            className=\"bg-primary h-full rounded-full transition-all duration-300 ease-in-out\"\n            style={{ width: `${percentage}%` }}\n          />\n        </div>\n        {showLabel && (\n          <div className=\"flex justify-between items-center text-xs text-muted-foreground\">\n            <span>Progress</span>\n            <span>{Math.round(percentage)}%</span>\n          </div>\n        )}\n      </div>\n    );\n  }\n);\n\nTaskProgress.displayName = 'TaskProgress';\n\n// Due date component\nexport interface DueDateProps extends React.HTMLAttributes<HTMLDivElement> {\n  date: Date | string;\n  showIcon?: boolean;\n  isPastDue?: boolean;\n}\n\nexport const DueDate = forwardRef<HTMLDivElement, DueDateProps>(\n  ({ className, date, showIcon = true, isPastDue, ...props }, ref) => {\n    // Format date\n    const formatDate = (date: Date | string) => {\n      const d = typeof date === 'string' ? new Date(date) : date;\n      return d.toLocaleDateString(undefined, { month: 'short', day: 'numeric', year: 'numeric' });\n    };\n\n    // Check if date is past due\n    const checkPastDue = (date: Date | string) => {\n      if (isPastDue !== undefined) return isPastDue;\n      const d = typeof date === 'string' ? new Date(date) : date;\n      const today = new Date();\n      today.setHours(0, 0, 0, 0);\n      return d < today;\n    };\n\n    const pastDue = checkPastDue(date);\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          'flex items-center text-sm',\n          pastDue ? 'text-red-500' : 'text-muted-foreground',\n          className\n        )}\n        {...props}\n      >\n        {showIcon && (\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"14\"\n            height=\"14\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"mr-1\"\n          >\n            <rect width=\"18\" height=\"18\" x=\"3\" y=\"4\" rx=\"2\" ry=\"2\" />\n            <line x1=\"16\" x2=\"16\" y1=\"2\" y2=\"6\" />\n            <line x1=\"8\" x2=\"8\" y1=\"2\" y2=\"6\" />\n            <line x1=\"3\" x2=\"21\" y1=\"10\" y2=\"10\" />\n          </svg>\n        )}\n        <span>{formatDate(date)}</span>\n      </div>\n    );\n  }\n);\n\nDueDate.displayName = 'DueDate';\n\n// Assignee component\nexport interface AssigneeProps extends React.HTMLAttributes<HTMLDivElement> {\n  name: string;\n  avatar?: string;\n  size?: 'sm' | 'md' | 'lg';\n}\n\nexport const Assignee = forwardRef<HTMLDivElement, AssigneeProps>(\n  ({ className, name, avatar, size = 'md', ...props }, ref) => {\n    const sizeClasses = {\n      sm: 'h-6 w-6 text-xs',\n      md: 'h-8 w-8 text-sm',\n      lg: 'h-10 w-10 text-base',\n    };\n\n    const initials = name\n      .split(' ')\n      .map((n) => n[0])\n      .join('')\n      .toUpperCase()\n      .substring(0, 2);\n\n    return (\n      <div\n        ref={ref}\n        className={cn('flex items-center space-x-2', className)}\n        {...props}\n      >\n        <div\n          className={cn(\n            'rounded-full flex items-center justify-center bg-primary/10 text-primary',\n            sizeClasses[size]\n          )}\n        >\n          {avatar ? (\n            <img src={avatar} alt={name} className=\"h-full w-full rounded-full object-cover\" />\n          ) : (\n            <span>{initials}</span>\n          )}\n        </div>\n        <span className=\"text-sm\">{name}</span>\n      </div>\n    );\n  }\n);\n\nAssignee.displayName = 'Assignee';\n\n// Main task card component\nexport interface TaskCardProps extends React.HTMLAttributes<HTMLDivElement> {\n  title: string;\n  description?: string;\n  priority?: 'low' | 'medium' | 'high' | 'urgent';\n  status?: 'todo' | 'in-progress' | 'review' | 'done' | 'blocked';\n  progress?: number;\n  dueDate?: Date | string;\n  assignee?: {\n    name: string;\n    avatar?: string;\n  };\n  tags?: string[];\n  size?: 'sm' | 'md' | 'lg';\n  variant?: 'default' | 'primary' | 'accent' | 'outline';\n  withHover?: boolean;\n  withShadow?: boolean;\n  footer?: React.ReactNode;\n}\n\nexport const TaskCard = forwardRef<HTMLDivElement, TaskCardProps>(\n  (\n    {\n      className,\n      title,\n      description,\n      priority = 'medium',\n      status = 'todo',\n      progress,\n      dueDate,\n      assignee,\n      tags,\n      size = 'md',\n      variant = 'default',\n      withHover = false,\n      withShadow = false,\n      footer,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isDarkMode } = useTheme();\n\n    // Size classes\n    const sizeClasses = {\n      sm: 'p-3 space-y-2',\n      md: 'p-4 space-y-3',\n      lg: 'p-6 space-y-4',\n    };\n\n    // Variant classes based on theme\n    const variantClasses = {\n      default: 'bg-card text-card-foreground',\n      primary: 'bg-primary text-primary-foreground',\n      accent: 'bg-accent text-accent-foreground',\n      outline: 'border border-border bg-transparent',\n    };\n\n    // Shadow classes\n    const shadowClass = withShadow ? (isDarkMode ? 'shadow-md shadow-black/20' : 'shadow-md shadow-black/10') : '';\n\n    // Hover effect classes\n    const hoverClass = withHover\n      ? variant === 'default'\n        ? 'hover:bg-muted/50 transition-colors'\n        : variant === 'primary'\n        ? 'hover:bg-primary/90 transition-colors'\n        : variant === 'accent'\n        ? 'hover:bg-accent/90 transition-colors'\n        : 'hover:bg-muted/10 transition-colors'\n      : '';\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          'rounded-lg',\n          variantClasses[variant],\n          sizeClasses[size],\n          shadowClass,\n          hoverClass,\n          className\n        )}\n        {...props}\n      >\n        <div className=\"flex items-start justify-between\">\n          <h3 className=\"font-medium\">{title}</h3>\n          <div className=\"flex space-x-2\">\n            {priority && <PriorityBadge priority={priority} size=\"sm\" />}\n            {status && <StatusBadge status={status} size=\"sm\" />}\n          </div>\n        </div>\n\n        {description && <p className=\"text-sm text-muted-foreground\">{description}</p>}\n\n        {progress !== undefined && <TaskProgress value={progress} showLabel size=\"sm\" />}\n\n        {(assignee || dueDate) && (\n          <div className=\"flex items-center justify-between text-sm\">\n            {assignee && <Assignee name={assignee.name} avatar={assignee.avatar} size=\"sm\" />}\n            {dueDate && <DueDate date={dueDate} />}\n          </div>\n        )}\n\n        {tags && tags.length > 0 && (\n          <div className=\"flex flex-wrap gap-1\">\n            {tags.map((tag, index) => (\n              <span\n                key={index}\n                className=\"inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium bg-primary/10 text-primary\"\n              >\n                {tag}\n              </span>\n            ))}\n          </div>\n        )}\n\n        {children && <div>{children}</div>}\n\n        {footer && <div className=\"pt-2 border-t border-border/50\">{footer}</div>}\n      </div>\n    );\n  }\n);\n\nTaskCard.displayName = 'TaskCard';\n\n// Task list component\nexport interface TaskListProps extends React.HTMLAttributes<HTMLDivElement> {\n  tasks: TaskCardProps[];\n  layout?: 'grid' | 'list';\n  columns?: 1 | 2 | 3 | 4;\n  gap?: 'sm' | 'md' | 'lg';\n}\n\nexport const TaskList = forwardRef<HTMLDivElement, TaskListProps>(\n  (\n    { className, tasks, layout = 'grid', columns = 1, gap = 'md', ...props },\n    ref\n  ) => {\n    // Layout classes\n    const layoutClasses = {\n      grid: 'grid',\n      list: 'flex flex-col',\n    };\n\n    // Column classes\n    const columnClasses = {\n      1: 'grid-cols-1',\n      2: 'grid-cols-1 md:grid-cols-2',\n      3: 'grid-cols-1 md:grid-cols-2 lg:grid-cols-3',\n      4: 'grid-cols-1 md:grid-cols-2 lg:grid-cols-4',\n    };\n\n    // Gap classes\n    const gapClasses = {\n      sm: layout === 'grid' ? 'gap-2' : 'space-y-2',\n      md: layout === 'grid' ? 'gap-4' : 'space-y-4',\n      lg: layout === 'grid' ? 'gap-6' : 'space-y-6',\n    };\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          layoutClasses[layout],\n          layout === 'grid' && columnClasses[columns],\n          gapClasses[gap],\n          className\n        )}\n        {...props}\n      >\n        {tasks.map((task, index) => (\n          <TaskCard key={index} {...task} />\n        ))}\n      </div>\n    );\n  }\n);\n\nTaskList.displayName = 'TaskList';","import * as React from 'react';\nimport { cn } from '../../lib/utils'; // Assumes cn utility from shadcn/ui setup\n\n/**\n * A reusable, centered loading spinner component.\n *\n * It is accessible via the `role=\"status\"` attribute and a visually hidden\n * \"Loading...\" text for screen readers. It can be customized with a className.\n */\nexport const LoadingSpinner = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      // ARIA role to indicate this is a live region presenting a status.\n      role=\"status\"\n      className={cn('flex items-center justify-center', className)}\n      {...props}\n    >\n      <div className=\"h-12 w-12 animate-spin rounded-full border-4 border-solid border-primary border-r-transparent align-[-0.125em] motion-reduce:animate-[spin_1.5s_linear_infinite]\" />\n      {/* Visually hidden text for screen reader users. */}\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n  );\n});\nLoadingSpinner.displayName = 'LoadingSpinner';\n","import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","'use client';\n\nimport { useState } from 'react';\nimport { cn } from '../../lib/utils';\nimport { useTheme } from './ThemeProvider';\nimport {\n  ThemedCard,\n  ThemedCardHeader,\n  ThemedCardTitle,\n  ThemedCardDescription,\n  ThemedCardContent,\n  ThemedCardFooter,\n} from '../ui/themed-card';\n\nexport interface ThemeDemoProps {\n  className?: string;\n}\n\nexport function ThemeDemo({ className }: ThemeDemoProps) {\n  const { theme, setTheme } = useTheme();\n  const [activeTab, setActiveTab] = useState<'colors' | 'components'>('colors');\n\n  return (\n    <div className={cn('space-y-6', className)}>\n      <div className=\"flex items-center justify-between\">\n        <h2 className=\"text-2xl font-bold\">Theme Demonstration</h2>\n        <div className=\"flex items-center space-x-2\">\n          <button\n            onClick={() => setTheme('light')}\n            className={cn(\n              'px-3 py-1 rounded-md',\n              theme === 'light'\n                ? 'bg-primary text-primary-foreground'\n                : 'bg-muted text-muted-foreground'\n            )}\n          >\n            Light\n          </button>\n          <button\n            onClick={() => setTheme('dark')}\n            className={cn(\n              'px-3 py-1 rounded-md',\n              theme === 'dark'\n                ? 'bg-primary text-primary-foreground'\n                : 'bg-muted text-muted-foreground'\n            )}\n          >\n            Dark\n          </button>\n          <button\n            onClick={() => setTheme('system')}\n            className={cn(\n              'px-3 py-1 rounded-md',\n              theme === 'system'\n                ? 'bg-primary text-primary-foreground'\n                : 'bg-muted text-muted-foreground'\n            )}\n          >\n            System\n          </button>\n        </div>\n      </div>\n\n      <div className=\"flex space-x-2 border-b\">\n        <button\n          onClick={() => setActiveTab('colors')}\n          className={cn(\n            'px-4 py-2',\n            activeTab === 'colors'\n              ? 'border-b-2 border-primary font-medium'\n              : 'text-muted-foreground'\n          )}\n        >\n          Color Palette\n        </button>\n        <button\n          onClick={() => setActiveTab('components')}\n          className={cn(\n            'px-4 py-2',\n            activeTab === 'components'\n              ? 'border-b-2 border-primary font-medium'\n              : 'text-muted-foreground'\n          )}\n        >\n          Components\n        </button>\n      </div>\n\n      {activeTab === 'colors' && (\n        <div className=\"space-y-6\">\n          <div className=\"space-y-3\">\n            <h3 className=\"text-lg font-medium\">Primary Colors (Teal)</h3>\n            <div className=\"grid grid-cols-5 gap-2\">\n              {[50, 100, 200, 300, 400, 500, 600, 700, 800, 900].map(\n                (shade) => (\n                  <div key={`primary-${shade}`} className=\"space-y-1.5\">\n                    <div\n                      className={`h-10 w-full rounded-md`}\n                      style={{ backgroundColor: `var(--primary-${shade})` }}\n                    />\n                    <div className=\"text-xs\">\n                      <div className=\"font-medium\">Primary {shade}</div>\n                    </div>\n                  </div>\n                )\n              )}\n            </div>\n          </div>\n\n          <div className=\"space-y-3\">\n            <h3 className=\"text-lg font-medium\">Accent Colors (Orange)</h3>\n            <div className=\"grid grid-cols-5 gap-2\">\n              {[50, 100, 200, 300, 400, 500, 600, 700, 800, 900].map(\n                (shade) => (\n                  <div key={`accent-${shade}`} className=\"space-y-1.5\">\n                    <div\n                      className={`h-10 w-full rounded-md`}\n                      style={{ backgroundColor: `var(--accent-${shade})` }}\n                    />\n                    <div className=\"text-xs\">\n                      <div className=\"font-medium\">Accent {shade}</div>\n                    </div>\n                  </div>\n                )\n              )}\n            </div>\n          </div>\n\n          <div className=\"space-y-3\">\n            <h3 className=\"text-lg font-medium\">UI Colors</h3>\n            <div className=\"grid grid-cols-3 gap-2\">\n              <div className=\"space-y-1.5\">\n                <div\n                  className={`h-10 w-full rounded-md`}\n                  style={{ backgroundColor: `var(--background)` }}\n                />\n                <div className=\"text-xs\">\n                  <div className=\"font-medium\">Background</div>\n                </div>\n              </div>\n              <div className=\"space-y-1.5\">\n                <div\n                  className={`h-10 w-full rounded-md`}\n                  style={{ backgroundColor: `var(--foreground)` }}\n                />\n                <div className=\"text-xs\">\n                  <div className=\"font-medium\">Foreground</div>\n                </div>\n              </div>\n              <div className=\"space-y-1.5\">\n                <div\n                  className={`h-10 w-full rounded-md`}\n                  style={{ backgroundColor: `var(--card)` }}\n                />\n                <div className=\"text-xs\">\n                  <div className=\"font-medium\">Card</div>\n                </div>\n              </div>\n              <div className=\"space-y-1.5\">\n                <div\n                  className={`h-10 w-full rounded-md`}\n                  style={{ backgroundColor: `var(--card-foreground)` }}\n                />\n                <div className=\"text-xs\">\n                  <div className=\"font-medium\">Card Foreground</div>\n                </div>\n              </div>\n              <div className=\"space-y-1.5\">\n                <div\n                  className={`h-10 w-full rounded-md`}\n                  style={{ backgroundColor: `var(--muted)` }}\n                />\n                <div className=\"text-xs\">\n                  <div className=\"font-medium\">Muted</div>\n                </div>\n              </div>\n              <div className=\"space-y-1.5\">\n                <div\n                  className={`h-10 w-full rounded-md`}\n                  style={{ backgroundColor: `var(--muted-foreground)` }}\n                />\n                <div className=\"text-xs\">\n                  <div className=\"font-medium\">Muted Foreground</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {activeTab === 'components' && (\n        <div className=\"space-y-8\">\n          <div className=\"space-y-3\">\n            <h3 className=\"text-lg font-medium\">Card Variants</h3>\n            <div className=\"grid grid-cols-2 gap-4\">\n              <ThemedCard>\n                <ThemedCardHeader>\n                  <ThemedCardTitle>Default Card</ThemedCardTitle>\n                  <ThemedCardDescription>\n                    This is a default card with no special styling\n                  </ThemedCardDescription>\n                </ThemedCardHeader>\n                <ThemedCardContent>\n                  <p>Card content goes here</p>\n                </ThemedCardContent>\n                <ThemedCardFooter>\n                  <p className=\"text-sm text-muted-foreground\">\n                    Last updated: Today\n                  </p>\n                </ThemedCardFooter>\n              </ThemedCard>\n\n              <ThemedCard variant=\"primary\">\n                <ThemedCardHeader>\n                  <ThemedCardTitle>Primary Card</ThemedCardTitle>\n                  <ThemedCardDescription>\n                    This card uses the primary color\n                  </ThemedCardDescription>\n                </ThemedCardHeader>\n                <ThemedCardContent>\n                  <p>Card content goes here</p>\n                </ThemedCardContent>\n                <ThemedCardFooter>\n                  <p className=\"text-sm opacity-80\">Last updated: Today</p>\n                </ThemedCardFooter>\n              </ThemedCard>\n\n              <ThemedCard variant=\"accent\">\n                <ThemedCardHeader>\n                  <ThemedCardTitle>Accent Card</ThemedCardTitle>\n                  <ThemedCardDescription>\n                    This card uses the accent color\n                  </ThemedCardDescription>\n                </ThemedCardHeader>\n                <ThemedCardContent>\n                  <p>Card content goes here</p>\n                </ThemedCardContent>\n                <ThemedCardFooter>\n                  <p className=\"text-sm opacity-80\">Last updated: Today</p>\n                </ThemedCardFooter>\n              </ThemedCard>\n\n              <ThemedCard variant=\"outline\" withShadow>\n                <ThemedCardHeader>\n                  <ThemedCardTitle>Outline Card with Shadow</ThemedCardTitle>\n                  <ThemedCardDescription>\n                    This card has an outline and shadow\n                  </ThemedCardDescription>\n                </ThemedCardHeader>\n                <ThemedCardContent>\n                  <p>Card content goes here</p>\n                </ThemedCardContent>\n                <ThemedCardFooter>\n                  <p className=\"text-sm text-muted-foreground\">\n                    Last updated: Today\n                  </p>\n                </ThemedCardFooter>\n              </ThemedCard>\n            </div>\n          </div>\n\n          <div className=\"space-y-3\">\n            <h3 className=\"text-lg font-medium\">Card Sizes</h3>\n            <div className=\"grid grid-cols-3 gap-4\">\n              <ThemedCard size=\"sm\">\n                <ThemedCardHeader>\n                  <ThemedCardTitle>Small Card</ThemedCardTitle>\n                </ThemedCardHeader>\n                <ThemedCardContent>\n                  <p>Compact content</p>\n                </ThemedCardContent>\n              </ThemedCard>\n\n              <ThemedCard size=\"md\">\n                <ThemedCardHeader>\n                  <ThemedCardTitle>Medium Card</ThemedCardTitle>\n                </ThemedCardHeader>\n                <ThemedCardContent>\n                  <p>Standard content</p>\n                </ThemedCardContent>\n              </ThemedCard>\n\n              <ThemedCard size=\"lg\">\n                <ThemedCardHeader>\n                  <ThemedCardTitle>Large Card</ThemedCardTitle>\n                </ThemedCardHeader>\n                <ThemedCardContent>\n                  <p>Spacious content</p>\n                </ThemedCardContent>\n              </ThemedCard>\n            </div>\n          </div>\n\n          <div className=\"space-y-3\">\n            <h3 className=\"text-lg font-medium\">Interactive Cards</h3>\n            <div className=\"grid grid-cols-2 gap-4\">\n              <ThemedCard withHover>\n                <ThemedCardHeader>\n                  <ThemedCardTitle>Hover Effect</ThemedCardTitle>\n                  <ThemedCardDescription>\n                    This card has a hover effect\n                  </ThemedCardDescription>\n                </ThemedCardHeader>\n                <ThemedCardContent>\n                  <p>Hover over me</p>\n                </ThemedCardContent>\n              </ThemedCard>\n\n              <ThemedCard withHover withShadow>\n                <ThemedCardHeader>\n                  <ThemedCardTitle>Hover + Shadow</ThemedCardTitle>\n                  <ThemedCardDescription>\n                    This card has hover and shadow effects\n                  </ThemedCardDescription>\n                </ThemedCardHeader>\n                <ThemedCardContent>\n                  <p>Hover over me</p>\n                </ThemedCardContent>\n              </ThemedCard>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","'use client';\n\nimport { useState } from 'react';\nimport { cn } from '../../lib/utils';\nimport {\n  MetricCard,\n  SimpleLineChart,\n  ProgressIndicator,\n  CircularProgress,\n} from '../ui/metric-card';\n\nexport interface MetricCardDemoProps {\n  className?: string;\n}\n\nexport function MetricCardDemo({ className }: MetricCardDemoProps) {\n  const [loading, setLoading] = useState(false);\n\n  // Toggle loading state for demo purposes\n  const toggleLoading = () => {\n    setLoading((prev) => !prev);\n  };\n\n  // Sample data for charts\n  const lineData1 = [10, 15, 8, 12, 18, 15, 20, 25, 22, 30];\n  const lineData2 = [20, 15, 25, 18, 15, 20, 18, 15, 20, 18];\n\n  return (\n    <div className={cn('space-y-6', className)}>\n      <div className=\"flex items-center justify-between\">\n        <h2 className=\"text-2xl font-bold\">Metric Cards</h2>\n        <button\n          onClick={toggleLoading}\n          className=\"px-3 py-1 rounded-md bg-primary text-primary-foreground\"\n        >\n          {loading ? 'Show Data' : 'Show Loading'}\n        </button>\n      </div>\n\n      <div className=\"space-y-6\">\n        <div className=\"space-y-3\">\n          <h3 className=\"text-lg font-medium\">Basic Metric Cards</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <MetricCard\n              title=\"Total Users\"\n              value=\"1,234\"\n              trend=\"up\"\n              trendValue=\"+12%\"\n              trendLabel=\"vs last month\"\n              loading={loading}\n              icon={\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"20\"\n                  height=\"20\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                >\n                  <path d=\"M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2\" />\n                  <circle cx=\"9\" cy=\"7\" r=\"4\" />\n                  <path d=\"M22 21v-2a4 4 0 0 0-3-3.87\" />\n                  <path d=\"M16 3.13a4 4 0 0 1 0 7.75\" />\n                </svg>\n              }\n            />\n\n            <MetricCard\n              title=\"Revenue\"\n              value=\"$45,678\"\n              trend=\"up\"\n              trendValue=\"+8.3%\"\n              trendLabel=\"vs last month\"\n              loading={loading}\n              icon={\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"20\"\n                  height=\"20\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                >\n                  <path d=\"M12 2v20M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6\" />\n                </svg>\n              }\n            />\n\n            <MetricCard\n              title=\"Conversion Rate\"\n              value=\"3.2%\"\n              trend=\"down\"\n              trendValue=\"-0.5%\"\n              trendLabel=\"vs last month\"\n              loading={loading}\n              icon={\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"20\"\n                  height=\"20\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                >\n                  <path d=\"M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2\" />\n                  <circle cx=\"9\" cy=\"7\" r=\"4\" />\n                  <polyline points=\"16 11 18 13 22 9\" />\n                </svg>\n              }\n            />\n          </div>\n        </div>\n\n        <div className=\"space-y-3\">\n          <h3 className=\"text-lg font-medium\">Metric Cards with Charts</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <MetricCard\n              title=\"Website Traffic\"\n              value=\"12,345\"\n              trend=\"up\"\n              trendValue=\"+15%\"\n              loading={loading}\n              chart={\n                <SimpleLineChart data={lineData1} color=\"var(--primary)\" />\n              }\n            />\n\n            <MetricCard\n              title=\"Bounce Rate\"\n              value=\"42%\"\n              trend=\"down\"\n              trendValue=\"-3%\"\n              loading={loading}\n              chart={<SimpleLineChart data={lineData2} color=\"var(--accent)\" />}\n            />\n          </div>\n        </div>\n\n        <div className=\"space-y-3\">\n          <h3 className=\"text-lg font-medium\">Metric Cards with Progress</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <MetricCard\n              title=\"Storage Used\"\n              value=\"45 GB\"\n              trend=\"neutral\"\n              trendLabel=\"of 100 GB\"\n              loading={loading}\n              chart={\n                <ProgressIndicator value={45} max={100} showValue size=\"md\" />\n              }\n            />\n\n            <MetricCard\n              title=\"Task Completion\"\n              value=\"75%\"\n              trend=\"up\"\n              trendValue=\"+5%\"\n              loading={loading}\n              chart={\n                <ProgressIndicator\n                  value={75}\n                  max={100}\n                  color=\"var(--accent)\"\n                  size=\"md\"\n                />\n              }\n            />\n\n            <MetricCard\n              title=\"CPU Usage\"\n              value=\"28%\"\n              trend=\"down\"\n              trendValue=\"-12%\"\n              loading={loading}\n              footer={\n                <div className=\"flex justify-center\">\n                  <CircularProgress value={28} showValue size={60} />\n                </div>\n              }\n            />\n          </div>\n        </div>\n\n        <div className=\"space-y-3\">\n          <h3 className=\"text-lg font-medium\">Metric Card Variants</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n            <MetricCard\n              title=\"Default\"\n              value=\"1,234\"\n              variant=\"default\"\n              loading={loading}\n            />\n\n            <MetricCard\n              title=\"Primary\"\n              value=\"1,234\"\n              variant=\"primary\"\n              loading={loading}\n            />\n\n            <MetricCard\n              title=\"Accent\"\n              value=\"1,234\"\n              variant=\"accent\"\n              loading={loading}\n            />\n\n            <MetricCard\n              title=\"Outline\"\n              value=\"1,234\"\n              variant=\"outline\"\n              loading={loading}\n            />\n          </div>\n        </div>\n\n        <div className=\"space-y-3\">\n          <h3 className=\"text-lg font-medium\">Metric Card Sizes</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <MetricCard\n              title=\"Small\"\n              value=\"1,234\"\n              size=\"sm\"\n              loading={loading}\n            />\n\n            <MetricCard\n              title=\"Medium\"\n              value=\"1,234\"\n              size=\"md\"\n              loading={loading}\n            />\n\n            <MetricCard\n              title=\"Large\"\n              value=\"1,234\"\n              size=\"lg\"\n              loading={loading}\n            />\n          </div>\n        </div>\n\n        <div className=\"space-y-3\">\n          <h3 className=\"text-lg font-medium\">Interactive Metric Cards</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <MetricCard\n              title=\"With Hover Effect\"\n              value=\"1,234\"\n              trend=\"up\"\n              trendValue=\"+12%\"\n              withHover\n              loading={loading}\n            />\n\n            <MetricCard\n              title=\"With Shadow\"\n              value=\"1,234\"\n              trend=\"up\"\n              trendValue=\"+12%\"\n              withShadow\n              loading={loading}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","'use client';\n\nimport { useState } from 'react';\nimport { cn } from '../../lib/utils';\nimport {\n  ContactCard,\n  ContactAvatar,\n  ContactInfoItem,\n  ContactActionButton,\n  ContactCallButton,\n  ContactEmailButton,\n  ContactMessageButton,\n} from '../ui/contact-card';\n\nexport interface ContactCardDemoProps {\n  className?: string;\n}\n\nexport function ContactCardDemo({ className }: ContactCardDemoProps) {\n  const [layout, setLayout] = useState<'vertical' | 'horizontal'>('vertical');\n\n  // Sample contact data\n  const contacts = [\n    {\n      name: 'Jane Smith',\n      title: 'Marketing Director',\n      company: 'Acme Corporation',\n      avatar: {\n        src: 'https://randomuser.me/api/portraits/women/32.jpg',\n        status: 'online' as const,\n      },\n      contactInfo: {\n        email: 'jane.smith@acme.com',\n        phone: '(555) 123-4567',\n        mobile: '(555) 987-6543',\n        address: '123 Business Ave, Suite 400, San Francisco, CA 94107',\n        website: 'www.acmecorp.com',\n      },\n      tags: ['Marketing', 'VIP', 'Enterprise'],\n    },\n    {\n      name: 'John Doe',\n      title: 'Software Engineer',\n      company: 'Tech Innovations',\n      avatar: {\n        src: 'https://randomuser.me/api/portraits/men/44.jpg',\n        status: 'busy' as const,\n      },\n      contactInfo: {\n        email: 'john.doe@techinnovations.com',\n        phone: '(555) 234-5678',\n        mobile: '(555) 876-5432',\n      },\n      tags: ['Engineering', 'Developer'],\n    },\n    {\n      name: 'Sarah Johnson',\n      title: 'Financial Advisor',\n      company: 'Wealth Management Inc.',\n      avatar: {\n        initials: 'SJ',\n        status: 'away' as const,\n      },\n      contactInfo: {\n        email: 'sarah.j@wealthmanagement.com',\n        phone: '(555) 345-6789',\n      },\n      tags: ['Finance', 'Advisor'],\n    },\n    {\n      name: 'Michael Chen',\n      title: 'Product Manager',\n      company: 'Innovative Solutions',\n      avatar: {\n        src: 'https://randomuser.me/api/portraits/men/67.jpg',\n        status: 'offline' as const,\n      },\n      contactInfo: {\n        email: 'michael.chen@innovative.com',\n        phone: '(555) 456-7890',\n      },\n      tags: ['Product', 'Management'],\n    },\n  ];\n\n  return (\n    <div className={cn('space-y-6', className)}>\n      <div className=\"flex items-center justify-between\">\n        <h2 className=\"text-2xl font-bold\">Contact Cards</h2>\n        <div className=\"flex items-center space-x-2\">\n          <button\n            onClick={() => setLayout('vertical')}\n            className={cn(\n              'px-3 py-1 rounded-md',\n              layout === 'vertical'\n                ? 'bg-primary text-primary-foreground'\n                : 'bg-muted text-muted-foreground'\n            )}\n          >\n            Vertical\n          </button>\n          <button\n            onClick={() => setLayout('horizontal')}\n            className={cn(\n              'px-3 py-1 rounded-md',\n              layout === 'horizontal'\n                ? 'bg-primary text-primary-foreground'\n                : 'bg-muted text-muted-foreground'\n            )}\n          >\n            Horizontal\n          </button>\n        </div>\n      </div>\n\n      <div className=\"space-y-6\">\n        <div className=\"space-y-3\">\n          <h3 className=\"text-lg font-medium\">Basic Contact Cards</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            {contacts.map((contact, index) => (\n              <ContactCard\n                key={index}\n                name={contact.name}\n                title={contact.title}\n                company={contact.company}\n                avatar={contact.avatar}\n                contactInfo={contact.contactInfo}\n                tags={contact.tags}\n                layout={layout}\n                actions={\n                  <>\n                    <ContactCallButton onClick={() => alert(`Calling ${contact.name}`)} />\n                    <ContactEmailButton onClick={() => alert(`Emailing ${contact.name}`)} />\n                    <ContactMessageButton onClick={() => alert(`Messaging ${contact.name}`)} />\n                  </>\n                }\n              />\n            ))}\n          </div>\n        </div>\n\n        <div className=\"space-y-3\">\n          <h3 className=\"text-lg font-medium\">Contact Card Variants</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n            <ContactCard\n              name=\"Default Variant\"\n              title=\"Software Engineer\"\n              avatar={{ initials: 'DV', status: 'online' }}\n              contactInfo={{ email: 'default@example.com' }}\n              variant=\"default\"\n              layout={layout}\n            />\n\n            <ContactCard\n              name=\"Primary Variant\"\n              title=\"Product Manager\"\n              avatar={{ initials: 'PV', status: 'online' }}\n              contactInfo={{ email: 'primary@example.com' }}\n              variant=\"primary\"\n              layout={layout}\n            />\n\n            <ContactCard\n              name=\"Accent Variant\"\n              title=\"Designer\"\n              avatar={{ initials: 'AV', status: 'online' }}\n              contactInfo={{ email: 'accent@example.com' }}\n              variant=\"accent\"\n              layout={layout}\n            />\n\n            <ContactCard\n              name=\"Outline Variant\"\n              title=\"Marketing\"\n              avatar={{ initials: 'OV', status: 'online' }}\n              contactInfo={{ email: 'outline@example.com' }}\n              variant=\"outline\"\n              layout={layout}\n            />\n          </div>\n        </div>\n\n        <div className=\"space-y-3\">\n          <h3 className=\"text-lg font-medium\">Contact Card Sizes</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <ContactCard\n              name=\"Small Size\"\n              title=\"Developer\"\n              avatar={{ initials: 'SS' }}\n              contactInfo={{ email: 'small@example.com' }}\n              size=\"sm\"\n              layout={layout}\n            />\n\n            <ContactCard\n              name=\"Medium Size\"\n              title=\"Designer\"\n              avatar={{ initials: 'MS' }}\n              contactInfo={{ email: 'medium@example.com' }}\n              size=\"md\"\n              layout={layout}\n            />\n\n            <ContactCard\n              name=\"Large Size\"\n              title=\"Manager\"\n              avatar={{ initials: 'LS' }}\n              contactInfo={{ email: 'large@example.com' }}\n              size=\"lg\"\n              layout={layout}\n            />\n          </div>\n        </div>\n\n        <div className=\"space-y-3\">\n          <h3 className=\"text-lg font-medium\">Interactive Contact Cards</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <ContactCard\n              name=\"Hover Effect\"\n              title=\"Software Engineer\"\n              avatar={{ initials: 'HE', status: 'online' }}\n              contactInfo={{ email: 'hover@example.com' }}\n              withHover\n              layout={layout}\n            />\n\n            <ContactCard\n              name=\"With Shadow\"\n              title=\"Product Manager\"\n              avatar={{ initials: 'WS', status: 'online' }}\n              contactInfo={{ email: 'shadow@example.com' }}\n              withShadow\n              layout={layout}\n            />\n          </div>\n        </div>\n\n        <div className=\"space-y-3\">\n          <h3 className=\"text-lg font-medium\">Contact Card Components</h3>\n          <div className=\"p-4 border border-border rounded-lg space-y-4\">\n            <div className=\"space-y-2\">\n              <h4 className=\"font-medium\">Contact Avatars</h4>\n              <div className=\"flex flex-wrap gap-4\">\n                <ContactAvatar src=\"https://randomuser.me/api/portraits/women/32.jpg\" alt=\"Jane Smith\" size=\"sm\" />\n                <ContactAvatar src=\"https://randomuser.me/api/portraits/men/44.jpg\" alt=\"John Doe\" size=\"md\" />\n                <ContactAvatar initials=\"SJ\" size=\"lg\" />\n                <ContactAvatar initials=\"MC\" size=\"xl\" />\n                <ContactAvatar src=\"https://randomuser.me/api/portraits/women/32.jpg\" alt=\"Jane Smith\" status=\"online\" size=\"md\" />\n                <ContactAvatar src=\"https://randomuser.me/api/portraits/men/44.jpg\" alt=\"John Doe\" status=\"busy\" size=\"md\" />\n                <ContactAvatar initials=\"SJ\" status=\"away\" size=\"md\" />\n                <ContactAvatar initials=\"MC\" status=\"offline\" size=\"md\" />\n              </div>\n            </div>\n\n            <div className=\"space-y-2\">\n              <h4 className=\"font-medium\">Contact Info Items</h4>\n              <div className=\"space-y-2 max-w-md\">\n                <ContactInfoItem\n                  icon={\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"16\"\n                      height=\"16\"\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      strokeWidth=\"2\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                    >\n                      <rect width=\"20\" height=\"16\" x=\"2\" y=\"4\" rx=\"2\" />\n                      <path d=\"m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7\" />\n                    </svg>\n                  }\n                  label=\"Email\"\n                  value=\"example@email.com\"\n                  href=\"mailto:example@email.com\"\n                  copyable\n                />\n                <ContactInfoItem\n                  icon={\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"16\"\n                      height=\"16\"\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      strokeWidth=\"2\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                    >\n                      <path d=\"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z\" />\n                    </svg>\n                  }\n                  label=\"Phone\"\n                  value=\"(555) 123-4567\"\n                  href=\"tel:(555) 123-4567\"\n                />\n              </div>\n            </div>\n\n            <div className=\"space-y-2\">\n              <h4 className=\"font-medium\">Contact Action Buttons</h4>\n              <div className=\"flex flex-wrap gap-2\">\n                <ContactCallButton />\n                <ContactEmailButton />\n                <ContactMessageButton />\n                <ContactActionButton\n                  icon={\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"16\"\n                      height=\"16\"\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      strokeWidth=\"2\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                    >\n                      <path d=\"M20 10c0 6-8 12-8 12s-8-6-8-12a8 8 0 0 1 16 0Z\" />\n                      <circle cx=\"12\" cy=\"10\" r=\"3\" />\n                    </svg>\n                  }\n                  label=\"Map\"\n                  variant=\"primary\"\n                />\n                <ContactActionButton\n                  icon={\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"16\"\n                      height=\"16\"\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      strokeWidth=\"2\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                    >\n                      <path d=\"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z\" />\n                    </svg>\n                  }\n                  label=\"Chat\"\n                  variant=\"secondary\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","'use client';\n\nimport { useState } from 'react';\nimport { cn } from '../../lib/utils';\nimport {\n  Timeline,\n  TimelineItem,\n  TimelineContent,\n  TimelineSeparator,\n  TimelineDot,\n} from '../ui/timeline';\n\nexport interface TimelineDemoProps {\n  className?: string;\n}\n\nexport function TimelineDemo({ className }: TimelineDemoProps) {\n  const [orientation, setOrientation] = useState<'vertical' | 'horizontal'>('vertical');\n\n  return (\n    <div className={cn('space-y-6', className)}>\n      <div className=\"flex items-center justify-between\">\n        <h2 className=\"text-2xl font-bold\">Timeline Components</h2>\n        <div className=\"flex items-center space-x-2\">\n          <button\n            onClick={() => setOrientation('vertical')}\n            className={cn(\n              'px-3 py-1 rounded-md',\n              orientation === 'vertical'\n                ? 'bg-primary text-primary-foreground'\n                : 'bg-muted text-muted-foreground'\n            )}\n          >\n            Vertical\n          </button>\n          <button\n            onClick={() => setOrientation('horizontal')}\n            className={cn(\n              'px-3 py-1 rounded-md',\n              orientation === 'horizontal'\n                ? 'bg-primary text-primary-foreground'\n                : 'bg-muted text-muted-foreground'\n            )}\n          >\n            Horizontal\n          </button>\n        </div>\n      </div>\n\n      <div className=\"space-y-8\">\n        <div className=\"space-y-3\">\n          <h3 className=\"text-lg font-medium\">Basic Timeline</h3>\n          <div className=\"p-4 border border-border rounded-lg\">\n            <Timeline orientation={orientation}>\n              <TimelineItem active orientation={orientation}>\n                <TimelineContent\n                  title=\"Project Created\"\n                  subtitle=\"Initial project setup and configuration\"\n                  date=\"June 1, 2025\"\n                >\n                  <p className=\"text-sm\">\n                    Created the project repository and set up the initial development environment.\n                  </p>\n                </TimelineContent>\n              </TimelineItem>\n\n              <TimelineItem active orientation={orientation}>\n                <TimelineContent\n                  title=\"Design Phase\"\n                  subtitle=\"UI/UX design and prototyping\"\n                  date=\"June 5, 2025\"\n                >\n                  <p className=\"text-sm\">\n                    Completed the design mockups and user flow diagrams.\n                  </p>\n                </TimelineContent>\n              </TimelineItem>\n\n              <TimelineItem active orientation={orientation}>\n                <TimelineContent\n                  title=\"Development Started\"\n                  subtitle=\"Frontend and backend implementation\"\n                  date=\"June 10, 2025\"\n                >\n                  <p className=\"text-sm\">\n                    Started implementing the core features and functionality.\n                  </p>\n                </TimelineContent>\n              </TimelineItem>\n\n              <TimelineItem orientation={orientation}>\n                <TimelineContent\n                  title=\"Testing Phase\"\n                  subtitle=\"QA and user testing\"\n                  date=\"June 20, 2025\"\n                >\n                  <p className=\"text-sm\">\n                    Conducting comprehensive testing to ensure quality and reliability.\n                  </p>\n                </TimelineContent>\n              </TimelineItem>\n\n              <TimelineItem orientation={orientation} connector={false}>\n                <TimelineContent\n                  title=\"Deployment\"\n                  subtitle=\"Production release\"\n                  date=\"June 30, 2025\"\n                >\n                  <p className=\"text-sm\">\n                    Deploying the application to production environment.\n                  </p>\n                </TimelineContent>\n              </TimelineItem>\n            </Timeline>\n          </div>\n        </div>\n\n        <div className=\"space-y-3\">\n          <h3 className=\"text-lg font-medium\">Timeline with Custom Icons</h3>\n          <div className=\"p-4 border border-border rounded-lg\">\n            <Timeline orientation={orientation}>\n              <TimelineItem\n                orientation={orientation}\n                active\n                icon={\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"16\"\n                    height=\"16\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeWidth=\"2\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                  >\n                    <path d=\"M12 5v14\" />\n                    <path d=\"M5 12h14\" />\n                  </svg>\n                }\n              >\n                <TimelineContent\n                  title=\"Project Created\"\n                  date=\"June 1, 2025\"\n                />\n              </TimelineItem>\n\n              <TimelineItem\n                orientation={orientation}\n                active\n                icon={\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"16\"\n                    height=\"16\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeWidth=\"2\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                  >\n                    <path d=\"M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z\" />\n                    <polyline points=\"14 2 14 8 20 8\" />\n                  </svg>\n                }\n              >\n                <TimelineContent\n                  title=\"Documentation\"\n                  date=\"June 5, 2025\"\n                />\n              </TimelineItem>\n\n              <TimelineItem\n                orientation={orientation}\n                active\n                icon={\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"16\"\n                    height=\"16\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeWidth=\"2\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                  >\n                    <path d=\"m18 16 4-4-4-4\" />\n                    <path d=\"m6 8-4 4 4 4\" />\n                    <path d=\"m14.5 4-5 16\" />\n                  </svg>\n                }\n              >\n                <TimelineContent\n                  title=\"Development\"\n                  date=\"June 10, 2025\"\n                />\n              </TimelineItem>\n\n              <TimelineItem\n                orientation={orientation}\n                icon={\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"16\"\n                    height=\"16\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeWidth=\"2\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                  >\n                    <path d=\"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" />\n                    <path d=\"m9 12 2 2 4-4\" />\n                  </svg>\n                }\n              >\n                <TimelineContent\n                  title=\"Testing\"\n                  date=\"June 20, 2025\"\n                />\n              </TimelineItem>\n\n              <TimelineItem\n                orientation={orientation}\n                connector={false}\n                icon={\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"16\"\n                    height=\"16\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeWidth=\"2\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                  >\n                    <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\" />\n                    <polyline points=\"22 4 12 14.01 9 11.01\" />\n                  </svg>\n                }\n              >\n                <TimelineContent\n                  title=\"Deployment\"\n                  date=\"June 30, 2025\"\n                />\n              </TimelineItem>\n            </Timeline>\n          </div>\n        </div>\n\n        <div className=\"space-y-3\">\n          <h3 className=\"text-lg font-medium\">Timeline with Separators</h3>\n          <div className=\"p-4 border border-border rounded-lg\">\n            <Timeline orientation={orientation}>\n              <TimelineSeparator label=\"Planning Phase\" />\n\n              <TimelineItem active orientation={orientation}>\n                <TimelineContent\n                  title=\"Requirements Gathering\"\n                  date=\"May 15, 2025\"\n                />\n              </TimelineItem>\n\n              <TimelineItem active orientation={orientation}>\n                <TimelineContent\n                  title=\"Project Scoping\"\n                  date=\"May 20, 2025\"\n                />\n              </TimelineItem>\n\n              <TimelineSeparator label=\"Design Phase\" />\n\n              <TimelineItem active orientation={orientation}>\n                <TimelineContent\n                  title=\"UI/UX Design\"\n                  date=\"June 1, 2025\"\n                />\n              </TimelineItem>\n\n              <TimelineItem active orientation={orientation}>\n                <TimelineContent\n                  title=\"Prototype Review\"\n                  date=\"June 10, 2025\"\n                />\n              </TimelineItem>\n\n              <TimelineSeparator label=\"Implementation Phase\" />\n\n              <TimelineItem orientation={orientation}>\n                <TimelineContent\n                  title=\"Development\"\n                  date=\"June 15, 2025\"\n                />\n              </TimelineItem>\n\n              <TimelineItem orientation={orientation} connector={false}>\n                <TimelineContent\n                  title=\"Testing & Deployment\"\n                  date=\"June 30, 2025\"\n                />\n              </TimelineItem>\n            </Timeline>\n          </div>\n        </div>\n\n        <div className=\"space-y-3\">\n          <h3 className=\"text-lg font-medium\">Timeline Variants</h3>\n          <div className=\"p-4 border border-border rounded-lg\">\n            <h4 className=\"font-medium mb-3\">Compact Timeline</h4>\n            <Timeline orientation={orientation} compact>\n              <TimelineItem active orientation={orientation}>\n                <TimelineContent title=\"Step 1\" date=\"9:00 AM\" />\n              </TimelineItem>\n              <TimelineItem active orientation={orientation}>\n                <TimelineContent title=\"Step 2\" date=\"10:30 AM\" />\n              </TimelineItem>\n              <TimelineItem active orientation={orientation}>\n                <TimelineContent title=\"Step 3\" date=\"12:00 PM\" />\n              </TimelineItem>\n              <TimelineItem orientation={orientation}>\n                <TimelineContent title=\"Step 4\" date=\"2:30 PM\" />\n              </TimelineItem>\n              <TimelineItem orientation={orientation} connector={false}>\n                <TimelineContent title=\"Step 5\" date=\"4:00 PM\" />\n              </TimelineItem>\n            </Timeline>\n\n            <h4 className=\"font-medium mt-6 mb-3\">Dashed Connector</h4>\n            <Timeline orientation={orientation}>\n              <TimelineItem active orientation={orientation} connectorStyle=\"dashed\">\n                <TimelineContent title=\"Task 1\" date=\"Monday\" />\n              </TimelineItem>\n              <TimelineItem active orientation={orientation} connectorStyle=\"dashed\">\n                <TimelineContent title=\"Task 2\" date=\"Tuesday\" />\n              </TimelineItem>\n              <TimelineItem orientation={orientation} connectorStyle=\"dashed\">\n                <TimelineContent title=\"Task 3\" date=\"Wednesday\" />\n              </TimelineItem>\n              <TimelineItem orientation={orientation} connectorStyle=\"dashed\" connector={false}>\n                <TimelineContent title=\"Task 4\" date=\"Thursday\" />\n              </TimelineItem>\n            </Timeline>\n\n            <h4 className=\"font-medium mt-6 mb-3\">Colored Timeline</h4>\n            <Timeline orientation={orientation}>\n              <TimelineItem\n                active\n                orientation={orientation}\n                iconBackground=\"#4CAF50\"\n                connectorColor=\"#4CAF50\"\n              >\n                <TimelineContent title=\"Success\" date=\"Completed\" />\n              </TimelineItem>\n              <TimelineItem\n                active\n                orientation={orientation}\n                iconBackground=\"#2196F3\"\n                connectorColor=\"#2196F3\"\n              >\n                <TimelineContent title=\"Info\" date=\"In Progress\" />\n              </TimelineItem>\n              <TimelineItem\n                orientation={orientation}\n                iconBackground=\"#FFC107\"\n                connectorColor=\"#FFC107\"\n              >\n                <TimelineContent title=\"Warning\" date=\"Pending\" />\n              </TimelineItem>\n              <TimelineItem\n                orientation={orientation}\n                iconBackground=\"#F44336\"\n                connectorColor=\"#F44336\"\n                connector={false}\n              >\n                <TimelineContent title=\"Error\" date=\"Failed\" />\n              </TimelineItem>\n            </Timeline>\n          </div>\n        </div>\n\n        <div className=\"space-y-3\">\n          <h3 className=\"text-lg font-medium\">Timeline Components</h3>\n          <div className=\"p-4 border border-border rounded-lg space-y-4\">\n            <div>\n              <h4 className=\"font-medium mb-2\">Timeline Dots</h4>\n              <div className=\"flex items-center space-x-4\">\n                <TimelineDot size=\"sm\" />\n                <TimelineDot size=\"md\" />\n                <TimelineDot size=\"lg\" />\n                <TimelineDot size=\"md\" active />\n                <TimelineDot size=\"md\" variant=\"outlined\" />\n                <TimelineDot size=\"md\" variant=\"outlined\" active />\n                <TimelineDot size=\"md\" color=\"#4CAF50\" />\n                <TimelineDot size=\"md\" color=\"#F44336\" />\n                <TimelineDot size=\"md\" variant=\"outlined\" color=\"#2196F3\" />\n              </div>\n            </div>\n\n            <div>\n              <h4 className=\"font-medium mb-2\">Timeline Separators</h4>\n              <TimelineSeparator label=\"Phase 1\" />\n              <TimelineSeparator />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","'use client';\n\nimport { useState } from 'react';\nimport { cn } from '../../lib/utils';\nimport {\n  TaskCard,\n  TaskList,\n  PriorityBadge,\n  StatusBadge,\n  TaskProgress,\n  DueDate,\n  Assignee,\n} from '../ui/task-card';\n\nexport interface TaskCardDemoProps {\n  className?: string;\n}\n\nexport function TaskCardDemo({ className }: TaskCardDemoProps) {\n  const [layout, setLayout] = useState<'grid' | 'list'>('grid');\n  const [columns, setColumns] = useState<1 | 2 | 3 | 4>(2);\n\n  // Sample tasks data\n  const tasks = [\n    {\n      title: 'Implement Authentication',\n      description: 'Set up user authentication with JWT and secure routes',\n      priority: 'high' as const,\n      status: 'in-progress' as const,\n      progress: 60,\n      dueDate: '2025-06-15',\n      assignee: {\n        name: 'John Doe',\n        avatar: 'https://randomuser.me/api/portraits/men/44.jpg',\n      },\n      tags: ['Backend', 'Security'],\n    },\n    {\n      title: 'Design Dashboard UI',\n      description: 'Create wireframes and mockups for the main dashboard',\n      priority: 'medium' as const,\n      status: 'todo' as const,\n      progress: 20,\n      dueDate: '2025-06-20',\n      assignee: {\n        name: 'Jane Smith',\n        avatar: 'https://randomuser.me/api/portraits/women/32.jpg',\n      },\n      tags: ['UI/UX', 'Design'],\n    },\n    {\n      title: 'API Integration',\n      description: 'Connect frontend with backend API endpoints',\n      priority: 'high' as const,\n      status: 'review' as const,\n      progress: 90,\n      dueDate: '2025-06-10',\n      assignee: {\n        name: 'Michael Chen',\n      },\n      tags: ['Frontend', 'API'],\n    },\n    {\n      title: 'Database Optimization',\n      description: 'Improve query performance and add indexes',\n      priority: 'low' as const,\n      status: 'done' as const,\n      progress: 100,\n      dueDate: '2025-06-05',\n      assignee: {\n        name: 'Sarah Johnson',\n      },\n      tags: ['Database', 'Performance'],\n    },\n    {\n      title: 'Fix Responsive Layout',\n      description: 'Address mobile layout issues on small screens',\n      priority: 'urgent' as const,\n      status: 'blocked' as const,\n      progress: 30,\n      dueDate: '2025-06-08',\n      assignee: {\n        name: 'Alex Wong',\n      },\n      tags: ['Frontend', 'Responsive'],\n    },\n    {\n      title: 'Write Documentation',\n      description: 'Create user and developer documentation',\n      priority: 'medium' as const,\n      status: 'todo' as const,\n      progress: 10,\n      dueDate: '2025-06-25',\n      assignee: {\n        name: 'Emily Davis',\n      },\n      tags: ['Documentation'],\n    },\n  ];\n\n  return (\n    <div className={cn('space-y-6', className)}>\n      <div className=\"flex items-center justify-between\">\n        <h2 className=\"text-2xl font-bold\">Task Cards</h2>\n        <div className=\"flex items-center space-x-2\">\n          <div className=\"flex items-center space-x-1 mr-4\">\n            <button\n              onClick={() => setLayout('grid')}\n              className={cn(\n                'p-1 rounded-md',\n                layout === 'grid'\n                  ? 'bg-primary text-primary-foreground'\n                  : 'bg-muted text-muted-foreground'\n              )}\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"20\"\n                height=\"20\"\n                viewBox=\"0 0 24 24\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                strokeWidth=\"2\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              >\n                <rect width=\"7\" height=\"7\" x=\"3\" y=\"3\" rx=\"1\" />\n                <rect width=\"7\" height=\"7\" x=\"14\" y=\"3\" rx=\"1\" />\n                <rect width=\"7\" height=\"7\" x=\"14\" y=\"14\" rx=\"1\" />\n                <rect width=\"7\" height=\"7\" x=\"3\" y=\"14\" rx=\"1\" />\n              </svg>\n            </button>\n            <button\n              onClick={() => setLayout('list')}\n              className={cn(\n                'p-1 rounded-md',\n                layout === 'list'\n                  ? 'bg-primary text-primary-foreground'\n                  : 'bg-muted text-muted-foreground'\n              )}\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"20\"\n                height=\"20\"\n                viewBox=\"0 0 24 24\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                strokeWidth=\"2\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              >\n                <line x1=\"8\" x2=\"21\" y1=\"6\" y2=\"6\" />\n                <line x1=\"8\" x2=\"21\" y1=\"12\" y2=\"12\" />\n                <line x1=\"8\" x2=\"21\" y1=\"18\" y2=\"18\" />\n                <line x1=\"3\" x2=\"3.01\" y1=\"6\" y2=\"6\" />\n                <line x1=\"3\" x2=\"3.01\" y1=\"12\" y2=\"12\" />\n                <line x1=\"3\" x2=\"3.01\" y1=\"18\" y2=\"18\" />\n              </svg>\n            </button>\n          </div>\n          {layout === 'grid' && (\n            <div className=\"flex items-center space-x-1\">\n              {[1, 2, 3, 4].map((col) => (\n                <button\n                  key={col}\n                  onClick={() => setColumns(col as 1 | 2 | 3 | 4)}\n                  className={cn(\n                    'px-2 py-1 rounded-md text-sm',\n                    columns === col\n                      ? 'bg-primary text-primary-foreground'\n                      : 'bg-muted text-muted-foreground'\n                  )}\n                >\n                  {col}\n                </button>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div className=\"space-y-8\">\n        <div className=\"space-y-3\">\n          <h3 className=\"text-lg font-medium\">Task List</h3>\n          <TaskList\n            tasks={tasks}\n            layout={layout}\n            columns={columns}\n            gap=\"md\"\n          />\n        </div>\n\n        <div className=\"space-y-3\">\n          <h3 className=\"text-lg font-medium\">Task Card Variants</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n            <TaskCard\n              title=\"Default Variant\"\n              description=\"Default styling\"\n              priority=\"medium\"\n              status=\"todo\"\n              progress={50}\n              variant=\"default\"\n            />\n\n            <TaskCard\n              title=\"Primary Variant\"\n              description=\"Primary styling\"\n              priority=\"medium\"\n              status=\"in-progress\"\n              progress={50}\n              variant=\"primary\"\n            />\n\n            <TaskCard\n              title=\"Accent Variant\"\n              description=\"Accent styling\"\n              priority=\"medium\"\n              status=\"review\"\n              progress={50}\n              variant=\"accent\"\n            />\n\n            <TaskCard\n              title=\"Outline Variant\"\n              description=\"Outline styling\"\n              priority=\"medium\"\n              status=\"done\"\n              progress={50}\n              variant=\"outline\"\n            />\n          </div>\n        </div>\n\n        <div className=\"space-y-3\">\n          <h3 className=\"text-lg font-medium\">Task Card Sizes</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <TaskCard\n              title=\"Small Size\"\n              description=\"Compact layout\"\n              priority=\"medium\"\n              status=\"todo\"\n              size=\"sm\"\n            />\n\n            <TaskCard\n              title=\"Medium Size\"\n              description=\"Standard layout\"\n              priority=\"medium\"\n              status=\"in-progress\"\n              size=\"md\"\n            />\n\n            <TaskCard\n              title=\"Large Size\"\n              description=\"Spacious layout with more details and information\"\n              priority=\"medium\"\n              status=\"done\"\n              size=\"lg\"\n            />\n          </div>\n        </div>\n\n        <div className=\"space-y-3\">\n          <h3 className=\"text-lg font-medium\">Interactive Task Cards</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <TaskCard\n              title=\"With Hover Effect\"\n              description=\"Hover over me to see the effect\"\n              priority=\"medium\"\n              status=\"todo\"\n              withHover\n            />\n\n            <TaskCard\n              title=\"With Shadow\"\n              description=\"Card with shadow effect\"\n              priority=\"medium\"\n              status=\"todo\"\n              withShadow\n            />\n          </div>\n        </div>\n\n        <div className=\"space-y-3\">\n          <h3 className=\"text-lg font-medium\">Task Card Components</h3>\n          <div className=\"p-4 border border-border rounded-lg space-y-4\">\n            <div className=\"space-y-2\">\n              <h4 className=\"font-medium\">Priority Badges</h4>\n              <div className=\"flex flex-wrap gap-2\">\n                <PriorityBadge priority=\"low\" />\n                <PriorityBadge priority=\"medium\" />\n                <PriorityBadge priority=\"high\" />\n                <PriorityBadge priority=\"urgent\" />\n                <PriorityBadge priority=\"custom\" customColor=\"#9c27b0\" />\n              </div>\n            </div>\n\n            <div className=\"space-y-2\">\n              <h4 className=\"font-medium\">Status Badges</h4>\n              <div className=\"flex flex-wrap gap-2\">\n                <StatusBadge status=\"todo\" />\n                <StatusBadge status=\"in-progress\" />\n                <StatusBadge status=\"review\" />\n                <StatusBadge status=\"done\" />\n                <StatusBadge status=\"blocked\" />\n                <StatusBadge status=\"custom\" customColor=\"#ff9800\" />\n              </div>\n            </div>\n\n            <div className=\"space-y-2\">\n              <h4 className=\"font-medium\">Task Progress</h4>\n              <div className=\"space-y-2 max-w-md\">\n                <TaskProgress value={25} showLabel />\n                <TaskProgress value={50} showLabel />\n                <TaskProgress value={75} showLabel />\n                <TaskProgress value={100} showLabel />\n              </div>\n            </div>\n\n            <div className=\"space-y-2\">\n              <h4 className=\"font-medium\">Due Dates</h4>\n              <div className=\"flex flex-wrap gap-4\">\n                <DueDate date=\"2025-06-30\" />\n                <DueDate date=\"2025-05-15\" isPastDue />\n                <DueDate date=\"2025-06-30\" showIcon={false} />\n              </div>\n            </div>\n\n            <div className=\"space-y-2\">\n              <h4 className=\"font-medium\">Assignees</h4>\n              <div className=\"flex flex-wrap gap-4\">\n                <Assignee name=\"John Doe\" avatar=\"https://randomuser.me/api/portraits/men/44.jpg\" />\n                <Assignee name=\"Jane Smith\" />\n                <Assignee name=\"Michael Chen\" size=\"sm\" />\n                <Assignee name=\"Sarah Johnson\" size=\"lg\" />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"mappings":"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","names":["jsx","jsx","isDarkMode","forwardRef","jsx","jsxs","forwardRef","isDarkMode","forwardRef","Fragment","jsx","jsxs","forwardRef","isDarkMode","forwardRef","jsx","jsxs","forwardRef","isDarkMode","forwardRef","jsx","jsxs","forwardRef","date","isDarkMode","jsx","jsxs","React","jsx","useState","jsx","jsxs","useState","useState","jsx","jsxs","useState","useState","Fragment","jsx","jsxs","useState","useState","jsx","jsxs","useState","useState","jsx","jsxs","useState"]}