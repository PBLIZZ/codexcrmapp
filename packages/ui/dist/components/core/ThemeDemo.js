'use client';
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from 'react';
import { cn } from '../../lib/utils';
import { useTheme } from './ThemeProvider';
import { ThemedCard, ThemedCardHeader, ThemedCardTitle, ThemedCardDescription, ThemedCardContent, ThemedCardFooter, } from '../ui/themed-card';
export function ThemeDemo({ className }) {
    const { theme, setTheme } = useTheme();
    const [activeTab, setActiveTab] = useState('colors');
    return (_jsxs("div", { className: cn('space-y-6', className), children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsx("h2", { className: "text-2xl font-bold", children: "Theme Demonstration" }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("button", { onClick: () => setTheme('light'), className: cn('px-3 py-1 rounded-md', theme === 'light'
                                    ? 'bg-primary text-primary-foreground'
                                    : 'bg-muted text-muted-foreground'), children: "Light" }), _jsx("button", { onClick: () => setTheme('dark'), className: cn('px-3 py-1 rounded-md', theme === 'dark'
                                    ? 'bg-primary text-primary-foreground'
                                    : 'bg-muted text-muted-foreground'), children: "Dark" }), _jsx("button", { onClick: () => setTheme('system'), className: cn('px-3 py-1 rounded-md', theme === 'system'
                                    ? 'bg-primary text-primary-foreground'
                                    : 'bg-muted text-muted-foreground'), children: "System" })] })] }), _jsxs("div", { className: "flex space-x-2 border-b", children: [_jsx("button", { onClick: () => setActiveTab('colors'), className: cn('px-4 py-2', activeTab === 'colors'
                            ? 'border-b-2 border-primary font-medium'
                            : 'text-muted-foreground'), children: "Color Palette" }), _jsx("button", { onClick: () => setActiveTab('components'), className: cn('px-4 py-2', activeTab === 'components'
                            ? 'border-b-2 border-primary font-medium'
                            : 'text-muted-foreground'), children: "Components" })] }), activeTab === 'colors' && (_jsxs("div", { className: "space-y-6", children: [_jsxs("div", { className: "space-y-3", children: [_jsx("h3", { className: "text-lg font-medium", children: "Primary Colors (Teal)" }), _jsx("div", { className: "grid grid-cols-5 gap-2", children: [50, 100, 200, 300, 400, 500, 600, 700, 800, 900].map((shade) => (_jsxs("div", { className: "space-y-1.5", children: [_jsx("div", { className: `h-10 w-full rounded-md`, style: { backgroundColor: `var(--primary-${shade})` } }), _jsx("div", { className: "text-xs", children: _jsxs("div", { className: "font-medium", children: ["Primary ", shade] }) })] }, `primary-${shade}`))) })] }), _jsxs("div", { className: "space-y-3", children: [_jsx("h3", { className: "text-lg font-medium", children: "Accent Colors (Orange)" }), _jsx("div", { className: "grid grid-cols-5 gap-2", children: [50, 100, 200, 300, 400, 500, 600, 700, 800, 900].map((shade) => (_jsxs("div", { className: "space-y-1.5", children: [_jsx("div", { className: `h-10 w-full rounded-md`, style: { backgroundColor: `var(--accent-${shade})` } }), _jsx("div", { className: "text-xs", children: _jsxs("div", { className: "font-medium", children: ["Accent ", shade] }) })] }, `accent-${shade}`))) })] }), _jsxs("div", { className: "space-y-3", children: [_jsx("h3", { className: "text-lg font-medium", children: "UI Colors" }), _jsxs("div", { className: "grid grid-cols-3 gap-2", children: [_jsxs("div", { className: "space-y-1.5", children: [_jsx("div", { className: `h-10 w-full rounded-md`, style: { backgroundColor: `var(--background)` } }), _jsx("div", { className: "text-xs", children: _jsx("div", { className: "font-medium", children: "Background" }) })] }), _jsxs("div", { className: "space-y-1.5", children: [_jsx("div", { className: `h-10 w-full rounded-md`, style: { backgroundColor: `var(--foreground)` } }), _jsx("div", { className: "text-xs", children: _jsx("div", { className: "font-medium", children: "Foreground" }) })] }), _jsxs("div", { className: "space-y-1.5", children: [_jsx("div", { className: `h-10 w-full rounded-md`, style: { backgroundColor: `var(--card)` } }), _jsx("div", { className: "text-xs", children: _jsx("div", { className: "font-medium", children: "Card" }) })] }), _jsxs("div", { className: "space-y-1.5", children: [_jsx("div", { className: `h-10 w-full rounded-md`, style: { backgroundColor: `var(--card-foreground)` } }), _jsx("div", { className: "text-xs", children: _jsx("div", { className: "font-medium", children: "Card Foreground" }) })] }), _jsxs("div", { className: "space-y-1.5", children: [_jsx("div", { className: `h-10 w-full rounded-md`, style: { backgroundColor: `var(--muted)` } }), _jsx("div", { className: "text-xs", children: _jsx("div", { className: "font-medium", children: "Muted" }) })] }), _jsxs("div", { className: "space-y-1.5", children: [_jsx("div", { className: `h-10 w-full rounded-md`, style: { backgroundColor: `var(--muted-foreground)` } }), _jsx("div", { className: "text-xs", children: _jsx("div", { className: "font-medium", children: "Muted Foreground" }) })] })] })] })] })), activeTab === 'components' && (_jsxs("div", { className: "space-y-8", children: [_jsxs("div", { className: "space-y-3", children: [_jsx("h3", { className: "text-lg font-medium", children: "Card Variants" }), _jsxs("div", { className: "grid grid-cols-2 gap-4", children: [_jsxs(ThemedCard, { children: [_jsxs(ThemedCardHeader, { children: [_jsx(ThemedCardTitle, { children: "Default Card" }), _jsx(ThemedCardDescription, { children: "This is a default card with no special styling" })] }), _jsx(ThemedCardContent, { children: _jsx("p", { children: "Card content goes here" }) }), _jsx(ThemedCardFooter, { children: _jsx("p", { className: "text-sm text-muted-foreground", children: "Last updated: Today" }) })] }), _jsxs(ThemedCard, { variant: "primary", children: [_jsxs(ThemedCardHeader, { children: [_jsx(ThemedCardTitle, { children: "Primary Card" }), _jsx(ThemedCardDescription, { children: "This card uses the primary color" })] }), _jsx(ThemedCardContent, { children: _jsx("p", { children: "Card content goes here" }) }), _jsx(ThemedCardFooter, { children: _jsx("p", { className: "text-sm opacity-80", children: "Last updated: Today" }) })] }), _jsxs(ThemedCard, { variant: "accent", children: [_jsxs(ThemedCardHeader, { children: [_jsx(ThemedCardTitle, { children: "Accent Card" }), _jsx(ThemedCardDescription, { children: "This card uses the accent color" })] }), _jsx(ThemedCardContent, { children: _jsx("p", { children: "Card content goes here" }) }), _jsx(ThemedCardFooter, { children: _jsx("p", { className: "text-sm opacity-80", children: "Last updated: Today" }) })] }), _jsxs(ThemedCard, { variant: "outline", withShadow: true, children: [_jsxs(ThemedCardHeader, { children: [_jsx(ThemedCardTitle, { children: "Outline Card with Shadow" }), _jsx(ThemedCardDescription, { children: "This card has an outline and shadow" })] }), _jsx(ThemedCardContent, { children: _jsx("p", { children: "Card content goes here" }) }), _jsx(ThemedCardFooter, { children: _jsx("p", { className: "text-sm text-muted-foreground", children: "Last updated: Today" }) })] })] })] }), _jsxs("div", { className: "space-y-3", children: [_jsx("h3", { className: "text-lg font-medium", children: "Card Sizes" }), _jsxs("div", { className: "grid grid-cols-3 gap-4", children: [_jsxs(ThemedCard, { size: "sm", children: [_jsx(ThemedCardHeader, { children: _jsx(ThemedCardTitle, { children: "Small Card" }) }), _jsx(ThemedCardContent, { children: _jsx("p", { children: "Compact content" }) })] }), _jsxs(ThemedCard, { size: "md", children: [_jsx(ThemedCardHeader, { children: _jsx(ThemedCardTitle, { children: "Medium Card" }) }), _jsx(ThemedCardContent, { children: _jsx("p", { children: "Standard content" }) })] }), _jsxs(ThemedCard, { size: "lg", children: [_jsx(ThemedCardHeader, { children: _jsx(ThemedCardTitle, { children: "Large Card" }) }), _jsx(ThemedCardContent, { children: _jsx("p", { children: "Spacious content" }) })] })] })] }), _jsxs("div", { className: "space-y-3", children: [_jsx("h3", { className: "text-lg font-medium", children: "Interactive Cards" }), _jsxs("div", { className: "grid grid-cols-2 gap-4", children: [_jsxs(ThemedCard, { withHover: true, children: [_jsxs(ThemedCardHeader, { children: [_jsx(ThemedCardTitle, { children: "Hover Effect" }), _jsx(ThemedCardDescription, { children: "This card has a hover effect" })] }), _jsx(ThemedCardContent, { children: _jsx("p", { children: "Hover over me" }) })] }), _jsxs(ThemedCard, { withHover: true, withShadow: true, children: [_jsxs(ThemedCardHeader, { children: [_jsx(ThemedCardTitle, { children: "Hover + Shadow" }), _jsx(ThemedCardDescription, { children: "This card has hover and shadow effects" })] }), _jsx(ThemedCardContent, { children: _jsx("p", { children: "Hover over me" }) })] })] })] })] }))] }));
}
//# sourceMappingURL=ThemeDemo.js.map