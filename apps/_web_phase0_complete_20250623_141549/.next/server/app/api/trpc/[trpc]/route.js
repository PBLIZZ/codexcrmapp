/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/trpc/[trpc]/route";
exports.ids = ["app/api/trpc/[trpc]/route"];
exports.modules = {

/***/ "(rsc)/../../node_modules/.pnpm/@opentelemetry+instrumentation@0.57.2_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/platform/node sync recursive":
/*!*************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation@0.57.2_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/ sync ***!
  \*************************************************************************************************************************************************************************/
/***/ ((module) => {

function webpackEmptyContext(req) {
	var e = new Error("Cannot find module '" + req + "'");
	e.code = 'MODULE_NOT_FOUND';
	throw e;
}
webpackEmptyContext.keys = () => ([]);
webpackEmptyContext.resolve = webpackEmptyContext;
webpackEmptyContext.id = "(rsc)/../../node_modules/.pnpm/@opentelemetry+instrumentation@0.57.2_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/platform/node sync recursive";
module.exports = webpackEmptyContext;

/***/ }),

/***/ "(rsc)/../../node_modules/.pnpm/@supabase+realtime-js@2.11.10/node_modules/@supabase/realtime-js/dist/main sync recursive":
/*!*****************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@supabase+realtime-js@2.11.10/node_modules/@supabase/realtime-js/dist/main/ sync ***!
  \*****************************************************************************************************************/
/***/ ((module) => {

function webpackEmptyContext(req) {
	var e = new Error("Cannot find module '" + req + "'");
	e.code = 'MODULE_NOT_FOUND';
	throw e;
}
webpackEmptyContext.keys = () => ([]);
webpackEmptyContext.resolve = webpackEmptyContext;
webpackEmptyContext.id = "(rsc)/../../node_modules/.pnpm/@supabase+realtime-js@2.11.10/node_modules/@supabase/realtime-js/dist/main sync recursive";
module.exports = webpackEmptyContext;

/***/ }),

/***/ "(rsc)/../../node_modules/.pnpm/next@15.3.1_@babel+core@7.27.4_@opentelemetry+api@1.9.0_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Ftrpc%2F%5Btrpc%5D%2Froute&page=%2Fapi%2Ftrpc%2F%5Btrpc%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftrpc%2F%5Btrpc%5D%2Froute.ts&appDir=%2FUsers%2Fpeterjamesblizzard%2Fprojects%2Fapp_codexcrmapp%2Fapps%2Fweb%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fpeterjamesblizzard%2Fprojects%2Fapp_codexcrmapp%2Fapps%2Fweb&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ../../node_modules/.pnpm/next@15.3.1_@babel+core@7.27.4_@opentelemetry+api@1.9.0_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Ftrpc%2F%5Btrpc%5D%2Froute&page=%2Fapi%2Ftrpc%2F%5Btrpc%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftrpc%2F%5Btrpc%5D%2Froute.ts&appDir=%2FUsers%2Fpeterjamesblizzard%2Fprojects%2Fapp_codexcrmapp%2Fapps%2Fweb%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fpeterjamesblizzard%2Fprojects%2Fapp_codexcrmapp%2Fapps%2Fweb&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/../../node_modules/.pnpm/next@15.3.1_@babel+core@7.27.4_@opentelemetry+api@1.9.0_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/../../node_modules/.pnpm/next@15.3.1_@babel+core@7.27.4_@opentelemetry+api@1.9.0_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/../../node_modules/.pnpm/next@15.3.1_@babel+core@7.27.4_@opentelemetry+api@1.9.0_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_peterjamesblizzard_projects_app_codexcrmapp_apps_web_app_api_trpc_trpc_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/trpc/[trpc]/route.ts */ \"(rsc)/./app/api/trpc/[trpc]/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/trpc/[trpc]/route\",\n        pathname: \"/api/trpc/[trpc]\",\n        filename: \"route\",\n        bundlePath: \"app/api/trpc/[trpc]/route\"\n    },\n    resolvedPagePath: \"/Users/peterjamesblizzard/projects/app_codexcrmapp/apps/web/app/api/trpc/[trpc]/route.ts\",\n    nextConfigOutput,\n    userland: _Users_peterjamesblizzard_projects_app_codexcrmapp_apps_web_app_api_trpc_trpc_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL25leHRAMTUuMy4xX0BiYWJlbCtjb3JlQDcuMjcuNF9Ab3BlbnRlbGVtZXRyeSthcGlAMS45LjBfcmVhY3QtZG9tQDE5LjEuMF9yZWFjdEAxOS4xLjBfX3JlYWN0QDE5LjEuMC9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIvaW5kZXguanM/bmFtZT1hcHAlMkZhcGklMkZ0cnBjJTJGJTVCdHJwYyU1RCUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGdHJwYyUyRiU1QnRycGMlNUQlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZ0cnBjJTJGJTVCdHJwYyU1RCUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRnBldGVyamFtZXNibGl6emFyZCUyRnByb2plY3RzJTJGYXBwX2NvZGV4Y3JtYXBwJTJGYXBwcyUyRndlYiUyRmFwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9JTJGVXNlcnMlMkZwZXRlcmphbWVzYmxpenphcmQlMkZwcm9qZWN0cyUyRmFwcF9jb2RleGNybWFwcCUyRmFwcHMlMkZ3ZWImaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQStGO0FBQ3ZDO0FBQ3FCO0FBQ3dDO0FBQ3JIO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qix5R0FBbUI7QUFDM0M7QUFDQSxjQUFjLGtFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsc0RBQXNEO0FBQzlEO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQzBGOztBQUUxRiIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvVXNlcnMvcGV0ZXJqYW1lc2JsaXp6YXJkL3Byb2plY3RzL2FwcF9jb2RleGNybWFwcC9hcHBzL3dlYi9hcHAvYXBpL3RycGMvW3RycGNdL3JvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS90cnBjL1t0cnBjXS9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3RycGMvW3RycGNdXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS90cnBjL1t0cnBjXS9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIi9Vc2Vycy9wZXRlcmphbWVzYmxpenphcmQvcHJvamVjdHMvYXBwX2NvZGV4Y3JtYXBwL2FwcHMvd2ViL2FwcC9hcGkvdHJwYy9bdHJwY10vcm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyB3b3JrQXN5bmNTdG9yYWdlLCB3b3JrVW5pdEFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICB3b3JrQXN5bmNTdG9yYWdlLFxuICAgICAgICB3b3JrVW5pdEFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHdvcmtBc3luY1N0b3JhZ2UsIHdvcmtVbml0QXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/.pnpm/next@15.3.1_@babel+core@7.27.4_@opentelemetry+api@1.9.0_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Ftrpc%2F%5Btrpc%5D%2Froute&page=%2Fapi%2Ftrpc%2F%5Btrpc%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftrpc%2F%5Btrpc%5D%2Froute.ts&appDir=%2FUsers%2Fpeterjamesblizzard%2Fprojects%2Fapp_codexcrmapp%2Fapps%2Fweb%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fpeterjamesblizzard%2Fprojects%2Fapp_codexcrmapp%2Fapps%2Fweb&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/../../node_modules/.pnpm/next@15.3.1_@babel+core@7.27.4_@opentelemetry+api@1.9.0_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!*********************************************************************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/next@15.3.1_@babel+core@7.27.4_@opentelemetry+api@1.9.0_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \*********************************************************************************************************************************************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/../../packages/server/src/context.ts":
/*!********************************************!*\
  !*** ../../packages/server/src/context.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createContext: () => (/* binding */ createContext)\n/* harmony export */ });\n/* harmony import */ var _supabase_ssr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/ssr */ \"(rsc)/../../node_modules/.pnpm/@supabase+ssr@0.6.1_@supabase+supabase-js@2.50.0/node_modules/@supabase/ssr/dist/module/index.js\");\n/* harmony import */ var next_headers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/headers */ \"(rsc)/../../node_modules/.pnpm/next@15.3.1_@babel+core@7.27.4_@opentelemetry+api@1.9.0_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/api/headers.js\");\n/* harmony import */ var _supabaseAdmin__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./supabaseAdmin */ \"(rsc)/../../packages/server/src/supabaseAdmin.ts\");\n\n\n\n/** Builds tRPC context for each request */ async function createContext({ req: _req }) {\n    // Create a supabase client using Next.js cookies() for proper SSR support\n    const cookieStore = await (0,next_headers__WEBPACK_IMPORTED_MODULE_1__.cookies)();\n    const supabase = (0,_supabase_ssr__WEBPACK_IMPORTED_MODULE_0__.createServerClient)(\"https://ppzaajcutzyluffvbnrg.supabase.co\", \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InBwemFhamN1dHp5bHVmZnZibnJnIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQ5OTQyNTgsImV4cCI6MjA2MDU3MDI1OH0.sFYgJ0f9HR1siApbUgFMMt8b5JlJYc3dp_rDqcig2bw\", {\n        cookies: {\n            getAll () {\n                return cookieStore.getAll();\n            },\n            setAll (cookiesToSet) {\n                try {\n                    cookiesToSet.forEach(({ name, value, options })=>cookieStore.set(name, value, options));\n                } catch  {\n                // The `setAll` method was called from a Server Component.\n                // This can be ignored if you have middleware refreshing\n                // user sessions.\n                }\n            }\n        }\n    });\n    try {\n        // Use getUser() as the primary authentication method (recommended by Supabase)\n        const { data: { user }, error: userError } = await supabase.auth.getUser();\n        if (userError) {\n            console.error('tRPC context error getting user:', userError.message);\n        }\n        // Only get session if needed for specific session-related data\n        let session = null;\n        if (user) {\n            const { data: { session: sessionData }, error: sessionError } = await supabase.auth.getSession();\n            if (sessionError) {\n                console.error('tRPC context error getting session:', sessionError.message);\n            } else {\n                session = sessionData;\n            }\n        }\n        console.error('tRPC context auth status:', {\n            authenticated: !!user,\n            userId: user?.id,\n            email: user?.email,\n            cookiesFound: !!user\n        });\n        return {\n            user,\n            session,\n            supabaseAdmin: _supabaseAdmin__WEBPACK_IMPORTED_MODULE_2__.supabaseAdmin,\n            supabaseUser: supabase\n        };\n    } catch (error) {\n        console.error('tRPC context error:', error);\n        return {\n            user: null,\n            session: null,\n            supabaseAdmin: _supabaseAdmin__WEBPACK_IMPORTED_MODULE_2__.supabaseAdmin,\n            supabaseUser: supabase\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vcGFja2FnZXMvc2VydmVyL3NyYy9jb250ZXh0LnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBbUQ7QUFFWjtBQUVTO0FBVWhELHlDQUF5QyxHQUNsQyxlQUFlRyxjQUFjLEVBQ2xDQyxLQUFLQyxJQUFJLEVBR1Y7SUFDQywwRUFBMEU7SUFDMUUsTUFBTUMsY0FBYyxNQUFNTCxxREFBT0E7SUFFakMsTUFBTU0sV0FBV1AsaUVBQWtCQSxDQUNqQ1EsMENBQW9DLEVBQ3BDQSxrTkFBeUMsRUFDekM7UUFDRVAsU0FBUztZQUNQVztnQkFDRSxPQUFPTixZQUFZTSxNQUFNO1lBQzNCO1lBQ0FDLFFBQU9DLFlBQVk7Z0JBQ2pCLElBQUk7b0JBQ0ZBLGFBQWFDLE9BQU8sQ0FBQyxDQUFDLEVBQUVDLElBQUksRUFBRUMsS0FBSyxFQUFFQyxPQUFPLEVBQUUsR0FDNUNaLFlBQVlhLEdBQUcsQ0FBQ0gsTUFBTUMsT0FBT0M7Z0JBRWpDLEVBQUUsT0FBTTtnQkFDTiwwREFBMEQ7Z0JBQzFELHdEQUF3RDtnQkFDeEQsaUJBQWlCO2dCQUNuQjtZQUNGO1FBQ0Y7SUFDRjtJQUdGLElBQUk7UUFDRiwrRUFBK0U7UUFDL0UsTUFBTSxFQUNKRSxNQUFNLEVBQUVDLElBQUksRUFBRSxFQUNkQyxPQUFPQyxTQUFTLEVBQ2pCLEdBQUcsTUFBTWhCLFNBQVNpQixJQUFJLENBQUNDLE9BQU87UUFDL0IsSUFBSUYsV0FBVztZQUNiRyxRQUFRSixLQUFLLENBQUMsb0NBQW9DQyxVQUFVSSxPQUFPO1FBQ3JFO1FBRUEsK0RBQStEO1FBQy9ELElBQUlDLFVBQVU7UUFDZCxJQUFJUCxNQUFNO1lBQ1IsTUFBTSxFQUNKRCxNQUFNLEVBQUVRLFNBQVNDLFdBQVcsRUFBRSxFQUM5QlAsT0FBT1EsWUFBWSxFQUNwQixHQUFHLE1BQU12QixTQUFTaUIsSUFBSSxDQUFDTyxVQUFVO1lBQ2xDLElBQUlELGNBQWM7Z0JBQ2hCSixRQUFRSixLQUFLLENBQ1gsdUNBQ0FRLGFBQWFILE9BQU87WUFFeEIsT0FBTztnQkFDTEMsVUFBVUM7WUFDWjtRQUNGO1FBRUFILFFBQVFKLEtBQUssQ0FBQyw2QkFBNkI7WUFDekNVLGVBQWUsQ0FBQyxDQUFDWDtZQUNqQlksUUFBUVosTUFBTWE7WUFDZEMsT0FBT2QsTUFBTWM7WUFDYkMsY0FBYyxDQUFDLENBQUNmO1FBQ2xCO1FBRUEsT0FBTztZQUNMQTtZQUNBTztZQUNBMUIsYUFBYUEsMkRBQUFBO1lBQ2JtQyxjQUFjOUI7UUFDaEI7SUFDRixFQUFFLE9BQU9lLE9BQU87UUFDZEksUUFBUUosS0FBSyxDQUFDLHVCQUF1QkE7UUFFckMsT0FBTztZQUNMRCxNQUFNO1lBQ05PLFNBQVM7WUFDVDFCLGFBQWFBLDJEQUFBQTtZQUNibUMsY0FBYzlCO1FBQ2hCO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsiL1VzZXJzL3BldGVyamFtZXNibGl6emFyZC9wcm9qZWN0cy9hcHBfY29kZXhjcm1hcHAvcGFja2FnZXMvc2VydmVyL3NyYy9jb250ZXh0LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZVNlcnZlckNsaWVudCB9IGZyb20gJ0BzdXBhYmFzZS9zc3InO1xuaW1wb3J0IHR5cGUgeyBTZXNzaW9uLCBVc2VyIH0gZnJvbSAnQHN1cGFiYXNlL3N1cGFiYXNlLWpzJztcbmltcG9ydCB7IGNvb2tpZXMgfSBmcm9tICduZXh0L2hlYWRlcnMnO1xuXG5pbXBvcnQgeyBzdXBhYmFzZUFkbWluIH0gZnJvbSAnLi9zdXBhYmFzZUFkbWluJztcblxuLyoqIFNoYXBlIG9mIHRoZSB0UlBDIGNvbnRleHQgb2JqZWN0ICovXG5leHBvcnQgaW50ZXJmYWNlIENvbnRleHQge1xuICB1c2VyOiBVc2VyIHwgbnVsbDtcbiAgc2Vzc2lvbjogU2Vzc2lvbiB8IG51bGw7XG4gIHN1cGFiYXNlQWRtaW46IHR5cGVvZiBzdXBhYmFzZUFkbWluO1xuICBzdXBhYmFzZVVzZXI6IFJldHVyblR5cGU8dHlwZW9mIGNyZWF0ZVNlcnZlckNsaWVudD47XG59XG5cbi8qKiBCdWlsZHMgdFJQQyBjb250ZXh0IGZvciBlYWNoIHJlcXVlc3QgKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjcmVhdGVDb250ZXh0KHtcbiAgcmVxOiBfcmVxLFxufToge1xuICByZXE6IFJlcXVlc3Q7XG59KTogUHJvbWlzZTxDb250ZXh0PiB7XG4gIC8vIENyZWF0ZSBhIHN1cGFiYXNlIGNsaWVudCB1c2luZyBOZXh0LmpzIGNvb2tpZXMoKSBmb3IgcHJvcGVyIFNTUiBzdXBwb3J0XG4gIGNvbnN0IGNvb2tpZVN0b3JlID0gYXdhaXQgY29va2llcygpO1xuXG4gIGNvbnN0IHN1cGFiYXNlID0gY3JlYXRlU2VydmVyQ2xpZW50KFxuICAgIHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTCEsXG4gICAgcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVkhLFxuICAgIHtcbiAgICAgIGNvb2tpZXM6IHtcbiAgICAgICAgZ2V0QWxsKCkge1xuICAgICAgICAgIHJldHVybiBjb29raWVTdG9yZS5nZXRBbGwoKTtcbiAgICAgICAgfSxcbiAgICAgICAgc2V0QWxsKGNvb2tpZXNUb1NldCkge1xuICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb29raWVzVG9TZXQuZm9yRWFjaCgoeyBuYW1lLCB2YWx1ZSwgb3B0aW9ucyB9KSA9PlxuICAgICAgICAgICAgICBjb29raWVTdG9yZS5zZXQobmFtZSwgdmFsdWUsIG9wdGlvbnMpXG4gICAgICAgICAgICApO1xuICAgICAgICAgIH0gY2F0Y2gge1xuICAgICAgICAgICAgLy8gVGhlIGBzZXRBbGxgIG1ldGhvZCB3YXMgY2FsbGVkIGZyb20gYSBTZXJ2ZXIgQ29tcG9uZW50LlxuICAgICAgICAgICAgLy8gVGhpcyBjYW4gYmUgaWdub3JlZCBpZiB5b3UgaGF2ZSBtaWRkbGV3YXJlIHJlZnJlc2hpbmdcbiAgICAgICAgICAgIC8vIHVzZXIgc2Vzc2lvbnMuXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgfSxcbiAgICB9XG4gICk7XG5cbiAgdHJ5IHtcbiAgICAvLyBVc2UgZ2V0VXNlcigpIGFzIHRoZSBwcmltYXJ5IGF1dGhlbnRpY2F0aW9uIG1ldGhvZCAocmVjb21tZW5kZWQgYnkgU3VwYWJhc2UpXG4gICAgY29uc3Qge1xuICAgICAgZGF0YTogeyB1c2VyIH0sXG4gICAgICBlcnJvcjogdXNlckVycm9yLFxuICAgIH0gPSBhd2FpdCBzdXBhYmFzZS5hdXRoLmdldFVzZXIoKTtcbiAgICBpZiAodXNlckVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCd0UlBDIGNvbnRleHQgZXJyb3IgZ2V0dGluZyB1c2VyOicsIHVzZXJFcnJvci5tZXNzYWdlKTtcbiAgICB9XG5cbiAgICAvLyBPbmx5IGdldCBzZXNzaW9uIGlmIG5lZWRlZCBmb3Igc3BlY2lmaWMgc2Vzc2lvbi1yZWxhdGVkIGRhdGFcbiAgICBsZXQgc2Vzc2lvbiA9IG51bGw7XG4gICAgaWYgKHVzZXIpIHtcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgZGF0YTogeyBzZXNzaW9uOiBzZXNzaW9uRGF0YSB9LFxuICAgICAgICBlcnJvcjogc2Vzc2lvbkVycm9yLFxuICAgICAgfSA9IGF3YWl0IHN1cGFiYXNlLmF1dGguZ2V0U2Vzc2lvbigpO1xuICAgICAgaWYgKHNlc3Npb25FcnJvcikge1xuICAgICAgICBjb25zb2xlLmVycm9yKFxuICAgICAgICAgICd0UlBDIGNvbnRleHQgZXJyb3IgZ2V0dGluZyBzZXNzaW9uOicsXG4gICAgICAgICAgc2Vzc2lvbkVycm9yLm1lc3NhZ2VcbiAgICAgICAgKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHNlc3Npb24gPSBzZXNzaW9uRGF0YTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zb2xlLmVycm9yKCd0UlBDIGNvbnRleHQgYXV0aCBzdGF0dXM6Jywge1xuICAgICAgYXV0aGVudGljYXRlZDogISF1c2VyLFxuICAgICAgdXNlcklkOiB1c2VyPy5pZCxcbiAgICAgIGVtYWlsOiB1c2VyPy5lbWFpbCxcbiAgICAgIGNvb2tpZXNGb3VuZDogISF1c2VyLFxuICAgIH0pO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIHVzZXIsXG4gICAgICBzZXNzaW9uLFxuICAgICAgc3VwYWJhc2VBZG1pbixcbiAgICAgIHN1cGFiYXNlVXNlcjogc3VwYWJhc2UsXG4gICAgfTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCd0UlBDIGNvbnRleHQgZXJyb3I6JywgZXJyb3IpO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIHVzZXI6IG51bGwsXG4gICAgICBzZXNzaW9uOiBudWxsLFxuICAgICAgc3VwYWJhc2VBZG1pbixcbiAgICAgIHN1cGFiYXNlVXNlcjogc3VwYWJhc2UsXG4gICAgfTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbImNyZWF0ZVNlcnZlckNsaWVudCIsImNvb2tpZXMiLCJzdXBhYmFzZUFkbWluIiwiY3JlYXRlQ29udGV4dCIsInJlcSIsIl9yZXEiLCJjb29raWVTdG9yZSIsInN1cGFiYXNlIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTCIsIk5FWFRfUFVCTElDX1NVUEFCQVNFX0FOT05fS0VZIiwiZ2V0QWxsIiwic2V0QWxsIiwiY29va2llc1RvU2V0IiwiZm9yRWFjaCIsIm5hbWUiLCJ2YWx1ZSIsIm9wdGlvbnMiLCJzZXQiLCJkYXRhIiwidXNlciIsImVycm9yIiwidXNlckVycm9yIiwiYXV0aCIsImdldFVzZXIiLCJjb25zb2xlIiwibWVzc2FnZSIsInNlc3Npb24iLCJzZXNzaW9uRGF0YSIsInNlc3Npb25FcnJvciIsImdldFNlc3Npb24iLCJhdXRoZW50aWNhdGVkIiwidXNlcklkIiwiaWQiLCJlbWFpbCIsImNvb2tpZXNGb3VuZCIsInN1cGFiYXNlVXNlciJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../packages/server/src/context.ts\n");

/***/ }),

/***/ "(rsc)/../../packages/server/src/index.ts":
/*!******************************************!*\
  !*** ../../packages/server/src/index.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   appRouter: () => (/* reexport safe */ _root__WEBPACK_IMPORTED_MODULE_0__.appRouter),\n/* harmony export */   createContext: () => (/* reexport safe */ _context__WEBPACK_IMPORTED_MODULE_1__.createContext),\n/* harmony export */   hasRole: () => (/* reexport safe */ _trpc__WEBPACK_IMPORTED_MODULE_2__.hasRole),\n/* harmony export */   middleware: () => (/* reexport safe */ _trpc__WEBPACK_IMPORTED_MODULE_2__.middleware),\n/* harmony export */   protectedProcedure: () => (/* reexport safe */ _trpc__WEBPACK_IMPORTED_MODULE_2__.protectedProcedure),\n/* harmony export */   publicProcedure: () => (/* reexport safe */ _trpc__WEBPACK_IMPORTED_MODULE_2__.publicProcedure),\n/* harmony export */   rateLimit: () => (/* reexport safe */ _trpc__WEBPACK_IMPORTED_MODULE_2__.rateLimit),\n/* harmony export */   router: () => (/* reexport safe */ _trpc__WEBPACK_IMPORTED_MODULE_2__.router)\n/* harmony export */ });\n/* harmony import */ var _root__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./root */ \"(rsc)/../../packages/server/src/root.ts\");\n/* harmony import */ var _context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./context */ \"(rsc)/../../packages/server/src/context.ts\");\n/* harmony import */ var _trpc__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./trpc */ \"(rsc)/../../packages/server/src/trpc.ts\");\n// Main exports from the server package\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vcGFja2FnZXMvc2VydmVyL3NyYy9pbmRleC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFBLHVDQUF1QztBQUNoQjtBQUNHO0FBQ0giLCJzb3VyY2VzIjpbIi9Vc2Vycy9wZXRlcmphbWVzYmxpenphcmQvcHJvamVjdHMvYXBwX2NvZGV4Y3JtYXBwL3BhY2thZ2VzL3NlcnZlci9zcmMvaW5kZXgudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gTWFpbiBleHBvcnRzIGZyb20gdGhlIHNlcnZlciBwYWNrYWdlXG5leHBvcnQgKiBmcm9tICcuL3Jvb3QnO1xuZXhwb3J0ICogZnJvbSAnLi9jb250ZXh0JztcbmV4cG9ydCAqIGZyb20gJy4vdHJwYyc7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../packages/server/src/index.ts\n");

/***/ }),

/***/ "(rsc)/../../packages/server/src/root.ts":
/*!*****************************************!*\
  !*** ../../packages/server/src/root.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   appRouter: () => (/* binding */ appRouter)\n/* harmony export */ });\n/* harmony import */ var _routers_contact__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./routers/contact */ \"(rsc)/../../packages/server/src/routers/contact.ts\");\n/* harmony import */ var _routers_group__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./routers/group */ \"(rsc)/../../packages/server/src/routers/group.ts\");\n/* harmony import */ var _routers_storage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./routers/storage */ \"(rsc)/../../packages/server/src/routers/storage.ts\");\n/* harmony import */ var _routers_dashboard__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./routers/dashboard */ \"(rsc)/../../packages/server/src/routers/dashboard.ts\");\n/* harmony import */ var _routers_import__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./routers/import */ \"(rsc)/../../packages/server/src/routers/import.ts\");\n/* harmony import */ var _trpc__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./trpc */ \"(rsc)/../../packages/server/src/trpc.ts\");\n\n\n\n\n\n\nconst appRouter = (0,_trpc__WEBPACK_IMPORTED_MODULE_5__.router)({\n    clients: _routers_contact__WEBPACK_IMPORTED_MODULE_0__.contactRouter,\n    groups: _routers_group__WEBPACK_IMPORTED_MODULE_1__.groupRouter,\n    storage: _routers_storage__WEBPACK_IMPORTED_MODULE_2__.storageRouter,\n    dashboard: _routers_dashboard__WEBPACK_IMPORTED_MODULE_3__.dashboardRouter,\n    import: _routers_import__WEBPACK_IMPORTED_MODULE_4__.importRouter\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vcGFja2FnZXMvc2VydmVyL3NyYy9yb290LnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBa0Q7QUFDSjtBQUNJO0FBQ0k7QUFDTjtBQUNoQjtBQUV6QixNQUFNTSxZQUFZRCw2Q0FBTUEsQ0FBQztJQUM5QkUsU0FBU1AsMkRBQWFBO0lBQ3RCUSxRQUFRUCx1REFBV0E7SUFDbkJRLFNBQVNQLDJEQUFhQTtJQUN0QlEsV0FBV1AsK0RBQWVBO0lBQzFCUSxRQUFRUCx5REFBWUE7QUFDdEIsR0FBRyIsInNvdXJjZXMiOlsiL1VzZXJzL3BldGVyamFtZXNibGl6emFyZC9wcm9qZWN0cy9hcHBfY29kZXhjcm1hcHAvcGFja2FnZXMvc2VydmVyL3NyYy9yb290LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvbnRhY3RSb3V0ZXIgfSBmcm9tICcuL3JvdXRlcnMvY29udGFjdCc7XG5pbXBvcnQgeyBncm91cFJvdXRlciB9IGZyb20gJy4vcm91dGVycy9ncm91cCc7XG5pbXBvcnQgeyBzdG9yYWdlUm91dGVyIH0gZnJvbSAnLi9yb3V0ZXJzL3N0b3JhZ2UnO1xuaW1wb3J0IHsgZGFzaGJvYXJkUm91dGVyIH0gZnJvbSAnLi9yb3V0ZXJzL2Rhc2hib2FyZCc7XG5pbXBvcnQgeyBpbXBvcnRSb3V0ZXIgfSBmcm9tICcuL3JvdXRlcnMvaW1wb3J0JztcbmltcG9ydCB7IHJvdXRlciB9IGZyb20gJy4vdHJwYyc7XG5cbmV4cG9ydCBjb25zdCBhcHBSb3V0ZXIgPSByb3V0ZXIoe1xuICBjbGllbnRzOiBjb250YWN0Um91dGVyLCAvLyBSZW5hbWVkIGZyb20gJ2NvbnRhY3RzJyB0byBhdm9pZCB0UlBDIGNsaWVudCBjb25mbGljdHNcbiAgZ3JvdXBzOiBncm91cFJvdXRlciwgLy8gR3JvdXBzIG1hbmFnZW1lbnQgcm91dGVyXG4gIHN0b3JhZ2U6IHN0b3JhZ2VSb3V0ZXIsIC8vIFN0b3JhZ2Ugcm91dGVyIGZvciBmaWxlIHVwbG9hZHMgKHBob3RvcylcbiAgZGFzaGJvYXJkOiBkYXNoYm9hcmRSb3V0ZXIsIC8vIERhc2hib2FyZCBtZXRyaWNzIGFnZ3JlZ2F0aW9uXG4gIGltcG9ydDogaW1wb3J0Um91dGVyLCAvLyBJbXBvcnQgZnVuY3Rpb25hbGl0eSBmb3IgQ1NWIHVwbG9hZHNcbn0pO1xuZXhwb3J0IHR5cGUgQXBwUm91dGVyID0gdHlwZW9mIGFwcFJvdXRlcjtcbiJdLCJuYW1lcyI6WyJjb250YWN0Um91dGVyIiwiZ3JvdXBSb3V0ZXIiLCJzdG9yYWdlUm91dGVyIiwiZGFzaGJvYXJkUm91dGVyIiwiaW1wb3J0Um91dGVyIiwicm91dGVyIiwiYXBwUm91dGVyIiwiY2xpZW50cyIsImdyb3VwcyIsInN0b3JhZ2UiLCJkYXNoYm9hcmQiLCJpbXBvcnQiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../packages/server/src/root.ts\n");

/***/ }),

/***/ "(rsc)/../../packages/server/src/routers/contact.ts":
/*!****************************************************!*\
  !*** ../../packages/server/src/routers/contact.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   contactRouter: () => (/* binding */ contactRouter)\n/* harmony export */ });\n/* harmony import */ var _trpc_server__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @trpc/server */ \"(rsc)/../../node_modules/.pnpm/@trpc+server@11.4.2_typescript@5.8.3/node_modules/@trpc/server/dist/tracked-gU3ttYjg.mjs\");\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zod */ \"(rsc)/../../node_modules/.pnpm/zod@3.25.67/node_modules/zod/dist/esm/index.js\");\n/* harmony import */ var _trpc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../trpc */ \"(rsc)/../../packages/server/src/trpc.ts\");\n\n\n\nconst contactInputSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    id: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().uuid().optional(),\n    full_name: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().min(1, 'Full name is required'),\n    email: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().email('Invalid email address').optional().nullable(),\n    phone: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional().nullable(),\n    phone_country_code: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional().nullable(),\n    company_name: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional().nullable(),\n    job_title: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional().nullable(),\n    address_street: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional().nullable(),\n    address_city: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional().nullable(),\n    address_postal_code: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional().nullable(),\n    address_country: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional().nullable(),\n    website: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().url({\n        message: \"Invalid URL\"\n    }).optional().nullable(),\n    profile_image_url: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional().nullable(),\n    notes: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional().nullable(),\n    tags: zod__WEBPACK_IMPORTED_MODULE_0__.z.array(zod__WEBPACK_IMPORTED_MODULE_0__.z.string()).optional().nullable(),\n    social_handles: zod__WEBPACK_IMPORTED_MODULE_0__.z.array(zod__WEBPACK_IMPORTED_MODULE_0__.z.string()).optional().nullable(),\n    source: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional().nullable(),\n    last_contacted_at: zod__WEBPACK_IMPORTED_MODULE_0__.z.preprocess((arg)=>{\n        if (arg === '' || arg === null || arg === undefined) return null;\n        if (typeof arg === 'string' || arg instanceof Date) {\n            const date = new Date(arg);\n            return isNaN(date.getTime()) ? null : date;\n        }\n        return null;\n    }, zod__WEBPACK_IMPORTED_MODULE_0__.z.date().optional().nullable()),\n    enriched_data: zod__WEBPACK_IMPORTED_MODULE_0__.z.any().optional().nullable(),\n    enrichment_status: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional().nullable()\n});\n// Defines tRPC procedures for contacts.\nconst contactRouter = (0,_trpc__WEBPACK_IMPORTED_MODULE_1__.router)({\n    // ===== Protected Procedures (require authentication) =====\n    // Protected procedure for listing authenticated user's contacts\n    list: _trpc__WEBPACK_IMPORTED_MODULE_1__.protectedProcedure.input(zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        search: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional(),\n        groupId: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional()\n    })).query(async ({ ctx, input })=>{\n        const { search, groupId } = input;\n        const userId = ctx.user?.id;\n        if (!userId) {\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                code: 'UNAUTHORIZED'\n            });\n        }\n        // If a groupId is provided, we start from group_members and expand contacts.\n        // This is the most efficient way to filter by group.\n        if (groupId) {\n            // First, get the contact IDs that belong to this group\n            const { data: groupMembers, error: memberError } = await ctx.supabaseUser.from('group_members').select('contact_id').eq('group_id', groupId);\n            if (memberError) {\n                console.error(\"Error fetching group members:\", memberError);\n                throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                    code: 'INTERNAL_SERVER_ERROR',\n                    message: `Failed to retrieve group members: ${memberError.message}`\n                });\n            }\n            // If no contacts in the group, return empty array\n            if (!groupMembers || groupMembers.length === 0) {\n                return [];\n            }\n            // Extract contact IDs\n            const contactIds = groupMembers.map((member)=>member.contact_id);\n            // Now query contacts with both group filtering (via IDs) and search\n            let contactsQuery = ctx.supabaseUser.from('contacts').select('*').in('id', contactIds);\n            // Add search filter if provided\n            if (search) {\n                contactsQuery = contactsQuery.or(`full_name.ilike.%${search}%,email.ilike.%${search}%`);\n            }\n            // Add ordering\n            contactsQuery = contactsQuery.order('created_at', {\n                ascending: false\n            });\n            // Execute the query\n            const { data: contacts, error } = await contactsQuery;\n            if (error) {\n                console.error(\"Error fetching contacts for group:\", error);\n                throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                    code: 'INTERNAL_SERVER_ERROR',\n                    message: `Failed to retrieve contacts for group: ${error.message}`\n                });\n            }\n            return contacts || [];\n        } else {\n            let query = ctx.supabaseUser.from('contacts').select('*');\n            // Conditionally add the search filter\n            if (search) {\n                query = query.or(`full_name.ilike.%${search}%,email.ilike.%${search}%`);\n            }\n            // Add default ordering\n            query = query.order('created_at', {\n                ascending: false\n            });\n            const { data: contacts, error } = await query;\n            if (error) {\n                console.error(\"Error fetching all contacts:\", error);\n                throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                    code: 'INTERNAL_SERVER_ERROR',\n                    message: `Failed to retrieve contacts: ${error.message}`\n                });\n            }\n            return contacts || [];\n        }\n    }),\n    // Fetch a single contact by ID\n    getById: _trpc__WEBPACK_IMPORTED_MODULE_1__.protectedProcedure.input(zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        contactId: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().uuid()\n    })).query(async ({ input, ctx })=>{\n        if (!ctx.user) {\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                code: 'UNAUTHORIZED'\n            });\n        }\n        const { data, error } = await ctx.supabaseUser.from('contacts').select('*').eq('id', input.contactId).single();\n        if (error) {\n            console.error('Error fetching contact by id:', error);\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                code: 'INTERNAL_SERVER_ERROR',\n                message: 'Failed to fetch contact',\n                cause: error\n            });\n        }\n        return data;\n    }),\n    save: _trpc__WEBPACK_IMPORTED_MODULE_1__.protectedProcedure.input(contactInputSchema) // Uses the schema defined above this router\n    .mutation(async ({ input, ctx })=>{\n        if (!ctx.user) {\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                code: 'UNAUTHORIZED'\n            });\n        }\n        const contactId = input.id;\n        const fieldsToSave = {\n            full_name: input.full_name,\n            email: input.email || null,\n            phone: input.phone || null,\n            phone_country_code: input.phone_country_code || null,\n            company_name: input.company_name || null,\n            job_title: input.job_title || null,\n            address_street: input.address_street || null,\n            address_city: input.address_city || null,\n            address_postal_code: input.address_postal_code || null,\n            address_country: input.address_country || null,\n            website: input.website || null,\n            profile_image_url: input.profile_image_url || null,\n            notes: input.notes || null,\n            tags: input.tags || null,\n            social_handles: input.social_handles || null,\n            source: input.source || null,\n            last_contacted_at: input.last_contacted_at || null,\n            enriched_data: input.enriched_data || null,\n            enrichment_status: input.enrichment_status || null\n        };\n        let dataObject = null;\n        // Supabase errors have a 'code' property (string) among others\n        let dbError = null;\n        try {\n            if (contactId) {\n                // UPDATE LOGIC\n                console.warn(`Attempting contact update for id: ${contactId}`, fieldsToSave);\n                let attemptFields = {\n                    ...fieldsToSave\n                };\n                do {\n                    const updateOp = await ctx.supabaseUser.from('contacts').update(attemptFields).match({\n                        id: contactId,\n                        user_id: ctx.user.id\n                    }).select().single();\n                    dataObject = updateOp.data;\n                    dbError = updateOp.error;\n                    if (dbError) {\n                        const columnMatch = dbError.message.match(/Could not find the '(.+)' column/);\n                        if (columnMatch && Object.hasOwn(attemptFields, columnMatch[1])) {\n                            console.warn(`${columnMatch[1]} column missing, retrying update without it`);\n                            delete attemptFields[columnMatch[1]];\n                            continue;\n                        }\n                    }\n                    break;\n                }while (dbError !== null);\n            } else {\n                // INSERT LOGIC\n                const insertPayload = {\n                    ...fieldsToSave,\n                    user_id: ctx.user.id\n                };\n                console.warn('[DEBUG] Attempting contact insert:', insertPayload);\n                const insertOp = await ctx.supabaseUser.from('contacts').insert(insertPayload).select('id, created_at, updated_at, user_id, email, full_name, profile_image_url') // Select minimal essential fields\n                .single();\n                dataObject = insertOp.data;\n                dbError = insertOp.error;\n                if (!dbError && !dataObject) {\n                    console.warn(\"Contact insert: Supabase insert succeeded but .select() returned no data (RLS visibility issue?). Constructing response from input.\");\n                    // The insert was likely successful, but RLS prevents reading it back immediately.\n                    // We return the input data merged with user_id, but server-generated fields like 'id' and 'created_at' will be missing.\n                    // The client should be aware or refetch if these are critical immediately.\n                    dataObject = {\n                        ...insertPayload,\n                        id: undefined,\n                        created_at: undefined,\n                        updated_at: undefined\n                    };\n                }\n            }\n            if (dbError) {\n                console.error('Supabase save error:', JSON.stringify(dbError, null, 2), {\n                    input,\n                    contactId\n                });\n                if (dbError.code === '23505') {\n                    throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                        code: 'CONFLICT',\n                        message: `A contact with this email (${input.email}) already exists.`,\n                        cause: dbError\n                    });\n                }\n                throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                    code: 'INTERNAL_SERVER_ERROR',\n                    message: `Database error: ${dbError.message}`,\n                    cause: dbError\n                });\n            }\n            if (!dataObject) {\n                console.error('Supabase save returned no data and no explicit error after processing.', {\n                    input,\n                    contactId\n                });\n                throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                    code: 'INTERNAL_SERVER_ERROR',\n                    message: 'Failed to save contact: No data returned from database operation.'\n                });\n            }\n            console.warn('Contact save successful:', dataObject);\n            return dataObject;\n        } catch (error) {\n            if (error instanceof _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError) {\n                throw error;\n            }\n            console.error('Unhandled error in contact save procedure:', error, {\n                input,\n                contactId\n            });\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                code: 'INTERNAL_SERVER_ERROR',\n                message: 'An unexpected error occurred while saving the contact.',\n                cause: error instanceof Error ? error : undefined\n            });\n        }\n    }),\n    delete: _trpc__WEBPACK_IMPORTED_MODULE_1__.protectedProcedure.input(zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        contactId: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().uuid()\n    })).mutation(async ({ input, ctx })=>{\n        if (!ctx.user) {\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                code: 'UNAUTHORIZED'\n            });\n        }\n        const { error } = await ctx.supabaseUser.from('contacts').delete().match({\n            id: input.contactId,\n            user_id: ctx.user.id\n        });\n        if (error) {\n            console.error('Error deleting contact:', error);\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                code: 'INTERNAL_SERVER_ERROR',\n                message: 'Failed to delete contact',\n                cause: error\n            });\n        }\n        return {\n            success: true,\n            contactId: input.contactId\n        };\n    }),\n    // Update just the notes field of a contact\n    updateNotes: _trpc__WEBPACK_IMPORTED_MODULE_1__.protectedProcedure.input(zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        contactId: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().uuid(),\n        notes: zod__WEBPACK_IMPORTED_MODULE_0__.z.string()\n    })).mutation(async ({ input, ctx })=>{\n        if (!ctx.user) {\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                code: 'UNAUTHORIZED'\n            });\n        }\n        const { contactId, notes } = input;\n        try {\n            // Verify the contact belongs to the user\n            const { data: existingContact, error: fetchError } = await ctx.supabaseAdmin.from('contacts').select('id').eq('id', contactId).eq('user_id', ctx.user.id).single();\n            if (fetchError || !existingContact) {\n                throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                    code: 'NOT_FOUND',\n                    message: 'Contact not found or you do not have permission to update it'\n                });\n            }\n            // Update only the notes field\n            const { error: updateError } = await ctx.supabaseAdmin.from('contacts').update({\n                notes,\n                updated_at: new Date()\n            }).eq('id', contactId).eq('user_id', ctx.user.id);\n            if (updateError) {\n                throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                    code: 'INTERNAL_SERVER_ERROR',\n                    message: `Failed to update contact notes: ${updateError.message}`\n                });\n            }\n            return {\n                success: true\n            };\n        } catch (error) {\n            if (error instanceof _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError) {\n                throw error;\n            }\n            console.error('Unhandled error in updateNotes procedure:', error);\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                code: 'INTERNAL_SERVER_ERROR',\n                message: 'Failed to update contact notes due to an unexpected error'\n            });\n        }\n    }),\n    // Get total count of contacts for the authenticated user\n    getTotalContactsCount: _trpc__WEBPACK_IMPORTED_MODULE_1__.protectedProcedure.query(async ({ ctx })=>{\n        if (!ctx.user) {\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                code: 'UNAUTHORIZED'\n            });\n        }\n        // Use count with head: true for efficiency - doesn't return the body, just the count\n        const { count, error } = await ctx.supabaseUser.from('contacts').select('*', {\n            count: 'exact',\n            head: true\n        });\n        if (error) {\n            console.error(\"Failed to get total contact count:\", error);\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                code: 'INTERNAL_SERVER_ERROR',\n                message: 'Could not retrieve contact count.'\n            });\n        }\n        return {\n            count: count ?? 0\n        };\n    })\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../packages/server/src/routers/contact.ts\n");

/***/ }),

/***/ "(rsc)/../../packages/server/src/routers/dashboard.ts":
/*!******************************************************!*\
  !*** ../../packages/server/src/routers/dashboard.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   dashboardRouter: () => (/* binding */ dashboardRouter)\n/* harmony export */ });\n/* harmony import */ var _trpc_server__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @trpc/server */ \"(rsc)/../../node_modules/.pnpm/@trpc+server@11.4.2_typescript@5.8.3/node_modules/@trpc/server/dist/tracked-gU3ttYjg.mjs\");\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zod */ \"(rsc)/../../node_modules/.pnpm/zod@3.25.67/node_modules/zod/dist/esm/index.js\");\n/* harmony import */ var _trpc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../trpc */ \"(rsc)/../../packages/server/src/trpc.ts\");\n\n\n\n// Define Zod schemas for validation\nconst dateRangeSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    startDate: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().datetime().optional(),\n    endDate: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().datetime().optional()\n});\n// Define the dashboard router\nconst dashboardRouter = (0,_trpc__WEBPACK_IMPORTED_MODULE_1__.router)({\n    // Get contact metrics\n    contactMetrics: _trpc__WEBPACK_IMPORTED_MODULE_1__.protectedProcedure.input(dateRangeSchema.optional()).query(async ({ ctx, input })=>{\n        if (!ctx.user) {\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                code: 'UNAUTHORIZED'\n            });\n        }\n        try {\n            // Default to last 30 days if no date range provided\n            const endDate = input?.endDate ? new Date(input.endDate) : new Date();\n            const startDate = input?.startDate ? new Date(input.startDate) : new Date(endDate.getTime() - 30 * 24 * 60 * 60 * 1000);\n            const startDateStr = startDate.toISOString();\n            const endDateStr = endDate.toISOString();\n            // Get total contacts count\n            const { count: totalContacts, error: countError } = await ctx.supabaseUser.from('contacts').select('*', {\n                count: 'exact',\n                head: true\n            });\n            if (countError) throw countError;\n            // Get new contacts in date range\n            const { data: newContacts, error: newContactsError } = await ctx.supabaseUser.from('contacts').select('id').gte('created_at', startDateStr).lte('created_at', endDateStr);\n            if (newContactsError) throw newContactsError;\n            // Get contacts by wellness journey stage\n            const { data: journeyStages, error: journeyError } = await ctx.supabaseUser.rpc('get_contacts_by_journey_stage');\n            if (journeyError) throw journeyError;\n            // Get contacts with recent activity\n            const { data: recentActivity, error: activityError } = await ctx.supabaseUser.from('contacts').select('id, full_name, last_contacted_at').order('last_contacted_at', {\n                ascending: false\n            }).limit(5);\n            if (activityError) throw activityError;\n            return {\n                totalContacts: totalContacts || 0,\n                newContacts: newContacts?.length || 0,\n                journeyStageDistribution: journeyStages || [],\n                recentActivity: recentActivity || []\n            };\n        } catch (error) {\n            console.error('Error fetching contact metrics:', error);\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                code: 'INTERNAL_SERVER_ERROR',\n                message: 'Failed to fetch contact metrics',\n                cause: error\n            });\n        }\n    }),\n    // Get session metrics\n    sessionMetrics: _trpc__WEBPACK_IMPORTED_MODULE_1__.protectedProcedure.input(dateRangeSchema.optional()).query(async ({ ctx, input })=>{\n        if (!ctx.user) {\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                code: 'UNAUTHORIZED'\n            });\n        }\n        try {\n            // Default to last 30 days if no date range provided\n            const endDate = input?.endDate ? new Date(input.endDate) : new Date();\n            const startDate = input?.startDate ? new Date(input.startDate) : new Date(endDate.getTime() - 30 * 24 * 60 * 60 * 1000);\n            const startDateStr = startDate.toISOString();\n            const endDateStr = endDate.toISOString();\n            // Get total sessions count\n            const { count: totalSessions, error: countError } = await ctx.supabaseUser.from('sessions').select('*', {\n                count: 'exact',\n                head: true\n            });\n            if (countError) throw countError;\n            // Get sessions in date range\n            const { data: sessionsInRange, error: rangeError } = await ctx.supabaseUser.from('sessions').select('id, session_time, session_type').gte('session_time', startDateStr).lte('session_time', endDateStr).order('session_time', {\n                ascending: true\n            });\n            if (rangeError) throw rangeError;\n            // Get sessions by type\n            const { data: sessionTypes, error: typesError } = await ctx.supabaseUser.rpc('get_sessions_by_type');\n            if (typesError) throw typesError;\n            // Get upcoming sessions\n            const now = new Date().toISOString();\n            const { data: upcomingSessions, error: upcomingError } = await ctx.supabaseUser.from('sessions').select('id, session_time, contact_id, contacts(full_name)').gt('session_time', now).order('session_time', {\n                ascending: true\n            }).limit(5);\n            if (upcomingError) throw upcomingError;\n            // Calculate sessions per day for chart\n            const sessionsByDay = new Map();\n            const dayMs = 24 * 60 * 60 * 1000;\n            // Initialize all days in range with 0 sessions\n            for(let d = new Date(startDate); d <= endDate; d = new Date(d.getTime() + dayMs)){\n                const dateStr = d.toISOString().split('T')[0];\n                sessionsByDay.set(dateStr, 0);\n            }\n            // Count sessions per day\n            sessionsInRange?.forEach((session)=>{\n                const dateStr = new Date(session.session_time).toISOString().split('T')[0];\n                sessionsByDay.set(dateStr, (sessionsByDay.get(dateStr) || 0) + 1);\n            });\n            // Convert to array for chart data\n            const sessionTrend = Array.from(sessionsByDay.entries()).map(([date, count])=>({\n                    date,\n                    count\n                }));\n            return {\n                totalSessions: totalSessions || 0,\n                sessionsInRange: sessionsInRange?.length || 0,\n                sessionTypeDistribution: sessionTypes || [],\n                upcomingSessions: upcomingSessions || [],\n                sessionTrend\n            };\n        } catch (error) {\n            console.error('Error fetching session metrics:', error);\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                code: 'INTERNAL_SERVER_ERROR',\n                message: 'Failed to fetch session metrics',\n                cause: error\n            });\n        }\n    }),\n    // Get AI action metrics\n    aiActionMetrics: _trpc__WEBPACK_IMPORTED_MODULE_1__.protectedProcedure.input(dateRangeSchema.optional()).query(async ({ ctx, input })=>{\n        if (!ctx.user) {\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                code: 'UNAUTHORIZED'\n            });\n        }\n        try {\n            // Default to last 30 days if no date range provided\n            const endDate = input?.endDate ? new Date(input.endDate) : new Date();\n            const startDate = input?.startDate ? new Date(input.startDate) : new Date(endDate.getTime() - 30 * 24 * 60 * 60 * 1000);\n            const startDateStr = startDate.toISOString();\n            const endDateStr = endDate.toISOString();\n            // Get total AI actions count\n            const { count: totalActions, error: countError } = await ctx.supabaseUser.from('ai_actions').select('*', {\n                count: 'exact',\n                head: true\n            });\n            if (countError) throw countError;\n            // Get AI actions by status\n            const { data: actionsByStatus, error: statusError } = await ctx.supabaseUser.rpc('get_ai_actions_by_status');\n            if (statusError) throw statusError;\n            // Get AI actions by type\n            const { data: actionsByType, error: typeError } = await ctx.supabaseUser.rpc('get_ai_actions_by_type');\n            if (typeError) throw typeError;\n            // Get recent AI actions\n            const { data: recentActions, error: recentError } = await ctx.supabaseUser.from('ai_actions').select('id, action_type, suggestion, status, created_at').order('created_at', {\n                ascending: false\n            }).limit(5);\n            if (recentError) throw recentError;\n            // Get implementation rate\n            const { data: implementedActions, error: implementedError } = await ctx.supabaseUser.from('ai_actions').select('id').eq('implemented', true);\n            if (implementedError) throw implementedError;\n            const implementationRate = totalActions ? (implementedActions?.length || 0) / totalActions : 0;\n            return {\n                totalActions: totalActions || 0,\n                actionsByStatus: actionsByStatus || [],\n                actionsByType: actionsByType || [],\n                recentActions: recentActions || [],\n                implementationRate\n            };\n        } catch (error) {\n            console.error('Error fetching AI action metrics:', error);\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                code: 'INTERNAL_SERVER_ERROR',\n                message: 'Failed to fetch AI action metrics',\n                cause: error\n            });\n        }\n    }),\n    // Get overall dashboard summary\n    summary: _trpc__WEBPACK_IMPORTED_MODULE_1__.protectedProcedure.input(dateRangeSchema.optional()).query(async ({ ctx, input })=>{\n        if (!ctx.user) {\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                code: 'UNAUTHORIZED'\n            });\n        }\n        try {\n            // Default to last 30 days if no date range provided\n            const endDate = input?.endDate ? new Date(input.endDate) : new Date();\n            const startDate = input?.startDate ? new Date(input.startDate) : new Date(endDate.getTime() - 30 * 24 * 60 * 60 * 1000);\n            const startDateStr = startDate.toISOString();\n            const endDateStr = endDate.toISOString();\n            // Get counts for key metrics\n            const [{ count: totalContacts }, { count: totalSessions }, { count: totalActions }, { count: totalNotes }, { data: newContacts }, { data: upcomingSessions }, { data: pendingActions }] = await Promise.all([\n                ctx.supabaseUser.from('contacts').select('*', {\n                    count: 'exact',\n                    head: true\n                }),\n                ctx.supabaseUser.from('sessions').select('*', {\n                    count: 'exact',\n                    head: true\n                }),\n                ctx.supabaseUser.from('ai_actions').select('*', {\n                    count: 'exact',\n                    head: true\n                }),\n                ctx.supabaseUser.from('notes').select('*', {\n                    count: 'exact',\n                    head: true\n                }),\n                ctx.supabaseUser.from('contacts').select('id').gte('created_at', startDateStr).lte('created_at', endDateStr),\n                ctx.supabaseUser.from('sessions').select('id').gt('session_time', new Date().toISOString()),\n                ctx.supabaseUser.from('ai_actions').select('id').eq('status', 'pending')\n            ]);\n            return {\n                totalContacts: totalContacts || 0,\n                totalSessions: totalSessions || 0,\n                totalAiActions: totalActions || 0,\n                totalNotes: totalNotes || 0,\n                newContactsCount: newContacts?.length || 0,\n                upcomingSessionsCount: upcomingSessions?.length || 0,\n                pendingActionsCount: pendingActions?.length || 0,\n                dateRange: {\n                    startDate: startDateStr,\n                    endDate: endDateStr\n                }\n            };\n        } catch (error) {\n            console.error('Error fetching dashboard summary:', error);\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                code: 'INTERNAL_SERVER_ERROR',\n                message: 'Failed to fetch dashboard summary',\n                cause: error\n            });\n        }\n    })\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../packages/server/src/routers/dashboard.ts\n");

/***/ }),

/***/ "(rsc)/../../packages/server/src/routers/group.ts":
/*!**************************************************!*\
  !*** ../../packages/server/src/routers/group.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   groupRouter: () => (/* binding */ groupRouter)\n/* harmony export */ });\n/* harmony import */ var _trpc_server__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @trpc/server */ \"(rsc)/../../node_modules/.pnpm/@trpc+server@11.4.2_typescript@5.8.3/node_modules/@trpc/server/dist/tracked-gU3ttYjg.mjs\");\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zod */ \"(rsc)/../../node_modules/.pnpm/zod@3.25.67/node_modules/zod/dist/esm/index.js\");\n/* harmony import */ var _trpc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../trpc */ \"(rsc)/../../packages/server/src/trpc.ts\");\n\n\n\n// Schema for group input validation\nconst groupInputSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    id: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().uuid().optional(),\n    name: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().min(1, 'Group name is required').max(100, 'Name too long'),\n    description: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().max(500, 'Description too long').optional().nullable(),\n    color: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().regex(/^#([0-9a-f]{3}){1,2}$/i, 'Must be a valid hex color').optional().nullable(),\n    emoji: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().max(2, 'Emoji should be 1-2 characters').or(zod__WEBPACK_IMPORTED_MODULE_0__.z.literal('')).nullable().optional().transform((val)=>val === '' ? null : val)\n});\n// Group to contact relationship schema\nconst groupContactSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    groupId: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().uuid(),\n    contactId: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().uuid()\n});\nconst groupRouter = (0,_trpc__WEBPACK_IMPORTED_MODULE_1__.router)({\n    // Get all groups for a specific contact\n    getGroupsForContact: _trpc__WEBPACK_IMPORTED_MODULE_1__.protectedProcedure.input(zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        contactId: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().uuid()\n    })).query(async ({ input, ctx })=>{\n        if (!ctx.user) {\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                code: 'UNAUTHORIZED'\n            });\n        }\n        try {\n            const { data: memberData, error: memberError } = await ctx.supabaseUser.from('group_members').select('group_id').eq('contact_id', input.contactId);\n            if (memberError) {\n                console.error('Error fetching group members:', memberError);\n                throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                    code: 'INTERNAL_SERVER_ERROR',\n                    message: 'Failed to fetch group memberships'\n                });\n            }\n            if (!memberData || memberData.length === 0) {\n                return [];\n            }\n            const groupIds = memberData.map((item)=>item.group_id);\n            const { data: groupsData, error: groupsError } = await ctx.supabaseUser.from('groups').select('id, name, description, color, created_at, updated_at').eq('user_id', ctx.user.id).in('id', groupIds);\n            if (groupsError) {\n                console.error('Error fetching groups for contact:', groupsError);\n                throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                    code: 'INTERNAL_SERVER_ERROR',\n                    message: 'Failed to fetch groups for contact'\n                });\n            }\n            return groupsData || [];\n        } catch (err) {\n            console.error('Unexpected error in getGroupsForContact:', err);\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                code: 'INTERNAL_SERVER_ERROR',\n                message: err instanceof Error ? err.message : 'An unknown error occurred'\n            });\n        }\n    }),\n    // List all groups for the authenticated user\n    list: _trpc__WEBPACK_IMPORTED_MODULE_1__.protectedProcedure.query(async ({ ctx })=>{\n        if (!ctx.user) {\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                code: 'UNAUTHORIZED'\n            });\n        }\n        const { data, error } = await ctx.supabaseUser.from('groups').select('*, group_members(*)').order('name');\n        if (error) {\n            console.error('Error fetching groups with contact counts:', error);\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                code: 'INTERNAL_SERVER_ERROR',\n                message: 'Failed to fetch groups'\n            });\n        }\n        return (data || []).map((group)=>{\n            const contactCount = Array.isArray(group.group_members) ? group.group_members.length : 0;\n            const { group_members, ...groupFields } = group;\n            return {\n                ...groupFields,\n                contactCount\n            };\n        });\n    }),\n    // Get a single group by ID\n    getById: _trpc__WEBPACK_IMPORTED_MODULE_1__.protectedProcedure.input(zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        groupId: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().uuid()\n    })).query(async ({ input, ctx })=>{\n        if (!ctx.user) {\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                code: 'UNAUTHORIZED'\n            });\n        }\n        const { data, error } = await ctx.supabaseUser.from('groups').select('*').eq('id', input.groupId).single();\n        if (error) {\n            console.error('Error fetching group by ID:', error);\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                code: 'INTERNAL_SERVER_ERROR',\n                message: 'Failed to fetch group'\n            });\n        }\n        return data;\n    }),\n    // Create or update a group\n    save: _trpc__WEBPACK_IMPORTED_MODULE_1__.protectedProcedure.input(groupInputSchema).mutation(async ({ input, ctx })=>{\n        if (!ctx.user) {\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                code: 'UNAUTHORIZED'\n            });\n        }\n        const isUpdate = !!input.id;\n        const groupData = {\n            ...input,\n            user_id: ctx.user.id,\n            updated_at: new Date().toISOString()\n        };\n        if (!isUpdate) {\n            delete groupData.id;\n        }\n        const { data, error } = await ctx.supabaseUser.from('groups').upsert(groupData).select().single();\n        if (error) {\n            console.error('Error saving group:', error);\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                code: 'INTERNAL_SERVER_ERROR',\n                message: `Failed to ${isUpdate ? 'update' : 'create'} group`\n            });\n        }\n        return data;\n    }),\n    // Delete a group\n    delete: _trpc__WEBPACK_IMPORTED_MODULE_1__.protectedProcedure.input(zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        groupId: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().uuid()\n    })).mutation(async ({ input, ctx })=>{\n        if (!ctx.user) {\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                code: 'UNAUTHORIZED'\n            });\n        }\n        const { error } = await ctx.supabaseUser.from('groups').delete().eq('id', input.groupId).eq('user_id', ctx.user.id);\n        if (error) {\n            console.error('Error deleting group:', error);\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                code: 'INTERNAL_SERVER_ERROR',\n                message: 'Failed to delete group'\n            });\n        }\n        return {\n            success: true,\n            deletedGroupId: input.groupId\n        };\n    }),\n    // Add a contact to a group\n    addContact: _trpc__WEBPACK_IMPORTED_MODULE_1__.protectedProcedure.input(groupContactSchema).mutation(async ({ input, ctx })=>{\n        if (!ctx.user) {\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                code: 'UNAUTHORIZED'\n            });\n        }\n        const { data: existing, error: existingError } = await ctx.supabaseUser.from('group_members').select('id').eq('group_id', input.groupId).eq('contact_id', input.contactId).single();\n        if (existingError && existingError.code !== 'PGRST116') {\n            console.error('Error checking for existing group member:', existingError);\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                code: 'INTERNAL_SERVER_ERROR',\n                message: 'Could not verify group membership.'\n            });\n        }\n        if (existing) {\n            return {\n                success: true,\n                message: 'Contact already in group.'\n            };\n        }\n        const { error } = await ctx.supabaseUser.from('group_members').insert([\n            {\n                group_id: input.groupId,\n                contact_id: input.contactId\n            }\n        ]);\n        if (error) {\n            console.error('Detailed error adding contact to group:', JSON.stringify(error, null, 2));\n            console.error('Original error object adding contact to group:', error);\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                code: 'INTERNAL_SERVER_ERROR',\n                message: 'Failed to add contact to group'\n            });\n        }\n        return {\n            success: true\n        };\n    }),\n    // Remove a contact from a group\n    removeContact: _trpc__WEBPACK_IMPORTED_MODULE_1__.protectedProcedure.input(groupContactSchema).mutation(async ({ input, ctx })=>{\n        if (!ctx.user) {\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                code: 'UNAUTHORIZED'\n            });\n        }\n        const { error } = await ctx.supabaseUser.from('group_members').delete().eq('contact_id', input.contactId).eq('group_id', input.groupId);\n        if (error) {\n            console.error('Error removing contact from group:', error);\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                code: 'INTERNAL_SERVER_ERROR',\n                message: 'Failed to remove contact from group'\n            });\n        }\n        return {\n            success: true\n        };\n    }),\n    // Get all contacts in a group\n    getContacts: _trpc__WEBPACK_IMPORTED_MODULE_1__.protectedProcedure.input(zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        groupId: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().uuid()\n    })).query(async ({ input, ctx })=>{\n        if (!ctx.user) {\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                code: 'UNAUTHORIZED'\n            });\n        }\n        const { data: group, error: groupError } = await ctx.supabaseUser.from('groups').select('id').eq('id', input.groupId).single();\n        if (groupError || !group) {\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                code: 'NOT_FOUND',\n                message: 'Group not found'\n            });\n        }\n        const { data, error } = await ctx.supabaseUser.from('group_members').select('contacts:contact_id (*)').eq('group_id', input.groupId);\n        if (error) {\n            console.error('Error fetching contacts in group:', error);\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                code: 'INTERNAL_SERVER_ERROR',\n                message: 'Failed to fetch contacts in group'\n            });\n        }\n        if (!data) {\n            return [];\n        }\n        return data.map((item)=>item.contacts).filter(Boolean);\n    })\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../packages/server/src/routers/group.ts\n");

/***/ }),

/***/ "(rsc)/../../packages/server/src/routers/import.ts":
/*!***************************************************!*\
  !*** ../../packages/server/src/routers/import.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   importRouter: () => (/* binding */ importRouter)\n/* harmony export */ });\n/* harmony import */ var _trpc_server__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @trpc/server */ \"(rsc)/../../node_modules/.pnpm/@trpc+server@11.4.2_typescript@5.8.3/node_modules/@trpc/server/dist/tracked-gU3ttYjg.mjs\");\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zod */ \"(rsc)/../../node_modules/.pnpm/zod@3.25.67/node_modules/zod/dist/esm/index.js\");\n/* harmony import */ var _trpc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../trpc */ \"(rsc)/../../packages/server/src/trpc.ts\");\n\n\n\n// Schema for CSV import contact data\nconst csvContactInputSchema = zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n    full_name: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().min(1, 'Full name is required'),\n    email: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().email('Invalid email address').optional().nullable(),\n    phone: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional().nullable(),\n    phone_country_code: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional().nullable(),\n    company: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional().nullable(),\n    job_title: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional().nullable(),\n    website: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional().nullable(),\n    notes: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional().nullable(),\n    tags: zod__WEBPACK_IMPORTED_MODULE_0__.z.array(zod__WEBPACK_IMPORTED_MODULE_0__.z.string()).optional().nullable(),\n    social_handles: zod__WEBPACK_IMPORTED_MODULE_0__.z.array(zod__WEBPACK_IMPORTED_MODULE_0__.z.string()).optional().nullable(),\n    address: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().optional().nullable()\n});\nconst importRouter = (0,_trpc__WEBPACK_IMPORTED_MODULE_1__.router)({\n    // Bulk import contacts from CSV\n    contacts: _trpc__WEBPACK_IMPORTED_MODULE_1__.protectedProcedure.input(zod__WEBPACK_IMPORTED_MODULE_0__.z.array(csvContactInputSchema)).mutation(async ({ input, ctx })=>{\n        if (!ctx.user) {\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                code: 'UNAUTHORIZED'\n            });\n        }\n        if (input.length === 0) {\n            return {\n                success: true,\n                imported: 0,\n                errors: []\n            };\n        }\n        const importResults = {\n            success: true,\n            imported: 0,\n            errors: [],\n            skipped: 0\n        };\n        // Transform CSV data to database format\n        const contactsToInsert = input.map((contact)=>({\n                full_name: contact.full_name,\n                email: contact.email,\n                phone: contact.phone,\n                phone_country_code: contact.phone_country_code,\n                company_name: contact.company,\n                job_title: contact.job_title,\n                website: contact.website,\n                notes: contact.notes,\n                tags: contact.tags,\n                social_handles: contact.social_handles,\n                address_street: contact.address,\n                user_id: ctx.user.id\n            }));\n        try {\n            const { data, error } = await ctx.supabaseUser.from('contacts').insert(contactsToInsert).select('id, full_name, email');\n            if (error) {\n                importResults.success = false;\n                importResults.errors.push(`Database error: ${error.message}`);\n                return importResults;\n            }\n            importResults.imported = data?.length ?? 0;\n            return importResults;\n        } catch (error) {\n            importResults.success = false;\n            const errorMessage = error instanceof Error ? error.message : 'Unknown error occurred';\n            importResults.errors.push(errorMessage);\n            return importResults;\n        }\n    })\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vcGFja2FnZXMvc2VydmVyL3NyYy9yb3V0ZXJzL2ltcG9ydC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXlDO0FBQ2pCO0FBRTZCO0FBRXJELHFDQUFxQztBQUNyQyxNQUFNSSx3QkFBd0JILHlDQUFRLENBQUM7SUFDckNLLFdBQVdMLHlDQUFRLEdBQUdPLEdBQUcsQ0FBQyxHQUFHO0lBQzdCQyxPQUFPUix5Q0FBUSxHQUFHUSxLQUFLLENBQUMseUJBQXlCQyxRQUFRLEdBQUdDLFFBQVE7SUFDcEVDLE9BQU9YLHlDQUFRLEdBQUdTLFFBQVEsR0FBR0MsUUFBUTtJQUNyQ0Usb0JBQW9CWix5Q0FBUSxHQUFHUyxRQUFRLEdBQUdDLFFBQVE7SUFDbERHLFNBQVNiLHlDQUFRLEdBQUdTLFFBQVEsR0FBR0MsUUFBUTtJQUN2Q0ksV0FBV2QseUNBQVEsR0FBR1MsUUFBUSxHQUFHQyxRQUFRO0lBQ3pDSyxTQUFTZix5Q0FBUSxHQUFHUyxRQUFRLEdBQUdDLFFBQVE7SUFDdkNNLE9BQU9oQix5Q0FBUSxHQUFHUyxRQUFRLEdBQUdDLFFBQVE7SUFDckNPLE1BQU1qQix3Q0FBTyxDQUFDQSx5Q0FBUSxJQUFJUyxRQUFRLEdBQUdDLFFBQVE7SUFDN0NTLGdCQUFnQm5CLHdDQUFPLENBQUNBLHlDQUFRLElBQUlTLFFBQVEsR0FBR0MsUUFBUTtJQUN2RFUsU0FBU3BCLHlDQUFRLEdBQUdTLFFBQVEsR0FBR0MsUUFBUTtBQUN6QztBQUVPLE1BQU1XLGVBQWVwQiw2Q0FBTUEsQ0FBQztJQUNqQyxnQ0FBZ0M7SUFDaENxQixVQUFVcEIscURBQWtCQSxDQUN6QnFCLEtBQUssQ0FBQ3ZCLHdDQUFPLENBQUNHLHdCQUNkcUIsUUFBUSxDQUFDLE9BQU8sRUFBRUQsS0FBSyxFQUFFRSxHQUFHLEVBQUU7UUFDN0IsSUFBSSxDQUFDQSxJQUFJQyxJQUFJLEVBQUU7WUFDYixNQUFNLElBQUkzQixtREFBU0EsQ0FBQztnQkFBRTRCLE1BQU07WUFBZTtRQUM3QztRQUVBLElBQUlKLE1BQU1LLE1BQU0sS0FBSyxHQUFHO1lBQ3RCLE9BQU87Z0JBQUVDLFNBQVM7Z0JBQU1DLFVBQVU7Z0JBQUdDLFFBQVEsRUFBRTtZQUFDO1FBQ2xEO1FBRUEsTUFBTUMsZ0JBQWdCO1lBQ3BCSCxTQUFTO1lBQ1RDLFVBQVU7WUFDVkMsUUFBUSxFQUFFO1lBQ1ZFLFNBQVM7UUFDWDtRQUVBLHdDQUF3QztRQUN4QyxNQUFNQyxtQkFBbUJYLE1BQU1ZLEdBQUcsQ0FBQyxDQUFDQyxVQUFhO2dCQUMvQy9CLFdBQVcrQixRQUFRL0IsU0FBUztnQkFDNUJHLE9BQU80QixRQUFRNUIsS0FBSztnQkFDcEJHLE9BQU95QixRQUFRekIsS0FBSztnQkFDcEJDLG9CQUFvQndCLFFBQVF4QixrQkFBa0I7Z0JBQzlDeUIsY0FBY0QsUUFBUXZCLE9BQU87Z0JBQzdCQyxXQUFXc0IsUUFBUXRCLFNBQVM7Z0JBQzVCQyxTQUFTcUIsUUFBUXJCLE9BQU87Z0JBQ3hCQyxPQUFPb0IsUUFBUXBCLEtBQUs7Z0JBQ3BCQyxNQUFNbUIsUUFBUW5CLElBQUk7Z0JBQ2xCRSxnQkFBZ0JpQixRQUFRakIsY0FBYztnQkFDdENtQixnQkFBZ0JGLFFBQVFoQixPQUFPO2dCQUMvQm1CLFNBQVNkLElBQUlDLElBQUksQ0FBQ2MsRUFBRTtZQUN0QjtRQUVBLElBQUk7WUFDRixNQUFNLEVBQUVDLElBQUksRUFBRUMsS0FBSyxFQUFFLEdBQUcsTUFBTWpCLElBQUlrQixZQUFZLENBQzNDQyxJQUFJLENBQUMsWUFDTEMsTUFBTSxDQUFDWCxrQkFDUFksTUFBTSxDQUFDO1lBRVYsSUFBSUosT0FBTztnQkFDVFYsY0FBY0gsT0FBTyxHQUFHO2dCQUN4QkcsY0FBY0QsTUFBTSxDQUFDZ0IsSUFBSSxDQUFDLENBQUMsZ0JBQWdCLEVBQUVMLE1BQU1NLE9BQU8sRUFBRTtnQkFDNUQsT0FBT2hCO1lBQ1Q7WUFFQUEsY0FBY0YsUUFBUSxHQUFHVyxNQUFNYixVQUFVO1lBQ3pDLE9BQU9JO1FBRVQsRUFBRSxPQUFPVSxPQUFPO1lBQ2RWLGNBQWNILE9BQU8sR0FBRztZQUN4QixNQUFNb0IsZUFBZVAsaUJBQWlCUSxRQUFRUixNQUFNTSxPQUFPLEdBQUc7WUFDOURoQixjQUFjRCxNQUFNLENBQUNnQixJQUFJLENBQUNFO1lBQzFCLE9BQU9qQjtRQUNUO0lBQ0Y7QUFDSixHQUFHIiwic291cmNlcyI6WyIvVXNlcnMvcGV0ZXJqYW1lc2JsaXp6YXJkL3Byb2plY3RzL2FwcF9jb2RleGNybWFwcC9wYWNrYWdlcy9zZXJ2ZXIvc3JjL3JvdXRlcnMvaW1wb3J0LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRSUENFcnJvciB9IGZyb20gJ0B0cnBjL3NlcnZlcic7XG5pbXBvcnQgeyB6IH0gZnJvbSAnem9kJztcblxuaW1wb3J0IHsgcm91dGVyLCBwcm90ZWN0ZWRQcm9jZWR1cmUgfSBmcm9tICcuLi90cnBjJztcblxuLy8gU2NoZW1hIGZvciBDU1YgaW1wb3J0IGNvbnRhY3QgZGF0YVxuY29uc3QgY3N2Q29udGFjdElucHV0U2NoZW1hID0gei5vYmplY3Qoe1xuICBmdWxsX25hbWU6IHouc3RyaW5nKCkubWluKDEsICdGdWxsIG5hbWUgaXMgcmVxdWlyZWQnKSxcbiAgZW1haWw6IHouc3RyaW5nKCkuZW1haWwoJ0ludmFsaWQgZW1haWwgYWRkcmVzcycpLm9wdGlvbmFsKCkubnVsbGFibGUoKSxcbiAgcGhvbmU6IHouc3RyaW5nKCkub3B0aW9uYWwoKS5udWxsYWJsZSgpLFxuICBwaG9uZV9jb3VudHJ5X2NvZGU6IHouc3RyaW5nKCkub3B0aW9uYWwoKS5udWxsYWJsZSgpLFxuICBjb21wYW55OiB6LnN0cmluZygpLm9wdGlvbmFsKCkubnVsbGFibGUoKSwgLy8gTm90ZTogbWFwcyB0byBjb21wYW55X25hbWUgaW4gREJcbiAgam9iX3RpdGxlOiB6LnN0cmluZygpLm9wdGlvbmFsKCkubnVsbGFibGUoKSxcbiAgd2Vic2l0ZTogei5zdHJpbmcoKS5vcHRpb25hbCgpLm51bGxhYmxlKCksXG4gIG5vdGVzOiB6LnN0cmluZygpLm9wdGlvbmFsKCkubnVsbGFibGUoKSxcbiAgdGFnczogei5hcnJheSh6LnN0cmluZygpKS5vcHRpb25hbCgpLm51bGxhYmxlKCksIC8vIEFscmVhZHkgY29udmVydGVkIHRvIGFycmF5IGJ5IENTViBwcm9jZXNzaW5nXG4gIHNvY2lhbF9oYW5kbGVzOiB6LmFycmF5KHouc3RyaW5nKCkpLm9wdGlvbmFsKCkubnVsbGFibGUoKSxcbiAgYWRkcmVzczogei5zdHJpbmcoKS5vcHRpb25hbCgpLm51bGxhYmxlKCksXG59KTtcblxuZXhwb3J0IGNvbnN0IGltcG9ydFJvdXRlciA9IHJvdXRlcih7XG4gIC8vIEJ1bGsgaW1wb3J0IGNvbnRhY3RzIGZyb20gQ1NWXG4gIGNvbnRhY3RzOiBwcm90ZWN0ZWRQcm9jZWR1cmVcbiAgICAuaW5wdXQoei5hcnJheShjc3ZDb250YWN0SW5wdXRTY2hlbWEpKVxuICAgIC5tdXRhdGlvbihhc3luYyAoeyBpbnB1dCwgY3R4IH0pID0+IHtcbiAgICAgIGlmICghY3R4LnVzZXIpIHtcbiAgICAgICAgdGhyb3cgbmV3IFRSUENFcnJvcih7IGNvZGU6ICdVTkFVVEhPUklaRUQnIH0pO1xuICAgICAgfVxuXG4gICAgICBpZiAoaW5wdXQubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHJldHVybiB7IHN1Y2Nlc3M6IHRydWUsIGltcG9ydGVkOiAwLCBlcnJvcnM6IFtdIH07XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IGltcG9ydFJlc3VsdHMgPSB7XG4gICAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICAgIGltcG9ydGVkOiAwLFxuICAgICAgICBlcnJvcnM6IFtdIGFzIHN0cmluZ1tdLFxuICAgICAgICBza2lwcGVkOiAwLFxuICAgICAgfTtcblxuICAgICAgLy8gVHJhbnNmb3JtIENTViBkYXRhIHRvIGRhdGFiYXNlIGZvcm1hdFxuICAgICAgY29uc3QgY29udGFjdHNUb0luc2VydCA9IGlucHV0Lm1hcCgoY29udGFjdCkgPT4gKHtcbiAgICAgICAgZnVsbF9uYW1lOiBjb250YWN0LmZ1bGxfbmFtZSxcbiAgICAgICAgZW1haWw6IGNvbnRhY3QuZW1haWwsXG4gICAgICAgIHBob25lOiBjb250YWN0LnBob25lLFxuICAgICAgICBwaG9uZV9jb3VudHJ5X2NvZGU6IGNvbnRhY3QucGhvbmVfY291bnRyeV9jb2RlLFxuICAgICAgICBjb21wYW55X25hbWU6IGNvbnRhY3QuY29tcGFueSwgLy8gTWFwIGNvbXBhbnkgdG8gY29tcGFueV9uYW1lXG4gICAgICAgIGpvYl90aXRsZTogY29udGFjdC5qb2JfdGl0bGUsXG4gICAgICAgIHdlYnNpdGU6IGNvbnRhY3Qud2Vic2l0ZSxcbiAgICAgICAgbm90ZXM6IGNvbnRhY3Qubm90ZXMsXG4gICAgICAgIHRhZ3M6IGNvbnRhY3QudGFncywgLy8gQWxyZWFkeSBjb252ZXJ0ZWQgdG8gYXJyYXkgYnkgQ1NWIHByb2Nlc3NpbmdcbiAgICAgICAgc29jaWFsX2hhbmRsZXM6IGNvbnRhY3Quc29jaWFsX2hhbmRsZXMsXG4gICAgICAgIGFkZHJlc3Nfc3RyZWV0OiBjb250YWN0LmFkZHJlc3MsIC8vIE1hcCBhZGRyZXNzIHRvIGFkZHJlc3Nfc3RyZWV0XG4gICAgICAgIHVzZXJfaWQ6IGN0eC51c2VyLmlkLFxuICAgICAgfSkpO1xuXG4gICAgICB0cnkge1xuICAgICAgICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSBhd2FpdCBjdHguc3VwYWJhc2VVc2VyXG4gICAgICAgICAgLmZyb20oJ2NvbnRhY3RzJylcbiAgICAgICAgICAuaW5zZXJ0KGNvbnRhY3RzVG9JbnNlcnQpXG4gICAgICAgICAgLnNlbGVjdCgnaWQsIGZ1bGxfbmFtZSwgZW1haWwnKTtcblxuICAgICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgICBpbXBvcnRSZXN1bHRzLnN1Y2Nlc3MgPSBmYWxzZTtcbiAgICAgICAgICBpbXBvcnRSZXN1bHRzLmVycm9ycy5wdXNoKGBEYXRhYmFzZSBlcnJvcjogJHtlcnJvci5tZXNzYWdlfWApO1xuICAgICAgICAgIHJldHVybiBpbXBvcnRSZXN1bHRzO1xuICAgICAgICB9XG5cbiAgICAgICAgaW1wb3J0UmVzdWx0cy5pbXBvcnRlZCA9IGRhdGE/Lmxlbmd0aCA/PyAwO1xuICAgICAgICByZXR1cm4gaW1wb3J0UmVzdWx0cztcblxuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgaW1wb3J0UmVzdWx0cy5zdWNjZXNzID0gZmFsc2U7XG4gICAgICAgIGNvbnN0IGVycm9yTWVzc2FnZSA9IGVycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5tZXNzYWdlIDogJ1Vua25vd24gZXJyb3Igb2NjdXJyZWQnO1xuICAgICAgICBpbXBvcnRSZXN1bHRzLmVycm9ycy5wdXNoKGVycm9yTWVzc2FnZSk7XG4gICAgICAgIHJldHVybiBpbXBvcnRSZXN1bHRzO1xuICAgICAgfVxuICAgIH0pLFxufSk7Il0sIm5hbWVzIjpbIlRSUENFcnJvciIsInoiLCJyb3V0ZXIiLCJwcm90ZWN0ZWRQcm9jZWR1cmUiLCJjc3ZDb250YWN0SW5wdXRTY2hlbWEiLCJvYmplY3QiLCJmdWxsX25hbWUiLCJzdHJpbmciLCJtaW4iLCJlbWFpbCIsIm9wdGlvbmFsIiwibnVsbGFibGUiLCJwaG9uZSIsInBob25lX2NvdW50cnlfY29kZSIsImNvbXBhbnkiLCJqb2JfdGl0bGUiLCJ3ZWJzaXRlIiwibm90ZXMiLCJ0YWdzIiwiYXJyYXkiLCJzb2NpYWxfaGFuZGxlcyIsImFkZHJlc3MiLCJpbXBvcnRSb3V0ZXIiLCJjb250YWN0cyIsImlucHV0IiwibXV0YXRpb24iLCJjdHgiLCJ1c2VyIiwiY29kZSIsImxlbmd0aCIsInN1Y2Nlc3MiLCJpbXBvcnRlZCIsImVycm9ycyIsImltcG9ydFJlc3VsdHMiLCJza2lwcGVkIiwiY29udGFjdHNUb0luc2VydCIsIm1hcCIsImNvbnRhY3QiLCJjb21wYW55X25hbWUiLCJhZGRyZXNzX3N0cmVldCIsInVzZXJfaWQiLCJpZCIsImRhdGEiLCJlcnJvciIsInN1cGFiYXNlVXNlciIsImZyb20iLCJpbnNlcnQiLCJzZWxlY3QiLCJwdXNoIiwibWVzc2FnZSIsImVycm9yTWVzc2FnZSIsIkVycm9yIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../packages/server/src/routers/import.ts\n");

/***/ }),

/***/ "(rsc)/../../packages/server/src/routers/storage.ts":
/*!****************************************************!*\
  !*** ../../packages/server/src/routers/storage.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   storageRouter: () => (/* binding */ storageRouter)\n/* harmony export */ });\n/* harmony import */ var _trpc_server__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @trpc/server */ \"(rsc)/../../node_modules/.pnpm/@trpc+server@11.4.2_typescript@5.8.3/node_modules/@trpc/server/dist/tracked-gU3ttYjg.mjs\");\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zod */ \"(rsc)/../../node_modules/.pnpm/zod@3.25.67/node_modules/zod/dist/esm/index.js\");\n/* harmony import */ var _trpc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../trpc */ \"(rsc)/../../packages/server/src/trpc.ts\");\n\n\n\nconst storageRouter = (0,_trpc__WEBPACK_IMPORTED_MODULE_1__.router)({\n    // Generate a presigned upload URL for direct browser-to-storage uploads\n    getUploadUrl: _trpc__WEBPACK_IMPORTED_MODULE_1__.protectedProcedure.input(zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        fileName: zod__WEBPACK_IMPORTED_MODULE_0__.z.string(),\n        contentType: zod__WEBPACK_IMPORTED_MODULE_0__.z.string(),\n        folderPath: zod__WEBPACK_IMPORTED_MODULE_0__.z.string().default('contacts')\n    })).mutation(async ({ input, ctx })=>{\n        if (!ctx.user) {\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                code: 'UNAUTHORIZED'\n            });\n        }\n        try {\n            // Create a unique file path\n            const filePath = `${input.folderPath}/${ctx.user.id}/${input.fileName}`;\n            // Generate a signed URL for direct upload\n            const { data, error } = await ctx.supabaseAdmin.storage.from('contact-profile-photo').createSignedUploadUrl(filePath);\n            if (error) {\n                console.error('Supabase createSignedUploadUrl error:', error);\n                throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                    code: 'INTERNAL_SERVER_ERROR',\n                    message: `Failed to generate upload URL: ${error.message}`\n                });\n            }\n            return {\n                signedUrl: data.signedUrl,\n                path: data.path,\n                token: data.token\n            };\n        } catch (error) {\n            console.error('Error generating upload URL:', error);\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                code: 'INTERNAL_SERVER_ERROR',\n                message: error instanceof Error ? error.message : 'Failed to generate upload URL'\n            });\n        }\n    }),\n    // Get a private URL for a specific file\n    getFileUrl: _trpc__WEBPACK_IMPORTED_MODULE_1__.protectedProcedure.input(zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        filePath: zod__WEBPACK_IMPORTED_MODULE_0__.z.string()\n    })).query(async ({ input, ctx })=>{\n        if (!ctx.user) {\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                code: 'UNAUTHORIZED'\n            });\n        }\n        try {\n            // Generate a signed URL for private access\n            const { data, error } = await ctx.supabaseAdmin.storage.from('contact-profile-photo').createSignedUrl(input.filePath, 3600); // URL valid for 1 hour\n            if (error) {\n                console.error('Supabase createSignedUrl error:', error);\n                throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                    code: 'INTERNAL_SERVER_ERROR',\n                    message: `Failed to generate signed URL: ${error.message}`\n                });\n            }\n            return {\n                signedUrl: data.signedUrl\n            };\n        } catch (error) {\n            console.error('Error generating signed URL:', error);\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                code: 'INTERNAL_SERVER_ERROR',\n                message: error instanceof Error ? error.message : 'Failed to generate signed URL'\n            });\n        }\n    }),\n    // Delete a file from storage\n    deleteFile: _trpc__WEBPACK_IMPORTED_MODULE_1__.protectedProcedure.input(zod__WEBPACK_IMPORTED_MODULE_0__.z.object({\n        filePath: zod__WEBPACK_IMPORTED_MODULE_0__.z.string()\n    })).mutation(async ({ input, ctx })=>{\n        if (!ctx.user) {\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                code: 'UNAUTHORIZED'\n            });\n        }\n        try {\n            // Only allow users to delete their own files\n            if (!input.filePath.includes(`/${ctx.user.id}/`)) {\n                throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                    code: 'FORBIDDEN',\n                    message: 'You can only delete your own files'\n                });\n            }\n            // Delete the file\n            const { error } = await ctx.supabaseAdmin.storage.from('contact-profile-photo').remove([\n                input.filePath\n            ]);\n            if (error) {\n                throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                    code: 'INTERNAL_SERVER_ERROR',\n                    message: `Failed to delete file: ${error.message}`\n                });\n            }\n            return {\n                success: true\n            };\n        } catch (error) {\n            console.error('Error deleting file:', error);\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                code: 'INTERNAL_SERVER_ERROR',\n                message: error instanceof Error ? error.message : 'Failed to delete file'\n            });\n        }\n    })\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../packages/server/src/routers/storage.ts\n");

/***/ }),

/***/ "(rsc)/../../packages/server/src/supabaseAdmin.ts":
/*!**************************************************!*\
  !*** ../../packages/server/src/supabaseAdmin.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   supabaseAdmin: () => (/* binding */ supabaseAdmin)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/../../node_modules/.pnpm/@supabase+supabase-js@2.50.0/node_modules/@supabase/supabase-js/dist/module/index.js\");\n// packages/server/src/supabaseAdmin.ts\n\nconst supabaseAdmin = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(\"https://ppzaajcutzyluffvbnrg.supabase.co\", process.env.SUPABASE_SERVICE_ROLE_KEY, {\n    auth: {\n        autoRefreshToken: false,\n        persistSession: false\n    }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vcGFja2FnZXMvc2VydmVyL3NyYy9zdXBhYmFzZUFkbWluLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsdUNBQXVDO0FBQ2M7QUFFOUMsTUFBTUMsZ0JBQWdCRCxtRUFBWUEsQ0FDdkNFLDBDQUFvQyxFQUNwQ0EsUUFBUUMsR0FBRyxDQUFDRSx5QkFBeUIsRUFDckM7SUFDRUMsTUFBTTtRQUFFQyxrQkFBa0I7UUFBT0MsZ0JBQWdCO0lBQU07QUFDekQsR0FDQSIsInNvdXJjZXMiOlsiL1VzZXJzL3BldGVyamFtZXNibGl6emFyZC9wcm9qZWN0cy9hcHBfY29kZXhjcm1hcHAvcGFja2FnZXMvc2VydmVyL3NyYy9zdXBhYmFzZUFkbWluLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHBhY2thZ2VzL3NlcnZlci9zcmMvc3VwYWJhc2VBZG1pbi50c1xuaW1wb3J0IHsgY3JlYXRlQ2xpZW50IH0gZnJvbSAnQHN1cGFiYXNlL3N1cGFiYXNlLWpzJztcblxuZXhwb3J0IGNvbnN0IHN1cGFiYXNlQWRtaW4gPSBjcmVhdGVDbGllbnQoXG4gIHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTCEsXG4gIHByb2Nlc3MuZW52LlNVUEFCQVNFX1NFUlZJQ0VfUk9MRV9LRVkhLFxuICB7XG4gICAgYXV0aDogeyBhdXRvUmVmcmVzaFRva2VuOiBmYWxzZSwgcGVyc2lzdFNlc3Npb246IGZhbHNlIH0sXG4gIH1cbik7XG4iXSwibmFtZXMiOlsiY3JlYXRlQ2xpZW50Iiwic3VwYWJhc2VBZG1pbiIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwiLCJTVVBBQkFTRV9TRVJWSUNFX1JPTEVfS0VZIiwiYXV0aCIsImF1dG9SZWZyZXNoVG9rZW4iLCJwZXJzaXN0U2Vzc2lvbiJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../packages/server/src/supabaseAdmin.ts\n");

/***/ }),

/***/ "(rsc)/../../packages/server/src/trpc.ts":
/*!*****************************************!*\
  !*** ../../packages/server/src/trpc.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hasRole: () => (/* binding */ hasRole),\n/* harmony export */   middleware: () => (/* binding */ middleware),\n/* harmony export */   protectedProcedure: () => (/* binding */ protectedProcedure),\n/* harmony export */   publicProcedure: () => (/* binding */ publicProcedure),\n/* harmony export */   rateLimit: () => (/* binding */ rateLimit),\n/* harmony export */   router: () => (/* binding */ router)\n/* harmony export */ });\n/* harmony import */ var _trpc_server__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @trpc/server */ \"(rsc)/../../node_modules/.pnpm/@trpc+server@11.4.2_typescript@5.8.3/node_modules/@trpc/server/dist/initTRPC-IT_6ZYJd.mjs\");\n/* harmony import */ var _trpc_server__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @trpc/server */ \"(rsc)/../../node_modules/.pnpm/@trpc+server@11.4.2_typescript@5.8.3/node_modules/@trpc/server/dist/tracked-gU3ttYjg.mjs\");\n/* harmony import */ var superjson__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! superjson */ \"(rsc)/../../node_modules/.pnpm/superjson@2.2.2/node_modules/superjson/dist/index.js\");\n\n\nconst t = _trpc_server__WEBPACK_IMPORTED_MODULE_1__.initTRPC.context().create({\n    transformer: superjson__WEBPACK_IMPORTED_MODULE_0__[\"default\"]\n});\nconst router = t.router;\nconst publicProcedure = t.procedure;\nconst middleware = t.middleware;\n/**\n * Authentication middleware\n * Checks if the user is authenticated and adds the user to the context\n */ const isAuthed = t.middleware(({ ctx, next })=>{\n    if (!ctx.user) throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n        code: 'UNAUTHORIZED',\n        message: 'You must be logged in to access this resource'\n    });\n    return next({\n        ctx: {\n            ...ctx,\n            user: ctx.user\n        }\n    });\n});\n/**\n * Role-based authorization middleware\n * Checks if the user has the required role\n * @param requiredRoles Array of roles that are allowed to access the resource\n */ const hasRole = (requiredRoles)=>t.middleware(({ ctx, next })=>{\n        if (!ctx.user) {\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                code: 'UNAUTHORIZED',\n                message: 'You must be logged in to access this resource'\n            });\n        }\n        // Get user roles from the session claims\n        const userRoles = ctx.session?.user?.app_metadata?.roles || [];\n        // Check if the user has any of the required roles\n        const hasRequiredRole = requiredRoles.some((role)=>userRoles.includes(role));\n        if (!hasRequiredRole) {\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                code: 'FORBIDDEN',\n                message: 'You do not have permission to access this resource'\n            });\n        }\n        return next({\n            ctx: {\n                ...ctx,\n                user: ctx.user,\n                roles: userRoles\n            }\n        });\n    });\n/**\n * Rate limiting middleware\n * Limits the number of requests a user can make in a given time period\n * @param limit Maximum number of requests\n * @param timeWindowMs Time window in milliseconds\n */ const rateLimit = (limit, timeWindowMs = 60000)=>{\n    // Simple in-memory store for rate limiting\n    // In production, use Redis or another distributed store\n    const store = new Map();\n    return t.middleware(({ ctx, next })=>{\n        if (!ctx.user) {\n            return next({\n                ctx\n            });\n        }\n        const userId = ctx.user.id;\n        const now = Date.now();\n        const userRateLimit = store.get(userId);\n        if (!userRateLimit || now > userRateLimit.resetTime) {\n            // First request or reset time has passed\n            store.set(userId, {\n                count: 1,\n                resetTime: now + timeWindowMs\n            });\n            return next({\n                ctx\n            });\n        }\n        if (userRateLimit.count >= limit) {\n            // Rate limit exceeded\n            throw new _trpc_server__WEBPACK_IMPORTED_MODULE_2__.TRPCError({\n                code: 'TOO_MANY_REQUESTS',\n                message: 'Rate limit exceeded. Please try again later.'\n            });\n        }\n        // Increment request count\n        userRateLimit.count += 1;\n        store.set(userId, userRateLimit);\n        return next({\n            ctx\n        });\n    });\n};\n// Export procedures with middleware\nconst protectedProcedure = t.procedure.use(isAuthed);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vcGFja2FnZXMvc2VydmVyL3NyYy90cnBjLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUF5RTtBQUN2QztBQUlsQyxNQUFNRyxJQUFJSCxrREFBUUEsQ0FBQ0ksT0FBTyxHQUF5QkMsTUFBTSxDQUFDO0lBQ3hEQyxhQUFhSixpREFBU0E7QUFDeEI7QUFFTyxNQUFNSyxTQUFTSixFQUFFSSxNQUFNLENBQUM7QUFDeEIsTUFBTUMsa0JBQWtCTCxFQUFFTSxTQUFTLENBQUM7QUFDcEMsTUFBTUMsYUFBYVAsRUFBRU8sVUFBVSxDQUFDO0FBRXZDOzs7Q0FHQyxHQUNELE1BQU1DLFdBQVdSLEVBQUVPLFVBQVUsQ0FBQyxDQUFDLEVBQUVFLEdBQUcsRUFBRUMsSUFBSSxFQUFFO0lBQzFDLElBQUksQ0FBQ0QsSUFBSUUsSUFBSSxFQUFFLE1BQU0sSUFBSWIsbURBQVNBLENBQUM7UUFDakNjLE1BQU07UUFDTkMsU0FBUztJQUNYO0lBQ0EsT0FBT0gsS0FBSztRQUFFRCxLQUFLO1lBQUUsR0FBR0EsR0FBRztZQUFFRSxNQUFNRixJQUFJRSxJQUFJO1FBQUU7SUFBRTtBQUNqRDtBQUVBOzs7O0NBSUMsR0FDTSxNQUFNRyxVQUFVLENBQUNDLGdCQUN0QmYsRUFBRU8sVUFBVSxDQUFDLENBQUMsRUFBRUUsR0FBRyxFQUFFQyxJQUFJLEVBQUU7UUFDekIsSUFBSSxDQUFDRCxJQUFJRSxJQUFJLEVBQUU7WUFDYixNQUFNLElBQUliLG1EQUFTQSxDQUFDO2dCQUNsQmMsTUFBTTtnQkFDTkMsU0FBUztZQUNYO1FBQ0Y7UUFFQSx5Q0FBeUM7UUFDekMsTUFBTUcsWUFBWVAsSUFBSVEsT0FBTyxFQUFFTixNQUFNTyxjQUFjQyxTQUFTLEVBQUU7UUFFOUQsa0RBQWtEO1FBQ2xELE1BQU1DLGtCQUFrQkwsY0FBY00sSUFBSSxDQUFDQyxDQUFBQSxPQUFRTixVQUFVTyxRQUFRLENBQUNEO1FBRXRFLElBQUksQ0FBQ0YsaUJBQWlCO1lBQ3BCLE1BQU0sSUFBSXRCLG1EQUFTQSxDQUFDO2dCQUNsQmMsTUFBTTtnQkFDTkMsU0FBUztZQUNYO1FBQ0Y7UUFFQSxPQUFPSCxLQUFLO1lBQ1ZELEtBQUs7Z0JBQ0gsR0FBR0EsR0FBRztnQkFDTkUsTUFBTUYsSUFBSUUsSUFBSTtnQkFDZFEsT0FBT0g7WUFDVDtRQUNGO0lBQ0YsR0FBRztBQUVMOzs7OztDQUtDLEdBQ00sTUFBTVEsWUFBWSxDQUFDQyxPQUFlQyxlQUF1QixLQUFLO0lBQ25FLDJDQUEyQztJQUMzQyx3REFBd0Q7SUFDeEQsTUFBTUMsUUFBUSxJQUFJQztJQUVsQixPQUFPNUIsRUFBRU8sVUFBVSxDQUFDLENBQUMsRUFBRUUsR0FBRyxFQUFFQyxJQUFJLEVBQUU7UUFDaEMsSUFBSSxDQUFDRCxJQUFJRSxJQUFJLEVBQUU7WUFDYixPQUFPRCxLQUFLO2dCQUFFRDtZQUFJO1FBQ3BCO1FBRUEsTUFBTW9CLFNBQVNwQixJQUFJRSxJQUFJLENBQUNtQixFQUFFO1FBQzFCLE1BQU1DLE1BQU1DLEtBQUtELEdBQUc7UUFDcEIsTUFBTUUsZ0JBQWdCTixNQUFNTyxHQUFHLENBQUNMO1FBRWhDLElBQUksQ0FBQ0ksaUJBQWlCRixNQUFNRSxjQUFjRSxTQUFTLEVBQUU7WUFDbkQseUNBQXlDO1lBQ3pDUixNQUFNUyxHQUFHLENBQUNQLFFBQVE7Z0JBQUVRLE9BQU87Z0JBQUdGLFdBQVdKLE1BQU1MO1lBQWE7WUFDNUQsT0FBT2hCLEtBQUs7Z0JBQUVEO1lBQUk7UUFDcEI7UUFFQSxJQUFJd0IsY0FBY0ksS0FBSyxJQUFJWixPQUFPO1lBQ2hDLHNCQUFzQjtZQUN0QixNQUFNLElBQUkzQixtREFBU0EsQ0FBQztnQkFDbEJjLE1BQU07Z0JBQ05DLFNBQVM7WUFDWDtRQUNGO1FBRUEsMEJBQTBCO1FBQzFCb0IsY0FBY0ksS0FBSyxJQUFJO1FBQ3ZCVixNQUFNUyxHQUFHLENBQUNQLFFBQVFJO1FBRWxCLE9BQU92QixLQUFLO1lBQUVEO1FBQUk7SUFDcEI7QUFDRixFQUFFO0FBRUYsb0NBQW9DO0FBQzdCLE1BQU02QixxQkFBcUJ0QyxFQUFFTSxTQUFTLENBQUNpQyxHQUFHLENBQUMvQixVQUFVIiwic291cmNlcyI6WyIvVXNlcnMvcGV0ZXJqYW1lc2JsaXp6YXJkL3Byb2plY3RzL2FwcF9jb2RleGNybWFwcC9wYWNrYWdlcy9zZXJ2ZXIvc3JjL3RycGMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaW5pdFRSUEMsIFRSUENFcnJvciwgaW5mZXJQcm9jZWR1cmVPdXRwdXQgfSBmcm9tICdAdHJwYy9zZXJ2ZXInO1xuaW1wb3J0IHN1cGVyanNvbiBmcm9tICdzdXBlcmpzb24nO1xuXG5pbXBvcnQgdHlwZSB7IGNyZWF0ZUNvbnRleHQgfSBmcm9tICcuL2NvbnRleHQnO1xuXG5jb25zdCB0ID0gaW5pdFRSUEMuY29udGV4dDx0eXBlb2YgY3JlYXRlQ29udGV4dD4oKS5jcmVhdGUoe1xuICB0cmFuc2Zvcm1lcjogc3VwZXJqc29uLFxufSk7XG5cbmV4cG9ydCBjb25zdCByb3V0ZXIgPSB0LnJvdXRlcjtcbmV4cG9ydCBjb25zdCBwdWJsaWNQcm9jZWR1cmUgPSB0LnByb2NlZHVyZTtcbmV4cG9ydCBjb25zdCBtaWRkbGV3YXJlID0gdC5taWRkbGV3YXJlO1xuXG4vKipcbiAqIEF1dGhlbnRpY2F0aW9uIG1pZGRsZXdhcmVcbiAqIENoZWNrcyBpZiB0aGUgdXNlciBpcyBhdXRoZW50aWNhdGVkIGFuZCBhZGRzIHRoZSB1c2VyIHRvIHRoZSBjb250ZXh0XG4gKi9cbmNvbnN0IGlzQXV0aGVkID0gdC5taWRkbGV3YXJlKCh7IGN0eCwgbmV4dCB9KSA9PiB7XG4gIGlmICghY3R4LnVzZXIpIHRocm93IG5ldyBUUlBDRXJyb3Ioe1xuICAgIGNvZGU6ICdVTkFVVEhPUklaRUQnLFxuICAgIG1lc3NhZ2U6ICdZb3UgbXVzdCBiZSBsb2dnZWQgaW4gdG8gYWNjZXNzIHRoaXMgcmVzb3VyY2UnXG4gIH0pO1xuICByZXR1cm4gbmV4dCh7IGN0eDogeyAuLi5jdHgsIHVzZXI6IGN0eC51c2VyISB9IH0pO1xufSk7XG5cbi8qKlxuICogUm9sZS1iYXNlZCBhdXRob3JpemF0aW9uIG1pZGRsZXdhcmVcbiAqIENoZWNrcyBpZiB0aGUgdXNlciBoYXMgdGhlIHJlcXVpcmVkIHJvbGVcbiAqIEBwYXJhbSByZXF1aXJlZFJvbGVzIEFycmF5IG9mIHJvbGVzIHRoYXQgYXJlIGFsbG93ZWQgdG8gYWNjZXNzIHRoZSByZXNvdXJjZVxuICovXG5leHBvcnQgY29uc3QgaGFzUm9sZSA9IChyZXF1aXJlZFJvbGVzOiBzdHJpbmdbXSkgPT5cbiAgdC5taWRkbGV3YXJlKCh7IGN0eCwgbmV4dCB9KSA9PiB7XG4gICAgaWYgKCFjdHgudXNlcikge1xuICAgICAgdGhyb3cgbmV3IFRSUENFcnJvcih7XG4gICAgICAgIGNvZGU6ICdVTkFVVEhPUklaRUQnLFxuICAgICAgICBtZXNzYWdlOiAnWW91IG11c3QgYmUgbG9nZ2VkIGluIHRvIGFjY2VzcyB0aGlzIHJlc291cmNlJyxcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIC8vIEdldCB1c2VyIHJvbGVzIGZyb20gdGhlIHNlc3Npb24gY2xhaW1zXG4gICAgY29uc3QgdXNlclJvbGVzID0gY3R4LnNlc3Npb24/LnVzZXI/LmFwcF9tZXRhZGF0YT8ucm9sZXMgfHwgW107XG4gICAgXG4gICAgLy8gQ2hlY2sgaWYgdGhlIHVzZXIgaGFzIGFueSBvZiB0aGUgcmVxdWlyZWQgcm9sZXNcbiAgICBjb25zdCBoYXNSZXF1aXJlZFJvbGUgPSByZXF1aXJlZFJvbGVzLnNvbWUocm9sZSA9PiB1c2VyUm9sZXMuaW5jbHVkZXMocm9sZSkpO1xuICAgIFxuICAgIGlmICghaGFzUmVxdWlyZWRSb2xlKSB7XG4gICAgICB0aHJvdyBuZXcgVFJQQ0Vycm9yKHtcbiAgICAgICAgY29kZTogJ0ZPUkJJRERFTicsXG4gICAgICAgIG1lc3NhZ2U6ICdZb3UgZG8gbm90IGhhdmUgcGVybWlzc2lvbiB0byBhY2Nlc3MgdGhpcyByZXNvdXJjZScsXG4gICAgICB9KTtcbiAgICB9XG4gICAgXG4gICAgcmV0dXJuIG5leHQoe1xuICAgICAgY3R4OiB7XG4gICAgICAgIC4uLmN0eCxcbiAgICAgICAgdXNlcjogY3R4LnVzZXIsXG4gICAgICAgIHJvbGVzOiB1c2VyUm9sZXMsXG4gICAgICB9LFxuICAgIH0pO1xuICB9KTtcblxuLyoqXG4gKiBSYXRlIGxpbWl0aW5nIG1pZGRsZXdhcmVcbiAqIExpbWl0cyB0aGUgbnVtYmVyIG9mIHJlcXVlc3RzIGEgdXNlciBjYW4gbWFrZSBpbiBhIGdpdmVuIHRpbWUgcGVyaW9kXG4gKiBAcGFyYW0gbGltaXQgTWF4aW11bSBudW1iZXIgb2YgcmVxdWVzdHNcbiAqIEBwYXJhbSB0aW1lV2luZG93TXMgVGltZSB3aW5kb3cgaW4gbWlsbGlzZWNvbmRzXG4gKi9cbmV4cG9ydCBjb25zdCByYXRlTGltaXQgPSAobGltaXQ6IG51bWJlciwgdGltZVdpbmRvd01zOiBudW1iZXIgPSA2MDAwMCkgPT4ge1xuICAvLyBTaW1wbGUgaW4tbWVtb3J5IHN0b3JlIGZvciByYXRlIGxpbWl0aW5nXG4gIC8vIEluIHByb2R1Y3Rpb24sIHVzZSBSZWRpcyBvciBhbm90aGVyIGRpc3RyaWJ1dGVkIHN0b3JlXG4gIGNvbnN0IHN0b3JlID0gbmV3IE1hcDxzdHJpbmcsIHsgY291bnQ6IG51bWJlciwgcmVzZXRUaW1lOiBudW1iZXIgfT4oKTtcbiAgXG4gIHJldHVybiB0Lm1pZGRsZXdhcmUoKHsgY3R4LCBuZXh0IH0pID0+IHtcbiAgICBpZiAoIWN0eC51c2VyKSB7XG4gICAgICByZXR1cm4gbmV4dCh7IGN0eCB9KTtcbiAgICB9XG4gICAgXG4gICAgY29uc3QgdXNlcklkID0gY3R4LnVzZXIuaWQ7XG4gICAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTtcbiAgICBjb25zdCB1c2VyUmF0ZUxpbWl0ID0gc3RvcmUuZ2V0KHVzZXJJZCk7XG4gICAgXG4gICAgaWYgKCF1c2VyUmF0ZUxpbWl0IHx8IG5vdyA+IHVzZXJSYXRlTGltaXQucmVzZXRUaW1lKSB7XG4gICAgICAvLyBGaXJzdCByZXF1ZXN0IG9yIHJlc2V0IHRpbWUgaGFzIHBhc3NlZFxuICAgICAgc3RvcmUuc2V0KHVzZXJJZCwgeyBjb3VudDogMSwgcmVzZXRUaW1lOiBub3cgKyB0aW1lV2luZG93TXMgfSk7XG4gICAgICByZXR1cm4gbmV4dCh7IGN0eCB9KTtcbiAgICB9XG4gICAgXG4gICAgaWYgKHVzZXJSYXRlTGltaXQuY291bnQgPj0gbGltaXQpIHtcbiAgICAgIC8vIFJhdGUgbGltaXQgZXhjZWVkZWRcbiAgICAgIHRocm93IG5ldyBUUlBDRXJyb3Ioe1xuICAgICAgICBjb2RlOiAnVE9PX01BTllfUkVRVUVTVFMnLFxuICAgICAgICBtZXNzYWdlOiAnUmF0ZSBsaW1pdCBleGNlZWRlZC4gUGxlYXNlIHRyeSBhZ2FpbiBsYXRlci4nLFxuICAgICAgfSk7XG4gICAgfVxuICAgIFxuICAgIC8vIEluY3JlbWVudCByZXF1ZXN0IGNvdW50XG4gICAgdXNlclJhdGVMaW1pdC5jb3VudCArPSAxO1xuICAgIHN0b3JlLnNldCh1c2VySWQsIHVzZXJSYXRlTGltaXQpO1xuICAgIFxuICAgIHJldHVybiBuZXh0KHsgY3R4IH0pO1xuICB9KTtcbn07XG5cbi8vIEV4cG9ydCBwcm9jZWR1cmVzIHdpdGggbWlkZGxld2FyZVxuZXhwb3J0IGNvbnN0IHByb3RlY3RlZFByb2NlZHVyZSA9IHQucHJvY2VkdXJlLnVzZShpc0F1dGhlZCk7XG4iXSwibmFtZXMiOlsiaW5pdFRSUEMiLCJUUlBDRXJyb3IiLCJzdXBlcmpzb24iLCJ0IiwiY29udGV4dCIsImNyZWF0ZSIsInRyYW5zZm9ybWVyIiwicm91dGVyIiwicHVibGljUHJvY2VkdXJlIiwicHJvY2VkdXJlIiwibWlkZGxld2FyZSIsImlzQXV0aGVkIiwiY3R4IiwibmV4dCIsInVzZXIiLCJjb2RlIiwibWVzc2FnZSIsImhhc1JvbGUiLCJyZXF1aXJlZFJvbGVzIiwidXNlclJvbGVzIiwic2Vzc2lvbiIsImFwcF9tZXRhZGF0YSIsInJvbGVzIiwiaGFzUmVxdWlyZWRSb2xlIiwic29tZSIsInJvbGUiLCJpbmNsdWRlcyIsInJhdGVMaW1pdCIsImxpbWl0IiwidGltZVdpbmRvd01zIiwic3RvcmUiLCJNYXAiLCJ1c2VySWQiLCJpZCIsIm5vdyIsIkRhdGUiLCJ1c2VyUmF0ZUxpbWl0IiwiZ2V0IiwicmVzZXRUaW1lIiwic2V0IiwiY291bnQiLCJwcm90ZWN0ZWRQcm9jZWR1cmUiLCJ1c2UiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../packages/server/src/trpc.ts\n");

/***/ }),

/***/ "(rsc)/./app/api/trpc/[trpc]/route.ts":
/*!**************************************!*\
  !*** ./app/api/trpc/[trpc]/route.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DELETE: () => (/* binding */ DELETE),\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   HEAD: () => (/* binding */ HEAD),\n/* harmony export */   OPTIONS: () => (/* binding */ OPTIONS),\n/* harmony export */   PATCH: () => (/* binding */ PATCH),\n/* harmony export */   POST: () => (/* binding */ POST),\n/* harmony export */   PUT: () => (/* binding */ PUT)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_app_render_work_unit_async_storage_external_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/app-render/work-unit-async-storage.external.js */ \"./work-unit-async-storage.external\");\n/* harmony import */ var next_dist_server_app_render_work_unit_async_storage_external_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_app_render_work_unit_async_storage_external_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _codexcrm_server__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @codexcrm/server */ \"(rsc)/../../packages/server/src/index.ts\");\n/* harmony import */ var _trpc_server_adapters_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @trpc/server/adapters/fetch */ \"(rsc)/../../node_modules/.pnpm/@trpc+server@11.4.2_typescript@5.8.3/node_modules/@trpc/server/dist/adapters/fetch/index.mjs\");\n/* harmony import */ var _sentry_nextjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/nextjs */ \"(rsc)/../../node_modules/.pnpm/@sentry+nextjs@9.30.0_@opentelemetry+context-async-hooks@1.30.1_@opentelemetry+api@1.9._03a156d3e61bcf2107ae8fdb31670b94/node_modules/@sentry/nextjs/build/cjs/index.server.js\");\n/* harmony import */ var _sentry_nextjs__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_sentry_nextjs__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n\n/**\n * tRPC API endpoint configuration\n * Handles both GET and POST requests for tRPC procedures\n */ // Define the tRPC endpoint path as a constant for maintainability\nconst TRPC_ENDPOINT = '/api/trpc';\n/**\n * Main request handler for tRPC API calls\n */ const GET$1 = async (req)=>{\n    console.warn(`[TRPC API] Handling ${req.method} request to ${req.url}`);\n    try {\n        // Log the headers at debug level for detailed troubleshooting only\n        if (true) {\n            const headers = Object.fromEntries(req.headers.entries());\n            // Use debug level for potentially sensitive or verbose information\n            console.warn('[TRPC API] Request headers:', JSON.stringify(headers, null, 2));\n        }\n        // Handle the request with tRPC's fetchRequestHandler\n        const response = await (0,_trpc_server_adapters_fetch__WEBPACK_IMPORTED_MODULE_2__.fetchRequestHandler)({\n            endpoint: TRPC_ENDPOINT,\n            req,\n            router: _codexcrm_server__WEBPACK_IMPORTED_MODULE_1__.appRouter,\n            // Pass the request object to createContext with proper error handling\n            createContext: async ()=>{\n                try {\n                    const ctx = await (0,_codexcrm_server__WEBPACK_IMPORTED_MODULE_1__.createContext)({\n                        req\n                    });\n                    return ctx;\n                } catch (contextError) {\n                    console.error('[TRPC API] Context creation error:', contextError);\n                    throw contextError;\n                }\n            },\n            // Configure error handling based on environment\n            onError:  true ? ({ path, error })=>{\n                console.error(`❌ [TRPC API] Failed on ${path}: ${error.message}`);\n                console.error(error.stack);\n            } : 0\n        });\n        console.warn(`[TRPC API] Response status: ${response.status}`);\n        return response;\n    } catch (error) {\n        console.error('[TRPC API] Unhandled error:', error);\n        // Create a standardized error response\n        const errorResponse = {\n            error: 'Internal Server Error',\n            // Provide generic message in production, detailed in development\n            message: 'An unexpected error occurred.',\n            // Log detailed error information on the server for debugging purposes\n            ...error instanceof Error ? {\n                debugInfo: {\n                    message: error.message,\n                    stack: error.stack\n                }\n            } : {},\n            // Add error code for easier client-side handling\n            code: 'INTERNAL_SERVER_ERROR'\n        };\n        return new Response(JSON.stringify(errorResponse), {\n            status: 500,\n            headers: {\n                'content-type': 'application/json'\n            }\n        });\n    }\n};\n// Use the same handler for POST requests\nconst POST$1 = GET$1;\n\n// @ts-expect-error Because we cannot be sure if the RequestAsyncStorage module exists (it is not part of the Next.js public\n// API) we use a shim if it doesn't exist. The logic for this is in the wrapping loader.\n\nconst asyncStorageModule = { ...next_dist_server_app_render_work_unit_async_storage_external_js__WEBPACK_IMPORTED_MODULE_0__ } ;\n\nconst requestAsyncStorage =\n  'workUnitAsyncStorage' in asyncStorageModule\n    ? asyncStorageModule.workUnitAsyncStorage\n    : 'requestAsyncStorage' in asyncStorageModule\n      ? asyncStorageModule.requestAsyncStorage\n      : undefined;\n\nfunction wrapHandler(handler, method) {\n  // Running the instrumentation code during the build phase will mark any function as \"dynamic\" because we're accessing\n  // the Request object. We do not want to turn handlers dynamic so we skip instrumentation in the build phase.\n  if (process.env.NEXT_PHASE === 'phase-production-build') {\n    return handler;\n  }\n\n  if (typeof handler !== 'function') {\n    return handler;\n  }\n\n  return new Proxy(handler, {\n    apply: (originalFunction, thisArg, args) => {\n      let headers = undefined;\n\n      // We try-catch here just in case the API around `requestAsyncStorage` changes unexpectedly since it is not public API\n      try {\n        const requestAsyncStore = requestAsyncStorage?.getStore() ;\n        headers = requestAsyncStore?.headers;\n      } catch (e) {\n        /** empty */\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return _sentry_nextjs__WEBPACK_IMPORTED_MODULE_3__.wrapRouteHandlerWithSentry(originalFunction , {\n        method,\n        parameterizedRoute: '/api/trpc/[trpc]',\n        headers,\n      }).apply(thisArg, args);\n    },\n  });\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst GET = wrapHandler(GET$1 , 'GET');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst POST = wrapHandler(POST$1 , 'POST');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst PUT = wrapHandler(undefined , 'PUT');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst PATCH = wrapHandler(undefined , 'PATCH');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst DELETE = wrapHandler(undefined , 'DELETE');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst HEAD = wrapHandler(undefined , 'HEAD');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst OPTIONS = wrapHandler(undefined , 'OPTIONS');\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/trpc/[trpc]/route.ts\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/next@15.3.1_@babel+core@7.27.4_@opentelemetry+api@1.9.0_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!*********************************************************************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/next@15.3.1_@babel+core@7.27.4_@opentelemetry+api@1.9.0_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \*********************************************************************************************************************************************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "?322c":
/*!****************************!*\
  !*** bufferutil (ignored) ***!
  \****************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?c822":
/*!********************************!*\
  !*** utf-8-validate (ignored) ***!
  \********************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "async_hooks":
/*!******************************!*\
  !*** external "async_hooks" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("async_hooks");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "child_process":
/*!********************************!*\
  !*** external "child_process" ***!
  \********************************/
/***/ ((module) => {

"use strict";
module.exports = require("child_process");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "diagnostics_channel":
/*!**************************************!*\
  !*** external "diagnostics_channel" ***!
  \**************************************/
/***/ ((module) => {

"use strict";
module.exports = require("diagnostics_channel");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "import-in-the-middle":
/*!***************************************!*\
  !*** external "import-in-the-middle" ***!
  \***************************************/
/***/ ((module) => {

"use strict";
module.exports = require("import-in-the-middle");

/***/ }),

/***/ "module":
/*!*************************!*\
  !*** external "module" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("module");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "node:child_process":
/*!*************************************!*\
  !*** external "node:child_process" ***!
  \*************************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:child_process");

/***/ }),

/***/ "node:diagnostics_channel":
/*!*******************************************!*\
  !*** external "node:diagnostics_channel" ***!
  \*******************************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:diagnostics_channel");

/***/ }),

/***/ "node:fs":
/*!**************************!*\
  !*** external "node:fs" ***!
  \**************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:fs");

/***/ }),

/***/ "node:http":
/*!****************************!*\
  !*** external "node:http" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:http");

/***/ }),

/***/ "node:https":
/*!*****************************!*\
  !*** external "node:https" ***!
  \*****************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:https");

/***/ }),

/***/ "node:inspector":
/*!*********************************!*\
  !*** external "node:inspector" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:inspector");

/***/ }),

/***/ "node:net":
/*!***************************!*\
  !*** external "node:net" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:net");

/***/ }),

/***/ "node:os":
/*!**************************!*\
  !*** external "node:os" ***!
  \**************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:os");

/***/ }),

/***/ "node:path":
/*!****************************!*\
  !*** external "node:path" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:path");

/***/ }),

/***/ "node:readline":
/*!********************************!*\
  !*** external "node:readline" ***!
  \********************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:readline");

/***/ }),

/***/ "node:stream":
/*!******************************!*\
  !*** external "node:stream" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:stream");

/***/ }),

/***/ "node:tls":
/*!***************************!*\
  !*** external "node:tls" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:tls");

/***/ }),

/***/ "node:util":
/*!****************************!*\
  !*** external "node:util" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:util");

/***/ }),

/***/ "node:worker_threads":
/*!**************************************!*\
  !*** external "node:worker_threads" ***!
  \**************************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:worker_threads");

/***/ }),

/***/ "node:zlib":
/*!****************************!*\
  !*** external "node:zlib" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:zlib");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "perf_hooks":
/*!*****************************!*\
  !*** external "perf_hooks" ***!
  \*****************************/
/***/ ((module) => {

"use strict";
module.exports = require("perf_hooks");

/***/ }),

/***/ "process":
/*!**************************!*\
  !*** external "process" ***!
  \**************************/
/***/ ((module) => {

"use strict";
module.exports = require("process");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("punycode");

/***/ }),

/***/ "require-in-the-middle":
/*!****************************************!*\
  !*** external "require-in-the-middle" ***!
  \****************************************/
/***/ ((module) => {

"use strict";
module.exports = require("require-in-the-middle");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ "tty":
/*!**********************!*\
  !*** external "tty" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tty");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "worker_threads":
/*!*********************************!*\
  !*** external "worker_threads" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("worker_threads");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next@15.3.1_@babel+core@7.27.4_@opentelemetry+api@1.9.0_react-dom@19.1.0_react@19.1.0__react@19.1.0","vendor-chunks/@sentry+core@9.30.0","vendor-chunks/@sentry+node@9.30.0","vendor-chunks/@opentelemetry+semantic-conventions@1.34.0","vendor-chunks/@opentelemetry+semantic-conventions@1.28.0","vendor-chunks/@sentry+nextjs@9.30.0_@opentelemetry+context-async-hooks@1.30.1_@opentelemetry+api@1.9._03a156d3e61bcf2107ae8fdb31670b94","vendor-chunks/@opentelemetry+api@1.9.0","vendor-chunks/@opentelemetry+core@1.30.1_@opentelemetry+api@1.9.0","vendor-chunks/@opentelemetry+sdk-trace-base@1.30.1_@opentelemetry+api@1.9.0","vendor-chunks/@sentry+opentelemetry@9.30.0_@opentelemetry+api@1.9.0_@opentelemetry+context-async-hook_b4e16831de4e436fc0ceb619185e4058","vendor-chunks/minimatch@9.0.5","vendor-chunks/@opentelemetry+resources@1.30.1_@opentelemetry+api@1.9.0","vendor-chunks/@opentelemetry+instrumentation-http@0.57.2_@opentelemetry+api@1.9.0","vendor-chunks/semver@7.7.2","vendor-chunks/@opentelemetry+instrumentation@0.57.2_@opentelemetry+api@1.9.0","vendor-chunks/@opentelemetry+instrumentation-pg@0.51.1_@opentelemetry+api@1.9.0","vendor-chunks/@opentelemetry+instrumentation-mongodb@0.52.0_@opentelemetry+api@1.9.0","vendor-chunks/@opentelemetry+instrumentation-graphql@0.47.1_@opentelemetry+api@1.9.0","vendor-chunks/@opentelemetry+instrumentation-amqplib@0.46.1_@opentelemetry+api@1.9.0","vendor-chunks/@opentelemetry+instrumentation-undici@0.10.1_@opentelemetry+api@1.9.0","vendor-chunks/resolve@1.22.8","vendor-chunks/@opentelemetry+instrumentation-express@0.47.1_@opentelemetry+api@1.9.0","vendor-chunks/@opentelemetry+instrumentation-hapi@0.45.2_@opentelemetry+api@1.9.0","vendor-chunks/@opentelemetry+instrumentation-redis-4@0.46.1_@opentelemetry+api@1.9.0","vendor-chunks/@opentelemetry+instrumentation-fs@0.19.1_@opentelemetry+api@1.9.0","vendor-chunks/@opentelemetry+instrumentation-mysql@0.45.1_@opentelemetry+api@1.9.0","vendor-chunks/color-convert@2.0.1","vendor-chunks/@opentelemetry+instrumentation-mongoose@0.46.1_@opentelemetry+api@1.9.0","vendor-chunks/@opentelemetry+instrumentation-mysql2@0.45.2_@opentelemetry+api@1.9.0","vendor-chunks/@opentelemetry+instrumentation-knex@0.44.1_@opentelemetry+api@1.9.0","vendor-chunks/@opentelemetry+instrumentation-kafkajs@0.7.1_@opentelemetry+api@1.9.0","vendor-chunks/@opentelemetry+context-async-hooks@1.30.1_@opentelemetry+api@1.9.0","vendor-chunks/@opentelemetry+instrumentation-connect@0.43.1_@opentelemetry+api@1.9.0","vendor-chunks/@opentelemetry+api-logs@0.57.2","vendor-chunks/@opentelemetry+instrumentation-koa@0.47.1_@opentelemetry+api@1.9.0","vendor-chunks/@opentelemetry+instrumentation-tedious@0.18.1_@opentelemetry+api@1.9.0","vendor-chunks/@opentelemetry+instrumentation-ioredis@0.47.1_@opentelemetry+api@1.9.0","vendor-chunks/@opentelemetry+instrumentation-dataloader@0.16.1_@opentelemetry+api@1.9.0","vendor-chunks/chalk@3.0.0","vendor-chunks/@prisma+instrumentation@6.8.2_@opentelemetry+api@1.9.0","vendor-chunks/@opentelemetry+instrumentation-generic-pool@0.43.1_@opentelemetry+api@1.9.0","vendor-chunks/is-core-module@2.16.1","vendor-chunks/forwarded-parse@2.1.2","vendor-chunks/@opentelemetry+instrumentation-lru-memoizer@0.44.1_@opentelemetry+api@1.9.0","vendor-chunks/brace-expansion@2.0.2","vendor-chunks/color-name@1.1.4","vendor-chunks/ansi-styles@4.3.0","vendor-chunks/stacktrace-parser@0.1.11","vendor-chunks/@opentelemetry+sql-common@0.40.1_@opentelemetry+api@1.9.0","vendor-chunks/shimmer@1.2.1","vendor-chunks/@opentelemetry+redis-common@0.36.2","vendor-chunks/supports-color@7.2.0","vendor-chunks/function-bind@1.1.2","vendor-chunks/path-parse@1.0.7","vendor-chunks/balanced-match@1.0.2","vendor-chunks/@swc+helpers@0.5.15","vendor-chunks/has-flag@4.0.0","vendor-chunks/hasown@2.0.2","vendor-chunks/zod@3.25.67","vendor-chunks/tr46@0.0.3","vendor-chunks/@supabase+auth-js@2.70.0","vendor-chunks/@trpc+server@11.4.2_typescript@5.8.3","vendor-chunks/ws@8.18.2","vendor-chunks/@supabase+realtime-js@2.11.10","vendor-chunks/@supabase+postgrest-js@1.19.4","vendor-chunks/@supabase+node-fetch@2.6.15","vendor-chunks/whatwg-url@5.0.0","vendor-chunks/@supabase+storage-js@2.7.1","vendor-chunks/@supabase+ssr@0.6.1_@supabase+supabase-js@2.50.0","vendor-chunks/superjson@2.2.2","vendor-chunks/@supabase+supabase-js@2.50.0","vendor-chunks/cookie@1.0.2","vendor-chunks/@supabase+functions-js@2.4.4","vendor-chunks/webidl-conversions@3.0.1","vendor-chunks/is-what@4.1.16","vendor-chunks/copy-anything@3.0.5"], () => (__webpack_exec__("(rsc)/../../node_modules/.pnpm/next@15.3.1_@babel+core@7.27.4_@opentelemetry+api@1.9.0_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Ftrpc%2F%5Btrpc%5D%2Froute&page=%2Fapi%2Ftrpc%2F%5Btrpc%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftrpc%2F%5Btrpc%5D%2Froute.ts&appDir=%2FUsers%2Fpeterjamesblizzard%2Fprojects%2Fapp_codexcrmapp%2Fapps%2Fweb%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fpeterjamesblizzard%2Fprojects%2Fapp_codexcrmapp%2Fapps%2Fweb&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();